{"version":3,"sources":["webpack:///./node_modules/react-virtualized/node_modules/@babel/runtime/helpers/nonIterableRest.js","webpack:///./node_modules/react-virtualized/node_modules/@babel/runtime/helpers/getPrototypeOf.js","webpack:///./node_modules/react-virtualized/node_modules/@babel/runtime/helpers/inherits.js","webpack:///./node_modules/react-virtualized/node_modules/@babel/runtime/helpers/typeof.js","webpack:///./node_modules/react-virtualized/node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack:///./node_modules/react-virtualized/node_modules/@babel/runtime/helpers/extends.js","webpack:///./node_modules/react-virtualized/node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","webpack:///./node_modules/react-virtualized/node_modules/@babel/runtime/helpers/arrayWithHoles.js","webpack:///./node_modules/react-virtualized/node_modules/@babel/runtime/helpers/toPropertyKey.js","webpack:///./node_modules/react-virtualized/node_modules/@babel/runtime/helpers/arrayLikeToArray.js","webpack:///./node_modules/react-virtualized/node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","webpack:///./node_modules/react-virtualized/node_modules/@babel/runtime/helpers/classCallCheck.js","webpack:///./node_modules/react-virtualized/node_modules/@babel/runtime/helpers/assertThisInitialized.js","webpack:///./node_modules/react-virtualized/node_modules/@babel/runtime/helpers/createClass.js","webpack:///./node_modules/react-lifecycles-compat/react-lifecycles-compat.es.js","webpack:///./node_modules/react-virtualized/node_modules/@babel/runtime/helpers/setPrototypeOf.js","webpack:///./node_modules/react-virtualized/dist/es/Grid/utils/calculateSizeAndPositionDataAndUpdateScrollOffset.js","webpack:///./node_modules/react-virtualized/dist/es/Grid/utils/CellSizeAndPositionManager.js","webpack:///./node_modules/react-virtualized/dist/es/Grid/utils/maxElementSize.js","webpack:///./node_modules/react-virtualized/dist/es/Grid/utils/ScalingCellSizeAndPositionManager.js","webpack:///./node_modules/react-virtualized/dist/es/utils/createCallbackMemoizer.js","webpack:///./node_modules/react-virtualized/dist/es/Grid/defaultOverscanIndicesGetter.js","webpack:///./node_modules/react-virtualized/dist/es/Grid/utils/updateScrollIndexHelper.js","webpack:///./node_modules/react-virtualized/dist/es/Grid/defaultCellRangeRenderer.js","webpack:///./node_modules/dom-helpers/esm/canUseDOM.js","webpack:///./node_modules/dom-helpers/esm/scrollbarSize.js","webpack:///./node_modules/react-virtualized/dist/es/utils/animationFrame.js","webpack:///./node_modules/react-virtualized/dist/es/Grid/Grid.js","webpack:///./node_modules/react-virtualized/dist/es/utils/requestAnimationTimeout.js","webpack:///./node_modules/react-virtualized/dist/es/Grid/accessibilityOverscanIndicesGetter.js","webpack:///./node_modules/react-virtualized/dist/es/ArrowKeyStepper/types.js","webpack:///./node_modules/react-virtualized/dist/es/ArrowKeyStepper/ArrowKeyStepper.js","webpack:///./node_modules/react-virtualized/dist/es/AutoSizer/AutoSizer.js","webpack:///./node_modules/react-virtualized/dist/es/CellMeasurer/CellMeasurer.js","webpack:///./node_modules/react-virtualized/dist/es/CellMeasurer/CellMeasurerCache.js","webpack:///./node_modules/react-virtualized/dist/es/Collection/CollectionView.js","webpack:///./node_modules/react-virtualized/dist/es/Collection/Section.js","webpack:///./node_modules/react-virtualized/dist/es/Collection/SectionManager.js","webpack:///./node_modules/react-virtualized/dist/es/utils/getUpdatedOffsetForIndex.js","webpack:///./node_modules/react-virtualized/dist/es/Collection/Collection.js","webpack:///./node_modules/react-virtualized/dist/es/Collection/utils/calculateSizeAndPositionData.js","webpack:///./node_modules/react-virtualized/dist/es/Collection/index.js","webpack:///./node_modules/react-virtualized/dist/es/ColumnSizer/ColumnSizer.js","webpack:///./node_modules/react-virtualized/dist/es/ColumnSizer/index.js","webpack:///./node_modules/react-virtualized/dist/es/InfiniteLoader/InfiniteLoader.js","webpack:///./node_modules/react-virtualized/dist/es/InfiniteLoader/index.js","webpack:///./node_modules/react-virtualized/dist/es/List/List.js","webpack:///./node_modules/react-virtualized/dist/es/vendor/binarySearchBounds.js","webpack:///./node_modules/react-virtualized/dist/es/vendor/intervalTree.js","webpack:///./node_modules/react-virtualized/dist/es/Masonry/PositionCache.js","webpack:///./node_modules/react-virtualized/dist/es/Masonry/Masonry.js","webpack:///./node_modules/react-virtualized/dist/es/Masonry/createCellPositioner.js","webpack:///./node_modules/react-virtualized/dist/es/Masonry/index.js","webpack:///./node_modules/react-virtualized/dist/es/MultiGrid/CellMeasurerCacheDecorator.js","webpack:///./node_modules/react-virtualized/dist/es/MultiGrid/MultiGrid.js","webpack:///./node_modules/react-virtualized/dist/es/ScrollSync/ScrollSync.js","webpack:///./node_modules/react-virtualized/dist/es/Table/createMultiSort.js","webpack:///./node_modules/react-virtualized/dist/es/Table/defaultCellDataGetter.js","webpack:///./node_modules/react-virtualized/dist/es/Table/defaultCellRenderer.js","webpack:///./node_modules/react-virtualized/dist/es/Table/defaultHeaderRowRenderer.js","webpack:///./node_modules/react-virtualized/dist/es/Table/SortDirection.js","webpack:///./node_modules/react-virtualized/dist/es/Table/SortIndicator.js","webpack:///./node_modules/react-virtualized/dist/es/Table/defaultHeaderRenderer.js","webpack:///./node_modules/react-virtualized/dist/es/Table/defaultRowRenderer.js","webpack:///./node_modules/react-virtualized/dist/es/Table/Column.js","webpack:///./node_modules/react-virtualized/dist/es/Table/Table.js","webpack:///./node_modules/react-virtualized/dist/es/Table/index.js","webpack:///./node_modules/react-virtualized/dist/es/WindowScroller/utils/onScroll.js","webpack:///./node_modules/react-virtualized/dist/es/WindowScroller/utils/dimensions.js","webpack:///./node_modules/react-virtualized/dist/es/WindowScroller/WindowScroller.js","webpack:///./node_modules/react-virtualized/node_modules/@babel/runtime/helpers/defineProperty.js","webpack:///./node_modules/react-virtualized/node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack:///./node_modules/react-virtualized/node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack:///./node_modules/react-virtualized/node_modules/@babel/runtime/helpers/iterableToArray.js","webpack:///./node_modules/react-virtualized/node_modules/@babel/runtime/helpers/slicedToArray.js","webpack:///./node_modules/react-virtualized/node_modules/@babel/runtime/helpers/toPrimitive.js","webpack:///./node_modules/react-virtualized/dist/es/vendor/detectElementResize.js","webpack:///./node_modules/react-virtualized/node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","webpack:///./node_modules/react-virtualized/node_modules/@babel/runtime/helpers/objectWithoutProperties.js","webpack:///./node_modules/react-virtualized/node_modules/@babel/runtime/helpers/objectWithoutPropertiesLoose.js"],"names":["module","exports","TypeError","__esModule","_getPrototypeOf","o","Object","setPrototypeOf","getPrototypeOf","bind","__proto__","subClass","superClass","prototype","create","constructor","value","writable","configurable","defineProperty","_typeof","obj","Symbol","iterator","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","arr","_extends","assign","target","i","arguments","length","source","key","hasOwnProperty","call","apply","this","arrayLikeToArray","minLen","n","toString","slice","name","Array","from","test","isArray","toPrimitive","arg","String","len","arr2","assertThisInitialized","self","instance","Constructor","ReferenceError","toPropertyKey","_defineProperties","props","descriptor","enumerable","protoProps","staticProps","componentWillMount","state","getDerivedStateFromProps","undefined","setState","componentWillReceiveProps","nextProps","prevState","componentWillUpdate","nextState","prevProps","__reactInternalSnapshotFlag","__reactInternalSnapshot","getSnapshotBeforeUpdate","polyfill","Component","isReactComponent","Error","foundWillMountName","foundWillReceivePropsName","foundWillUpdateName","UNSAFE_componentWillMount","UNSAFE_componentWillReceiveProps","UNSAFE_componentWillUpdate","componentName","displayName","newApiName","componentDidUpdate","maybeSnapshot","snapshot","__suppressDeprecationWarning","_setPrototypeOf","p","calculateSizeAndPositionDataAndUpdateScrollOffset","_ref","cellCount","cellSize","computeMetadataCallback","computeMetadataCallbackProps","nextCellsCount","nextCellSize","nextScrollToIndex","scrollToIndex","updateScrollOffsetForScrollToIndex","CellSizeAndPositionManager","cellSizeGetter","estimatedCellSize","_cellSizeGetter","_cellCount","_estimatedCellSize","_ref2","_lastMeasuredIndex","index","concat","lastMeasuredCellSizeAndPosition","getSizeAndPositionOfLastMeasuredCell","offset","size","isNaN","_cellSizeAndPositionData","_lastBatchedIndex","_ref3","_ref3$align","align","containerSize","currentOffset","targetIndex","idealOffset","datum","getSizeAndPositionOfCell","maxOffset","minOffset","Math","max","min","totalSize","getTotalSize","params","start","_findNearestCell","stop","high","low","middle","floor","interval","_binarySearch","lastMeasuredIndex","_exponentialSearch","getMaxElementSize","window","chrome","ScalingCellSizeAndPositionManager","_ref$maxScrollSize","maxScrollSize","_cellSizeAndPositionManager","_maxScrollSize","configure","getCellCount","getEstimatedCellSize","getLastMeasuredIndex","safeTotalSize","offsetPercentage","_getOffsetPercentage","round","_safeOffsetToOffset","getUpdatedOffsetForIndex","_offsetToSafeOffset","_ref4","getVisibleCellRange","resetCell","_ref5","_ref6","_ref7","createCallbackMemoizer","requireAllKeys","cachedIndices","callback","indices","keys","allInitialized","every","indexChanged","some","cachedValue","join","defaultOverscanIndicesGetter","overscanCellsCount","scrollDirection","startIndex","stopIndex","overscanStartIndex","overscanStopIndex","updateScrollIndexHelper","cellSizeAndPositionManager","previousCellsCount","previousCellSize","previousScrollToAlignment","previousScrollToIndex","previousSize","scrollOffset","scrollToAlignment","sizeJustIncreasedFromZero","updateScrollIndexCallback","hasScrollToIndex","defaultCellRangeRenderer","cellCache","cellRenderer","columnSizeAndPositionManager","columnStartIndex","columnStopIndex","deferredMeasurementCache","horizontalOffsetAdjustment","isScrolling","isScrollingOptOut","parent","rowSizeAndPositionManager","rowStartIndex","rowStopIndex","styleCache","verticalOffsetAdjustment","visibleColumnIndices","visibleRowIndices","renderedCells","areOffsetsAdjusted","canCacheStyle","rowIndex","rowDatum","columnIndex","columnDatum","isVisible","style","has","height","left","position","top","width","cellRendererParams","renderedCell","push","win","recalc","canUseDOM","scrollDiv","document","createElement","overflow","body","appendChild","offsetWidth","clientWidth","removeChild","_class","_temp","request","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","cancel","cancelAnimationFrame","webkitCancelAnimationFrame","mozCancelAnimationFrame","oCancelAnimationFrame","msCancelAnimationFrame","id","clearTimeout","raf","caf","frame","delay","Promise","resolve","then","Date","now","timeout","ownKeys","object","enumerableOnly","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","_objectSpread","forEach","getOwnPropertyDescriptors","defineProperties","SCROLL_POSITION_CHANGE_REASONS","_React$PureComponent","Grid","_this","_disablePointerEventsTimeoutId","needToResetStyleCache","onSectionRendered","_onGridRenderedMemoizer","columnOverscanStartIndex","_columnStartIndex","columnOverscanStopIndex","_columnStopIndex","_renderedColumnStartIndex","_renderedColumnStopIndex","rowOverscanStartIndex","_rowStartIndex","rowOverscanStopIndex","_rowStopIndex","_renderedRowStartIndex","_renderedRowStopIndex","ref","_scrollingContainer","event","handleScrollEvent","columnCount","_wrapSizeGetter","columnWidth","_getEstimatedColumnSize","rowCount","rowHeight","_getEstimatedRowSize","instanceProps","prevColumnWidth","prevRowHeight","prevColumnCount","prevRowCount","prevIsScrolling","prevScrollToColumn","scrollToColumn","prevScrollToRow","scrollToRow","scrollbarSize","scrollbarSizeMeasured","scrollDirectionHorizontal","scrollDirectionVertical","scrollLeft","scrollTop","scrollPositionChangeReason","_initialScrollTop","_getCalculatedScrollTop","_initialScrollLeft","_getCalculatedScrollLeft","_ref$alignment","alignment","_ref$columnIndex","_ref$rowIndex","offsetProps","_ref2$scrollLeft","scrollLeftParam","_ref2$scrollTop","scrollTopParam","_debounceScrollEnded","_this$props","autoHeight","autoWidth","totalRowsHeight","totalColumnsWidth","newState","_invokeOnScrollMemoizer","_deferredInvalidateColumnIndex","_deferredInvalidateRowIndex","_this$props2","_ref4$columnIndex","_ref4$rowIndex","_this$props3","_recomputeScrollLeftFlag","_recomputeScrollTopFlag","_styleCache","_cellCache","forceUpdate","_updateScrollLeftForScrollToColumn","_updateScrollTopForScrollToRow","_this$props4","getScrollbarSize","_handleInvalidatedGridSize","stateUpdate","_getScrollToPositionStateUpdate","sizeIsBiggerThanZero","_invokeOnGridRenderedHelper","_maybeCallOnScrollbarPresenceChange","_this2","_this$props5","_this$state","columnOrRowCountJustIncreasedFromZero","_this$props6","autoContainerWidth","className","containerProps","containerRole","containerStyle","noContentRenderer","role","tabIndex","_this$state2","_isScrolling","gridStyle","boxSizing","direction","WebkitOverflowScrolling","willChange","_resetStyleCache","_calculateChildrenToRender","verticalScrollBarSize","horizontalScrollBarSize","_horizontalScrollBarSize","_verticalScrollBarSize","_scrollbarPresenceChanged","overflowX","overflowY","childrenToDisplay","_childrenToDisplay","showNoContentRenderer","_setScrollingContainerRef","onScroll","_onScroll","maxWidth","maxHeight","pointerEvents","cellRangeRenderer","overscanColumnCount","overscanIndicesGetter","overscanRowCount","getOffsetAdjustment","overscanColumnIndices","overscanRowIndices","hasFixedHeight","hasFixedWidth","scrollingResetTimeInterval","_debounceScrollEndedCallback","recomputeGridSize","_this3","_onScrollMemoizer","_this3$props","clientHeight","scrollHeight","scrollWidth","Boolean","onScrollbarPresenceChange","horizontal","vertical","_ref8","_getScrollLeftForScrollToColumnStateUpdate","_getScrollTopForScrollToRowStateUpdate","maybeStateA","maybeStateB","estimatedColumnSize","estimatedRowSize","_ref9","finalColumn","scrollBarSize","calculatedScrollLeft","finalRow","calculatedScrollTop","ArrowKeyStepper","_getPrototypeOf2","_len","args","_key","disabled","mode","_this$_getScrollState","_getScrollState","scrollToColumnPrevious","scrollToRowPrevious","_this$_getScrollState2","preventDefault","_updateScrollState","children","_this$_getScrollState3","onKeyDown","_onKeyDown","_onSectionRendered","isControlled","onScrollToChange","_React$Component","AutoSizer","defaultHeight","defaultWidth","disableHeight","disableWidth","onResize","_parentNode","offsetHeight","_window","getComputedStyle","paddingLeft","parseInt","paddingRight","paddingTop","paddingBottom","newHeight","newWidth","autoSizer","_autoSizer","nonce","parentNode","ownerDocument","defaultView","HTMLElement","_detectElementResize","addResizeListener","_onResize","removeResizeListener","outerStyle","childParams","_setRef","CellMeasurer","cache","_this$props$columnInd","_this$props$rowIndex","_this$_getCellMeasure","_getCellMeasurements","getHeight","getWidth","set","element","Element","console","warn","_child","_maybeMeasureCell","measure","_measure","registerChild","_registerChild","node","styleWidth","styleHeight","ceil","_this$props2$columnIn","_this$props2$rowIndex","_this$_getCellMeasure2","invalidateCellSizeAfterRender","CellMeasurerCache","_keyMapper","_columnWidthCache","_defaultWidth","_rowHeightCache","_defaultHeight","fixedHeight","fixedWidth","keyMapper","minHeight","minWidth","_hasFixedHeight","_hasFixedWidth","_minHeight","_minWidth","defaultKeyMapper","_cellHeightCache","_cellWidthCache","_updateCachedColumnAndRowSizes","_rowCount","_columnCount","_key2","columnKey","_i","rowKey","get","CollectionView","cellLayoutManager","_onSectionRenderedMemoizer","getLastRenderedIndices","scrollToCell","scrollPosition","getScrollPositionForCell","cellIndex","_setScrollPosition","_enablePointerEventsAfterDelay","isScrollingChange","_scrollbarSize","_cellLayoutManager$ge","totalHeight","totalWidth","cancelable","_scrollbarSizeMeasured","_calculateSizeAndPositionDataOnNextUpdate","_updateScrollPositionForScrollToCell","_invokeOnSectionRenderedHelper","_cellLayoutManager$ge2","horizontalOverscanSize","verticalOverscanSize","_this$state3","_lastRenderedCellCount","_lastRenderedCellLayoutManager","calculateSizeAndPositionData","_cellLayoutManager$ge3","right","bottom","cellRenderers","x","y","collectionStyle","propTypes","Section","_indexMap","_indices","SectionManager","sectionSize","_sectionSize","_cellMetadata","_sections","getSections","section","getCellIndices","map","sectionXStart","sectionXStop","sectionYStart","sectionYStop","sections","sectionX","sectionY","cellMetadatum","addCellIndex","_ref$align","cellOffset","Collection","context","_lastRenderedCellIndices","_isScrollingChange","_setCollectionViewRef","_collectionView","recomputeCellSizesAndPositions","data","cellSizeAndPositionGetter","cellMetadata","sectionManager","registerCell","_sectionManager","_height","_width","cellGroupRenderer","getCellMetadata","cellRendererProps","ColumnSizer","columnMaxWidth","columnMinWidth","_registeredChild","safeColumnMinWidth","safeColumnMaxWidth","adjustedWidth","getColumnWidth","child","InfiniteLoader","_loadMoreRowsMemoizer","_onRowsRendered","autoReload","_doStuff","_lastRenderedStartIndex","_lastRenderedStopIndex","onRowsRendered","unloadedRanges","loadMoreRows","unloadedRange","promise","lastRenderedStartIndex","lastRenderedStopIndex","isRangeVisible","component","currentIndex","recomputeSize","recomputeRowHeights","forceUpdateReactVirtualizedComponent","isRowLoaded","minimumBatchSize","threshold","rangeStartIndex","rangeStopIndex","potentialStopIndex","_index","firstUnloadedRange","_index2","scanForUnloadedRanges","squashedUnloadedRanges","_loadUnloadedRanges","registeredChild","List","rowRenderer","widthDescriptor","getOffsetForCell","measureAllCells","_ref6$columnIndex","_ref6$rowIndex","scrollToPosition","noRowsRenderer","classNames","_cellRenderer","ge","a","c","l","h","m","_GEP","_GEA","gt","_GTP","_GTA","lt","_LTP","_LTA","le","_LEP","_LEA","eq","_EQP","_EQA","IntervalTreeNode","mid","leftPoints","rightPoints","count","proto","copy","b","rebuild","intervals","ntree","createIntervalTree","rebuildWithInterval","rebuildWithoutInterval","idx","indexOf","splice","reportLeftRange","hi","cb","r","reportRightRange","lo","reportRange","compareNumbers","compareBegin","d","compareEnd","pts","sort","leftIntervals","rightIntervals","centerIntervals","s","IntervalTree","root","result","insert","weight","remove","queryPoint","queryInterval","tproto","PositionCache","defaultCellHeight","unmeasuredCellCount","tallestColumnSize","renderCallback","_intervalTree","_leftMap","columnSizeMap","_columnSizeMap","columnHeight","Masonry","eventScrollTop","currentTarget","_getEstimatedTotalHeight","_debounceResetIsScrolling","_positionCache","_invalidateOnUpdateStartIndex","_invalidateOnUpdateStopIndex","_populatePositionCache","_checkInvalidateOnUpdate","_invokeOnScrollCallback","_invokeOnCellsRenderedCallback","_debounceResetIsScrollingId","cellMeasurerCache","overscanByPixels","rowDirection","estimateTotalHeight","shortestColumnSize","measuredCellCount","range","_style","batchSize","_startIndex","_stopIndex","_debounceResetIsScrollingCallback","estimatedColumnCount","_onScrollMemoized","_startIndexMemoized","_stopIndexMemoized","onCellsRendered","cellPositioner","_cellPositioner","setPosition","noop","createCellPositioner","columnHeights","_ref$spacer","spacer","initOrResetDerivedValues","reset","CellMeasurerCacheDecorator","_cellMeasurerCache","_columnIndexOffset","_rowIndexOffset","_params$columnIndexOf","columnIndexOffset","_params$rowIndexOffse","rowIndexOffset","clear","clearAll","MultiGrid","showHorizontalScrollbar","showVerticalScrollbar","_bottomLeftGrid","_bottomRightGrid","rest","fixedRowCount","fixedColumnCount","scrollInfo","_topLeftGrid","_topRightGrid","_fixedColumnCount","_fixedRowCount","_maybeCalculateCachedStyles","_deferredMeasurementCacheBottomLeftGrid","_deferredMeasurementCacheBottomRightGrid","_deferredMeasurementCacheTopRightGrid","_ref7$columnIndex","_ref7$rowIndex","_ref8$columnIndex","_ref8$rowIndex","adjustedColumnIndex","adjustedRowIndex","_leftGridWidth","_topGridHeight","_this$props7","_this$props8","_prepareForRender","_this$state4","_containerOuterStyle","_containerTopStyle","_renderTopLeftGrid","_renderTopRightGrid","_containerBottomStyle","_renderBottomLeftGrid","_renderBottomRightGrid","_getTopGridHeight","leftGridWidth","_getLeftGridWidth","topGridHeight","resetAll","_this$props9","enableFixedColumnScroll","enableFixedRowScroll","styleBottomLeftGrid","styleBottomRightGrid","styleTopLeftGrid","styleTopRightGrid","sizeChange","_lastRenderedHeight","_lastRenderedWidth","leftSizeChange","_lastRenderedColumnWidth","_lastRenderedFixedColumnCount","topSizeChange","_lastRenderedFixedRowCount","_lastRenderedRowHeight","_lastRenderedStyle","_lastRenderedStyleBottomLeftGrid","_bottomLeftGridStyle","_lastRenderedStyleBottomRightGrid","_bottomRightGridStyle","_lastRenderedStyleTopLeftGrid","_topLeftGridStyle","_lastRenderedStyleTopRightGrid","_topRightGridStyle","hideBottomLeftGridScrollbar","additionalRowCount","_getBottomGridHeight","gridWidth","bottomLeftGrid","_cellRendererBottomLeftGrid","classNameBottomLeftGrid","_onScrollTop","_bottomLeftGridRef","_rowHeightBottomGrid","_cellRendererBottomRightGrid","classNameBottomRightGrid","_columnWidthRightGrid","_onScrollbarPresenceChange","_bottomRightGridRef","_getRightGridWidth","classNameTopLeftGrid","_topLeftGridRef","hideTopRightGridScrollbar","_this$state5","additionalColumnCount","additionalHeight","gridHeight","topRightGrid","_cellRendererTopRightGrid","classNameTopRightGrid","_onScrollLeft","_topRightGridRef","ScrollSync","createMultiSort","sortCallback","defaultSortBy","_ref$defaultSortDirec","defaultSortDirection","sortBy","sortDirection","dataKey","shiftKey","ctrlKey","metaKey","defaultCellDataGetter","rowData","defaultCellRenderer","cellData","defaultHeaderRowRenderer","columns","ASC","DESC","SortIndicator","viewBox","fill","defaultHeaderRenderer","label","showSortIndicator","title","defaultRowRenderer","onRowClick","onRowDoubleClick","onRowMouseOut","onRowMouseOver","onRowRightClick","a11yProps","onClick","onDoubleClick","onMouseOut","onMouseOver","onContextMenu","Column","cellDataGetter","flexGrow","flexShrink","headerRenderer","Table","scrollbarWidth","_createColumn","_createRow","_ref3$columnIndex","_ref3$rowIndex","_Grid","_setScrollbarWidth","disableHeader","gridClassName","headerHeight","headerRowRenderer","rowClassName","rowStyle","availableRowsHeight","rowClass","rowStyleObject","_cachedColumnStyles","toArray","column","flexStyles","_getFlexStyleForColumn","_getHeaderColumns","onColumnClick","_column$props","columnData","headerOnClick","headerOnKeyDown","headerTabIndex","headerAriaSort","headerAriaLabel","headerClassName","headerStyle","onHeaderClick","_column$props2","disableSort","sortEnabled","ReactVirtualized__Table__sortableHeaderColumn","renderedHeader","newSortDirection","rowGetter","flattenedStyle","_getRowHeight","customStyle","flexValue","flex","msFlex","WebkitFlex","_this4","_createHeader","getScrollbarWidth","mountedInstances","originalBodyPointerEvents","disablePointerEventsTimeoutId","enablePointerEventsIfDisabled","enablePointerEventsAfterDelayCallback","__resetIsScrolling","onScrollWindow","maximumTimeout","enablePointerEventsAfterDelay","scrollElement","__handleWindowScrollEvent","registerScrollListener","addEventListener","unregisterScrollListener","removeEventListener","isWindow","getBoundingBox","getBoundingClientRect","getDimensions","innerHeight","innerWidth","serverHeight","serverWidth","getPositionOffset","container","documentElement","containerElement","elementRect","containerRect","getScrollOffset","_elementRect","_containerRect","scrollY","scrollX","getWindow","WindowScroller","updatePosition","scrollTo","_positionFromTop","_isMounted","_positionFromLeft","thisNode","dimensions","_registerResizeListener","prevScrollElement","_unregisterResizeListener","onChildScroll","_onChildScroll","iter","arrayWithHoles","iterableToArrayLimit","nonIterableRest","input","hint","prim","res","Number","createDetectElementResize","hostWindow","attachEvent","global","requestFrame","fn","cancelFrame","resetTriggers","triggers","__resizeTriggers__","expand","firstElementChild","contract","lastElementChild","expandChild","scrollListener","e","__resizeRAF__","__resizeLast__","checkTriggers","__resizeListeners__","animation","keyframeprefix","animationstartevent","domPrefixes","split","startEvents","elm","animationName","toLowerCase","animationKeyframes","animationStyle","doc","elementStyle","getElementById","css","head","getElementsByTagName","type","setAttribute","styleSheet","cssText","createTextNode","createStyles","resizeTriggersHtml","trustedTypes","staticPolicy","createPolicy","createHTML","innerHTML","__animationListener__","detachEvent","_s","_e","_x","_r","_arr","_n","_d","next","done","err","objectWithoutPropertiesLoose","excluded","sourceSymbolKeys","propertyIsEnumerable","sourceKeys"],"mappings":"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","file":"static/js/react-virtualized.bfcb3ba7.chunk.js","sourcesContent":["function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nmodule.exports = _nonIterableRest, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _getPrototypeOf(o);\n}\nmodule.exports = _getPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var setPrototypeOf = require(\"./setPrototypeOf.js\");\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\nmodule.exports = _inherits, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(obj);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayWithoutHoles = require(\"./arrayWithoutHoles.js\");\nvar iterableToArray = require(\"./iterableToArray.js\");\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\nvar nonIterableSpread = require(\"./nonIterableSpread.js\");\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\nmodule.exports = _toConsumableArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _extends() {\n  module.exports = _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _extends.apply(this, arguments);\n}\nmodule.exports = _extends, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\nmodule.exports = _unsupportedIterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\nmodule.exports = _arrayWithHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar toPrimitive = require(\"./toPrimitive.js\");\nfunction _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}\nmodule.exports = _toPropertyKey, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nmodule.exports = _arrayLikeToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar assertThisInitialized = require(\"./assertThisInitialized.js\");\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return assertThisInitialized(self);\n}\nmodule.exports = _possibleConstructorReturn, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nmodule.exports = _classCallCheck, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nmodule.exports = _assertThisInitialized, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var toPropertyKey = require(\"./toPropertyKey.js\");\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nmodule.exports = _createClass, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nfunction componentWillMount() {\n  // Call this.constructor.gDSFP to support sub-classes.\n  var state = this.constructor.getDerivedStateFromProps(this.props, this.state);\n  if (state !== null && state !== undefined) {\n    this.setState(state);\n  }\n}\n\nfunction componentWillReceiveProps(nextProps) {\n  // Call this.constructor.gDSFP to support sub-classes.\n  // Use the setState() updater to ensure state isn't stale in certain edge cases.\n  function updater(prevState) {\n    var state = this.constructor.getDerivedStateFromProps(nextProps, prevState);\n    return state !== null && state !== undefined ? state : null;\n  }\n  // Binding \"this\" is important for shallow renderer support.\n  this.setState(updater.bind(this));\n}\n\nfunction componentWillUpdate(nextProps, nextState) {\n  try {\n    var prevProps = this.props;\n    var prevState = this.state;\n    this.props = nextProps;\n    this.state = nextState;\n    this.__reactInternalSnapshotFlag = true;\n    this.__reactInternalSnapshot = this.getSnapshotBeforeUpdate(\n      prevProps,\n      prevState\n    );\n  } finally {\n    this.props = prevProps;\n    this.state = prevState;\n  }\n}\n\n// React may warn about cWM/cWRP/cWU methods being deprecated.\n// Add a flag to suppress these warnings for this special case.\ncomponentWillMount.__suppressDeprecationWarning = true;\ncomponentWillReceiveProps.__suppressDeprecationWarning = true;\ncomponentWillUpdate.__suppressDeprecationWarning = true;\n\nfunction polyfill(Component) {\n  var prototype = Component.prototype;\n\n  if (!prototype || !prototype.isReactComponent) {\n    throw new Error('Can only polyfill class components');\n  }\n\n  if (\n    typeof Component.getDerivedStateFromProps !== 'function' &&\n    typeof prototype.getSnapshotBeforeUpdate !== 'function'\n  ) {\n    return Component;\n  }\n\n  // If new component APIs are defined, \"unsafe\" lifecycles won't be called.\n  // Error if any of these lifecycles are present,\n  // Because they would work differently between older and newer (16.3+) versions of React.\n  var foundWillMountName = null;\n  var foundWillReceivePropsName = null;\n  var foundWillUpdateName = null;\n  if (typeof prototype.componentWillMount === 'function') {\n    foundWillMountName = 'componentWillMount';\n  } else if (typeof prototype.UNSAFE_componentWillMount === 'function') {\n    foundWillMountName = 'UNSAFE_componentWillMount';\n  }\n  if (typeof prototype.componentWillReceiveProps === 'function') {\n    foundWillReceivePropsName = 'componentWillReceiveProps';\n  } else if (typeof prototype.UNSAFE_componentWillReceiveProps === 'function') {\n    foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';\n  }\n  if (typeof prototype.componentWillUpdate === 'function') {\n    foundWillUpdateName = 'componentWillUpdate';\n  } else if (typeof prototype.UNSAFE_componentWillUpdate === 'function') {\n    foundWillUpdateName = 'UNSAFE_componentWillUpdate';\n  }\n  if (\n    foundWillMountName !== null ||\n    foundWillReceivePropsName !== null ||\n    foundWillUpdateName !== null\n  ) {\n    var componentName = Component.displayName || Component.name;\n    var newApiName =\n      typeof Component.getDerivedStateFromProps === 'function'\n        ? 'getDerivedStateFromProps()'\n        : 'getSnapshotBeforeUpdate()';\n\n    throw Error(\n      'Unsafe legacy lifecycles will not be called for components using new component APIs.\\n\\n' +\n        componentName +\n        ' uses ' +\n        newApiName +\n        ' but also contains the following legacy lifecycles:' +\n        (foundWillMountName !== null ? '\\n  ' + foundWillMountName : '') +\n        (foundWillReceivePropsName !== null\n          ? '\\n  ' + foundWillReceivePropsName\n          : '') +\n        (foundWillUpdateName !== null ? '\\n  ' + foundWillUpdateName : '') +\n        '\\n\\nThe above lifecycles should be removed. Learn more about this warning here:\\n' +\n        'https://fb.me/react-async-component-lifecycle-hooks'\n    );\n  }\n\n  // React <= 16.2 does not support static getDerivedStateFromProps.\n  // As a workaround, use cWM and cWRP to invoke the new static lifecycle.\n  // Newer versions of React will ignore these lifecycles if gDSFP exists.\n  if (typeof Component.getDerivedStateFromProps === 'function') {\n    prototype.componentWillMount = componentWillMount;\n    prototype.componentWillReceiveProps = componentWillReceiveProps;\n  }\n\n  // React <= 16.2 does not support getSnapshotBeforeUpdate.\n  // As a workaround, use cWU to invoke the new lifecycle.\n  // Newer versions of React will ignore that lifecycle if gSBU exists.\n  if (typeof prototype.getSnapshotBeforeUpdate === 'function') {\n    if (typeof prototype.componentDidUpdate !== 'function') {\n      throw new Error(\n        'Cannot polyfill getSnapshotBeforeUpdate() for components that do not define componentDidUpdate() on the prototype'\n      );\n    }\n\n    prototype.componentWillUpdate = componentWillUpdate;\n\n    var componentDidUpdate = prototype.componentDidUpdate;\n\n    prototype.componentDidUpdate = function componentDidUpdatePolyfill(\n      prevProps,\n      prevState,\n      maybeSnapshot\n    ) {\n      // 16.3+ will not execute our will-update method;\n      // It will pass a snapshot value to did-update though.\n      // Older versions will require our polyfilled will-update value.\n      // We need to handle both cases, but can't just check for the presence of \"maybeSnapshot\",\n      // Because for <= 15.x versions this might be a \"prevContext\" object.\n      // We also can't just check \"__reactInternalSnapshot\",\n      // Because get-snapshot might return a falsy value.\n      // So check for the explicit __reactInternalSnapshotFlag flag to determine behavior.\n      var snapshot = this.__reactInternalSnapshotFlag\n        ? this.__reactInternalSnapshot\n        : maybeSnapshot;\n\n      componentDidUpdate.call(this, prevProps, prevState, snapshot);\n    };\n  }\n\n  return Component;\n}\n\nexport { polyfill };\n","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _setPrototypeOf(o, p);\n}\nmodule.exports = _setPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","/**\n * Helper method that determines when to recalculate row or column metadata.\n */\nexport default function calculateSizeAndPositionDataAndUpdateScrollOffset(_ref) {\n  var cellCount = _ref.cellCount,\n      cellSize = _ref.cellSize,\n      computeMetadataCallback = _ref.computeMetadataCallback,\n      computeMetadataCallbackProps = _ref.computeMetadataCallbackProps,\n      nextCellsCount = _ref.nextCellsCount,\n      nextCellSize = _ref.nextCellSize,\n      nextScrollToIndex = _ref.nextScrollToIndex,\n      scrollToIndex = _ref.scrollToIndex,\n      updateScrollOffsetForScrollToIndex = _ref.updateScrollOffsetForScrollToIndex;\n\n  // Don't compare cell sizes if they are functions because inline functions would cause infinite loops.\n  // In that event users should use the manual recompute methods to inform of changes.\n  if (cellCount !== nextCellsCount || (typeof cellSize === 'number' || typeof nextCellSize === 'number') && cellSize !== nextCellSize) {\n    computeMetadataCallback(computeMetadataCallbackProps); // Updated cell metadata may have hidden the previous scrolled-to item.\n    // In this case we should also update the scrollTop to ensure it stays visible.\n\n    if (scrollToIndex >= 0 && scrollToIndex === nextScrollToIndex) {\n      updateScrollOffsetForScrollToIndex();\n    }\n  }\n}","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\n/**\n * Just-in-time calculates and caches size and position information for a collection of cells.\n */\nvar CellSizeAndPositionManager =\n/*#__PURE__*/\nfunction () {\n  // Cache of size and position data for cells, mapped by cell index.\n  // Note that invalid values may exist in this map so only rely on cells up to this._lastMeasuredIndex\n  // Measurements for cells up to this index can be trusted; cells afterward should be estimated.\n  // Used in deferred mode to track which cells have been queued for measurement.\n  function CellSizeAndPositionManager(_ref) {\n    var cellCount = _ref.cellCount,\n        cellSizeGetter = _ref.cellSizeGetter,\n        estimatedCellSize = _ref.estimatedCellSize;\n\n    _classCallCheck(this, CellSizeAndPositionManager);\n\n    _defineProperty(this, \"_cellSizeAndPositionData\", {});\n\n    _defineProperty(this, \"_lastMeasuredIndex\", -1);\n\n    _defineProperty(this, \"_lastBatchedIndex\", -1);\n\n    _defineProperty(this, \"_cellCount\", void 0);\n\n    _defineProperty(this, \"_cellSizeGetter\", void 0);\n\n    _defineProperty(this, \"_estimatedCellSize\", void 0);\n\n    this._cellSizeGetter = cellSizeGetter;\n    this._cellCount = cellCount;\n    this._estimatedCellSize = estimatedCellSize;\n  }\n\n  _createClass(CellSizeAndPositionManager, [{\n    key: \"areOffsetsAdjusted\",\n    value: function areOffsetsAdjusted() {\n      return false;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure(_ref2) {\n      var cellCount = _ref2.cellCount,\n          estimatedCellSize = _ref2.estimatedCellSize,\n          cellSizeGetter = _ref2.cellSizeGetter;\n      this._cellCount = cellCount;\n      this._estimatedCellSize = estimatedCellSize;\n      this._cellSizeGetter = cellSizeGetter;\n    }\n  }, {\n    key: \"getCellCount\",\n    value: function getCellCount() {\n      return this._cellCount;\n    }\n  }, {\n    key: \"getEstimatedCellSize\",\n    value: function getEstimatedCellSize() {\n      return this._estimatedCellSize;\n    }\n  }, {\n    key: \"getLastMeasuredIndex\",\n    value: function getLastMeasuredIndex() {\n      return this._lastMeasuredIndex;\n    }\n  }, {\n    key: \"getOffsetAdjustment\",\n    value: function getOffsetAdjustment() {\n      return 0;\n    }\n    /**\n     * This method returns the size and position for the cell at the specified index.\n     * It just-in-time calculates (or used cached values) for cells leading up to the index.\n     */\n\n  }, {\n    key: \"getSizeAndPositionOfCell\",\n    value: function getSizeAndPositionOfCell(index) {\n      if (index < 0 || index >= this._cellCount) {\n        throw Error(\"Requested index \".concat(index, \" is outside of range 0..\").concat(this._cellCount));\n      }\n\n      if (index > this._lastMeasuredIndex) {\n        var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n        var offset = lastMeasuredCellSizeAndPosition.offset + lastMeasuredCellSizeAndPosition.size;\n\n        for (var i = this._lastMeasuredIndex + 1; i <= index; i++) {\n          var size = this._cellSizeGetter({\n            index: i\n          }); // undefined or NaN probably means a logic error in the size getter.\n          // null means we're using CellMeasurer and haven't yet measured a given index.\n\n\n          if (size === undefined || isNaN(size)) {\n            throw Error(\"Invalid size returned for cell \".concat(i, \" of value \").concat(size));\n          } else if (size === null) {\n            this._cellSizeAndPositionData[i] = {\n              offset: offset,\n              size: 0\n            };\n            this._lastBatchedIndex = index;\n          } else {\n            this._cellSizeAndPositionData[i] = {\n              offset: offset,\n              size: size\n            };\n            offset += size;\n            this._lastMeasuredIndex = index;\n          }\n        }\n      }\n\n      return this._cellSizeAndPositionData[index];\n    }\n  }, {\n    key: \"getSizeAndPositionOfLastMeasuredCell\",\n    value: function getSizeAndPositionOfLastMeasuredCell() {\n      return this._lastMeasuredIndex >= 0 ? this._cellSizeAndPositionData[this._lastMeasuredIndex] : {\n        offset: 0,\n        size: 0\n      };\n    }\n    /**\n     * Total size of all cells being measured.\n     * This value will be completely estimated initially.\n     * As cells are measured, the estimate will be updated.\n     */\n\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n      var totalSizeOfMeasuredCells = lastMeasuredCellSizeAndPosition.offset + lastMeasuredCellSizeAndPosition.size;\n      var numUnmeasuredCells = this._cellCount - this._lastMeasuredIndex - 1;\n      var totalSizeOfUnmeasuredCells = numUnmeasuredCells * this._estimatedCellSize;\n      return totalSizeOfMeasuredCells + totalSizeOfUnmeasuredCells;\n    }\n    /**\n     * Determines a new offset that ensures a certain cell is visible, given the current offset.\n     * If the cell is already visible then the current offset will be returned.\n     * If the current offset is too great or small, it will be adjusted just enough to ensure the specified index is visible.\n     *\n     * @param align Desired alignment within container; one of \"auto\" (default), \"start\", or \"end\"\n     * @param containerSize Size (width or height) of the container viewport\n     * @param currentOffset Container's current (x or y) offset\n     * @param totalSize Total size (width or height) of all cells\n     * @return Offset to use to ensure the specified cell is visible\n     */\n\n  }, {\n    key: \"getUpdatedOffsetForIndex\",\n    value: function getUpdatedOffsetForIndex(_ref3) {\n      var _ref3$align = _ref3.align,\n          align = _ref3$align === void 0 ? 'auto' : _ref3$align,\n          containerSize = _ref3.containerSize,\n          currentOffset = _ref3.currentOffset,\n          targetIndex = _ref3.targetIndex;\n\n      if (containerSize <= 0) {\n        return 0;\n      }\n\n      var datum = this.getSizeAndPositionOfCell(targetIndex);\n      var maxOffset = datum.offset;\n      var minOffset = maxOffset - containerSize + datum.size;\n      var idealOffset;\n\n      switch (align) {\n        case 'start':\n          idealOffset = maxOffset;\n          break;\n\n        case 'end':\n          idealOffset = minOffset;\n          break;\n\n        case 'center':\n          idealOffset = maxOffset - (containerSize - datum.size) / 2;\n          break;\n\n        default:\n          idealOffset = Math.max(minOffset, Math.min(maxOffset, currentOffset));\n          break;\n      }\n\n      var totalSize = this.getTotalSize();\n      return Math.max(0, Math.min(totalSize - containerSize, idealOffset));\n    }\n  }, {\n    key: \"getVisibleCellRange\",\n    value: function getVisibleCellRange(params) {\n      var containerSize = params.containerSize,\n          offset = params.offset;\n      var totalSize = this.getTotalSize();\n\n      if (totalSize === 0) {\n        return {};\n      }\n\n      var maxOffset = offset + containerSize;\n\n      var start = this._findNearestCell(offset);\n\n      var datum = this.getSizeAndPositionOfCell(start);\n      offset = datum.offset + datum.size;\n      var stop = start;\n\n      while (offset < maxOffset && stop < this._cellCount - 1) {\n        stop++;\n        offset += this.getSizeAndPositionOfCell(stop).size;\n      }\n\n      return {\n        start: start,\n        stop: stop\n      };\n    }\n    /**\n     * Clear all cached values for cells after the specified index.\n     * This method should be called for any cell that has changed its size.\n     * It will not immediately perform any calculations; they'll be performed the next time getSizeAndPositionOfCell() is called.\n     */\n\n  }, {\n    key: \"resetCell\",\n    value: function resetCell(index) {\n      this._lastMeasuredIndex = Math.min(this._lastMeasuredIndex, index - 1);\n    }\n  }, {\n    key: \"_binarySearch\",\n    value: function _binarySearch(high, low, offset) {\n      while (low <= high) {\n        var middle = low + Math.floor((high - low) / 2);\n        var currentOffset = this.getSizeAndPositionOfCell(middle).offset;\n\n        if (currentOffset === offset) {\n          return middle;\n        } else if (currentOffset < offset) {\n          low = middle + 1;\n        } else if (currentOffset > offset) {\n          high = middle - 1;\n        }\n      }\n\n      if (low > 0) {\n        return low - 1;\n      } else {\n        return 0;\n      }\n    }\n  }, {\n    key: \"_exponentialSearch\",\n    value: function _exponentialSearch(index, offset) {\n      var interval = 1;\n\n      while (index < this._cellCount && this.getSizeAndPositionOfCell(index).offset < offset) {\n        index += interval;\n        interval *= 2;\n      }\n\n      return this._binarySearch(Math.min(index, this._cellCount - 1), Math.floor(index / 2), offset);\n    }\n    /**\n     * Searches for the cell (index) nearest the specified offset.\n     *\n     * If no exact match is found the next lowest cell index will be returned.\n     * This allows partially visible cells (with offsets just before/above the fold) to be visible.\n     */\n\n  }, {\n    key: \"_findNearestCell\",\n    value: function _findNearestCell(offset) {\n      if (isNaN(offset)) {\n        throw Error(\"Invalid offset \".concat(offset, \" specified\"));\n      } // Our search algorithms find the nearest match at or below the specified offset.\n      // So make sure the offset is at least 0 or no match will be found.\n\n\n      offset = Math.max(0, offset);\n      var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n      var lastMeasuredIndex = Math.max(0, this._lastMeasuredIndex);\n\n      if (lastMeasuredCellSizeAndPosition.offset >= offset) {\n        // If we've already measured cells within this range just use a binary search as it's faster.\n        return this._binarySearch(lastMeasuredIndex, 0, offset);\n      } else {\n        // If we haven't yet measured this high, fallback to an exponential search with an inner binary search.\n        // The exponential search avoids pre-computing sizes for the full set of cells as a binary search would.\n        // The overall complexity for this approach is O(log n).\n        return this._exponentialSearch(lastMeasuredIndex, offset);\n      }\n    }\n  }]);\n\n  return CellSizeAndPositionManager;\n}();\n\nexport { CellSizeAndPositionManager as default };\nimport { bpfrpt_proptype_Alignment } from \"../types\";\nimport { bpfrpt_proptype_CellSizeGetter } from \"../types\";\nimport { bpfrpt_proptype_VisibleCellRange } from \"../types\";","var DEFAULT_MAX_ELEMENT_SIZE = 1500000;\nvar CHROME_MAX_ELEMENT_SIZE = 1.67771e7;\n\nvar isBrowser = function isBrowser() {\n  return typeof window !== 'undefined';\n};\n\nvar isChrome = function isChrome() {\n  return !!window.chrome;\n};\n\nexport var getMaxElementSize = function getMaxElementSize() {\n  if (isBrowser()) {\n    if (isChrome()) {\n      return CHROME_MAX_ELEMENT_SIZE;\n    }\n  }\n\n  return DEFAULT_MAX_ELEMENT_SIZE;\n};","import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport CellSizeAndPositionManager from './CellSizeAndPositionManager';\nimport { getMaxElementSize } from './maxElementSize.js';\n\n/**\n * Extends CellSizeAndPositionManager and adds scaling behavior for lists that are too large to fit within a browser's native limits.\n */\nvar ScalingCellSizeAndPositionManager =\n/*#__PURE__*/\nfunction () {\n  function ScalingCellSizeAndPositionManager(_ref) {\n    var _ref$maxScrollSize = _ref.maxScrollSize,\n        maxScrollSize = _ref$maxScrollSize === void 0 ? getMaxElementSize() : _ref$maxScrollSize,\n        params = _objectWithoutProperties(_ref, [\"maxScrollSize\"]);\n\n    _classCallCheck(this, ScalingCellSizeAndPositionManager);\n\n    _defineProperty(this, \"_cellSizeAndPositionManager\", void 0);\n\n    _defineProperty(this, \"_maxScrollSize\", void 0);\n\n    // Favor composition over inheritance to simplify IE10 support\n    this._cellSizeAndPositionManager = new CellSizeAndPositionManager(params);\n    this._maxScrollSize = maxScrollSize;\n  }\n\n  _createClass(ScalingCellSizeAndPositionManager, [{\n    key: \"areOffsetsAdjusted\",\n    value: function areOffsetsAdjusted() {\n      return this._cellSizeAndPositionManager.getTotalSize() > this._maxScrollSize;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure(params) {\n      this._cellSizeAndPositionManager.configure(params);\n    }\n  }, {\n    key: \"getCellCount\",\n    value: function getCellCount() {\n      return this._cellSizeAndPositionManager.getCellCount();\n    }\n  }, {\n    key: \"getEstimatedCellSize\",\n    value: function getEstimatedCellSize() {\n      return this._cellSizeAndPositionManager.getEstimatedCellSize();\n    }\n  }, {\n    key: \"getLastMeasuredIndex\",\n    value: function getLastMeasuredIndex() {\n      return this._cellSizeAndPositionManager.getLastMeasuredIndex();\n    }\n    /**\n     * Number of pixels a cell at the given position (offset) should be shifted in order to fit within the scaled container.\n     * The offset passed to this function is scaled (safe) as well.\n     */\n\n  }, {\n    key: \"getOffsetAdjustment\",\n    value: function getOffsetAdjustment(_ref2) {\n      var containerSize = _ref2.containerSize,\n          offset = _ref2.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      var offsetPercentage = this._getOffsetPercentage({\n        containerSize: containerSize,\n        offset: offset,\n        totalSize: safeTotalSize\n      });\n\n      return Math.round(offsetPercentage * (safeTotalSize - totalSize));\n    }\n  }, {\n    key: \"getSizeAndPositionOfCell\",\n    value: function getSizeAndPositionOfCell(index) {\n      return this._cellSizeAndPositionManager.getSizeAndPositionOfCell(index);\n    }\n  }, {\n    key: \"getSizeAndPositionOfLastMeasuredCell\",\n    value: function getSizeAndPositionOfLastMeasuredCell() {\n      return this._cellSizeAndPositionManager.getSizeAndPositionOfLastMeasuredCell();\n    }\n    /** See CellSizeAndPositionManager#getTotalSize */\n\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      return Math.min(this._maxScrollSize, this._cellSizeAndPositionManager.getTotalSize());\n    }\n    /** See CellSizeAndPositionManager#getUpdatedOffsetForIndex */\n\n  }, {\n    key: \"getUpdatedOffsetForIndex\",\n    value: function getUpdatedOffsetForIndex(_ref3) {\n      var _ref3$align = _ref3.align,\n          align = _ref3$align === void 0 ? 'auto' : _ref3$align,\n          containerSize = _ref3.containerSize,\n          currentOffset = _ref3.currentOffset,\n          targetIndex = _ref3.targetIndex;\n      currentOffset = this._safeOffsetToOffset({\n        containerSize: containerSize,\n        offset: currentOffset\n      });\n\n      var offset = this._cellSizeAndPositionManager.getUpdatedOffsetForIndex({\n        align: align,\n        containerSize: containerSize,\n        currentOffset: currentOffset,\n        targetIndex: targetIndex\n      });\n\n      return this._offsetToSafeOffset({\n        containerSize: containerSize,\n        offset: offset\n      });\n    }\n    /** See CellSizeAndPositionManager#getVisibleCellRange */\n\n  }, {\n    key: \"getVisibleCellRange\",\n    value: function getVisibleCellRange(_ref4) {\n      var containerSize = _ref4.containerSize,\n          offset = _ref4.offset;\n      offset = this._safeOffsetToOffset({\n        containerSize: containerSize,\n        offset: offset\n      });\n      return this._cellSizeAndPositionManager.getVisibleCellRange({\n        containerSize: containerSize,\n        offset: offset\n      });\n    }\n  }, {\n    key: \"resetCell\",\n    value: function resetCell(index) {\n      this._cellSizeAndPositionManager.resetCell(index);\n    }\n  }, {\n    key: \"_getOffsetPercentage\",\n    value: function _getOffsetPercentage(_ref5) {\n      var containerSize = _ref5.containerSize,\n          offset = _ref5.offset,\n          totalSize = _ref5.totalSize;\n      return totalSize <= containerSize ? 0 : offset / (totalSize - containerSize);\n    }\n  }, {\n    key: \"_offsetToSafeOffset\",\n    value: function _offsetToSafeOffset(_ref6) {\n      var containerSize = _ref6.containerSize,\n          offset = _ref6.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      if (totalSize === safeTotalSize) {\n        return offset;\n      } else {\n        var offsetPercentage = this._getOffsetPercentage({\n          containerSize: containerSize,\n          offset: offset,\n          totalSize: totalSize\n        });\n\n        return Math.round(offsetPercentage * (safeTotalSize - containerSize));\n      }\n    }\n  }, {\n    key: \"_safeOffsetToOffset\",\n    value: function _safeOffsetToOffset(_ref7) {\n      var containerSize = _ref7.containerSize,\n          offset = _ref7.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      if (totalSize === safeTotalSize) {\n        return offset;\n      } else {\n        var offsetPercentage = this._getOffsetPercentage({\n          containerSize: containerSize,\n          offset: offset,\n          totalSize: safeTotalSize\n        });\n\n        return Math.round(offsetPercentage * (totalSize - containerSize));\n      }\n    }\n  }]);\n\n  return ScalingCellSizeAndPositionManager;\n}();\n\nexport { ScalingCellSizeAndPositionManager as default };\nimport { bpfrpt_proptype_Alignment } from \"../types\";\nimport { bpfrpt_proptype_CellSizeGetter } from \"../types\";\nimport { bpfrpt_proptype_VisibleCellRange } from \"../types\";","/**\n * Helper utility that updates the specified callback whenever any of the specified indices have changed.\n */\nexport default function createCallbackMemoizer() {\n  var requireAllKeys = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  var cachedIndices = {};\n  return function (_ref) {\n    var callback = _ref.callback,\n        indices = _ref.indices;\n    var keys = Object.keys(indices);\n    var allInitialized = !requireAllKeys || keys.every(function (key) {\n      var value = indices[key];\n      return Array.isArray(value) ? value.length > 0 : value >= 0;\n    });\n    var indexChanged = keys.length !== Object.keys(cachedIndices).length || keys.some(function (key) {\n      var cachedValue = cachedIndices[key];\n      var value = indices[key];\n      return Array.isArray(value) ? cachedValue.join(',') !== value.join(',') : cachedValue !== value;\n    });\n    cachedIndices = indices;\n\n    if (allInitialized && indexChanged) {\n      callback(indices);\n    }\n  };\n}","export var SCROLL_DIRECTION_BACKWARD = -1;\nexport var SCROLL_DIRECTION_FORWARD = 1;\nexport var SCROLL_DIRECTION_HORIZONTAL = 'horizontal';\nexport var SCROLL_DIRECTION_VERTICAL = 'vertical';\n/**\n * Calculates the number of cells to overscan before and after a specified range.\n * This function ensures that overscanning doesn't exceed the available cells.\n */\n\nexport default function defaultOverscanIndicesGetter(_ref) {\n  var cellCount = _ref.cellCount,\n      overscanCellsCount = _ref.overscanCellsCount,\n      scrollDirection = _ref.scrollDirection,\n      startIndex = _ref.startIndex,\n      stopIndex = _ref.stopIndex;\n\n  if (scrollDirection === SCROLL_DIRECTION_FORWARD) {\n    return {\n      overscanStartIndex: Math.max(0, startIndex),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + overscanCellsCount)\n    };\n  } else {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - overscanCellsCount),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex)\n    };\n  }\n}\nimport { bpfrpt_proptype_OverscanIndicesGetterParams } from \"./types\";\nimport { bpfrpt_proptype_OverscanIndices } from \"./types\";","import ScalingCellSizeAndPositionManager from './ScalingCellSizeAndPositionManager.js';\n/**\n * Helper function that determines when to update scroll offsets to ensure that a scroll-to-index remains visible.\n * This function also ensures that the scroll ofset isn't past the last column/row of cells.\n */\n\nexport default function updateScrollIndexHelper(_ref) {\n  var cellSize = _ref.cellSize,\n      cellSizeAndPositionManager = _ref.cellSizeAndPositionManager,\n      previousCellsCount = _ref.previousCellsCount,\n      previousCellSize = _ref.previousCellSize,\n      previousScrollToAlignment = _ref.previousScrollToAlignment,\n      previousScrollToIndex = _ref.previousScrollToIndex,\n      previousSize = _ref.previousSize,\n      scrollOffset = _ref.scrollOffset,\n      scrollToAlignment = _ref.scrollToAlignment,\n      scrollToIndex = _ref.scrollToIndex,\n      size = _ref.size,\n      sizeJustIncreasedFromZero = _ref.sizeJustIncreasedFromZero,\n      updateScrollIndexCallback = _ref.updateScrollIndexCallback;\n  var cellCount = cellSizeAndPositionManager.getCellCount();\n  var hasScrollToIndex = scrollToIndex >= 0 && scrollToIndex < cellCount;\n  var sizeHasChanged = size !== previousSize || sizeJustIncreasedFromZero || !previousCellSize || typeof cellSize === 'number' && cellSize !== previousCellSize; // If we have a new scroll target OR if height/row-height has changed,\n  // We should ensure that the scroll target is visible.\n\n  if (hasScrollToIndex && (sizeHasChanged || scrollToAlignment !== previousScrollToAlignment || scrollToIndex !== previousScrollToIndex)) {\n    updateScrollIndexCallback(scrollToIndex); // If we don't have a selected item but list size or number of children have decreased,\n    // Make sure we aren't scrolled too far past the current content.\n  } else if (!hasScrollToIndex && cellCount > 0 && (size < previousSize || cellCount < previousCellsCount)) {\n    // We need to ensure that the current scroll offset is still within the collection's range.\n    // To do this, we don't need to measure everything; CellMeasurer would perform poorly.\n    // Just check to make sure we're still okay.\n    // Only adjust the scroll position if we've scrolled below the last set of rows.\n    if (scrollOffset > cellSizeAndPositionManager.getTotalSize() - size) {\n      updateScrollIndexCallback(cellCount - 1);\n    }\n  }\n}\nimport { bpfrpt_proptype_Alignment } from \"../types\";\nimport { bpfrpt_proptype_CellSize } from \"../types\";","/**\n * Default implementation of cellRangeRenderer used by Grid.\n * This renderer supports cell-caching while the user is scrolling.\n */\nexport default function defaultCellRangeRenderer(_ref) {\n  var cellCache = _ref.cellCache,\n      cellRenderer = _ref.cellRenderer,\n      columnSizeAndPositionManager = _ref.columnSizeAndPositionManager,\n      columnStartIndex = _ref.columnStartIndex,\n      columnStopIndex = _ref.columnStopIndex,\n      deferredMeasurementCache = _ref.deferredMeasurementCache,\n      horizontalOffsetAdjustment = _ref.horizontalOffsetAdjustment,\n      isScrolling = _ref.isScrolling,\n      isScrollingOptOut = _ref.isScrollingOptOut,\n      parent = _ref.parent,\n      rowSizeAndPositionManager = _ref.rowSizeAndPositionManager,\n      rowStartIndex = _ref.rowStartIndex,\n      rowStopIndex = _ref.rowStopIndex,\n      styleCache = _ref.styleCache,\n      verticalOffsetAdjustment = _ref.verticalOffsetAdjustment,\n      visibleColumnIndices = _ref.visibleColumnIndices,\n      visibleRowIndices = _ref.visibleRowIndices;\n  var renderedCells = []; // Browsers have native size limits for elements (eg Chrome 33M pixels, IE 1.5M pixes).\n  // User cannot scroll beyond these size limitations.\n  // In order to work around this, ScalingCellSizeAndPositionManager compresses offsets.\n  // We should never cache styles for compressed offsets though as this can lead to bugs.\n  // See issue #576 for more.\n\n  var areOffsetsAdjusted = columnSizeAndPositionManager.areOffsetsAdjusted() || rowSizeAndPositionManager.areOffsetsAdjusted();\n  var canCacheStyle = !isScrolling && !areOffsetsAdjusted;\n\n  for (var rowIndex = rowStartIndex; rowIndex <= rowStopIndex; rowIndex++) {\n    var rowDatum = rowSizeAndPositionManager.getSizeAndPositionOfCell(rowIndex);\n\n    for (var columnIndex = columnStartIndex; columnIndex <= columnStopIndex; columnIndex++) {\n      var columnDatum = columnSizeAndPositionManager.getSizeAndPositionOfCell(columnIndex);\n      var isVisible = columnIndex >= visibleColumnIndices.start && columnIndex <= visibleColumnIndices.stop && rowIndex >= visibleRowIndices.start && rowIndex <= visibleRowIndices.stop;\n      var key = \"\".concat(rowIndex, \"-\").concat(columnIndex);\n      var style = void 0; // Cache style objects so shallow-compare doesn't re-render unnecessarily.\n\n      if (canCacheStyle && styleCache[key]) {\n        style = styleCache[key];\n      } else {\n        // In deferred mode, cells will be initially rendered before we know their size.\n        // Don't interfere with CellMeasurer's measurements by setting an invalid size.\n        if (deferredMeasurementCache && !deferredMeasurementCache.has(rowIndex, columnIndex)) {\n          // Position not-yet-measured cells at top/left 0,0,\n          // And give them width/height of 'auto' so they can grow larger than the parent Grid if necessary.\n          // Positioning them further to the right/bottom influences their measured size.\n          style = {\n            height: 'auto',\n            left: 0,\n            position: 'absolute',\n            top: 0,\n            width: 'auto'\n          };\n        } else {\n          style = {\n            height: rowDatum.size,\n            left: columnDatum.offset + horizontalOffsetAdjustment,\n            position: 'absolute',\n            top: rowDatum.offset + verticalOffsetAdjustment,\n            width: columnDatum.size\n          };\n          styleCache[key] = style;\n        }\n      }\n\n      var cellRendererParams = {\n        columnIndex: columnIndex,\n        isScrolling: isScrolling,\n        isVisible: isVisible,\n        key: key,\n        parent: parent,\n        rowIndex: rowIndex,\n        style: style\n      };\n      var renderedCell = void 0; // Avoid re-creating cells while scrolling.\n      // This can lead to the same cell being created many times and can cause performance issues for \"heavy\" cells.\n      // If a scroll is in progress- cache and reuse cells.\n      // This cache will be thrown away once scrolling completes.\n      // However if we are scaling scroll positions and sizes, we should also avoid caching.\n      // This is because the offset changes slightly as scroll position changes and caching leads to stale values.\n      // For more info refer to issue #395\n      //\n      // If isScrollingOptOut is specified, we always cache cells.\n      // For more info refer to issue #1028\n\n      if ((isScrollingOptOut || isScrolling) && !horizontalOffsetAdjustment && !verticalOffsetAdjustment) {\n        if (!cellCache[key]) {\n          cellCache[key] = cellRenderer(cellRendererParams);\n        }\n\n        renderedCell = cellCache[key]; // If the user is no longer scrolling, don't cache cells.\n        // This makes dynamic cell content difficult for users and would also lead to a heavier memory footprint.\n      } else {\n        renderedCell = cellRenderer(cellRendererParams);\n      }\n\n      if (renderedCell == null || renderedCell === false) {\n        continue;\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        warnAboutMissingStyle(parent, renderedCell);\n      }\n\n      renderedCells.push(renderedCell);\n    }\n  }\n\n  return renderedCells;\n}\n\nfunction warnAboutMissingStyle(parent, renderedCell) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (renderedCell) {\n      // If the direct child is a CellMeasurer, then we should check its child\n      // See issue #611\n      if (renderedCell.type && renderedCell.type.__internalCellMeasurerFlag) {\n        renderedCell = renderedCell.props.children;\n      }\n\n      if (renderedCell && renderedCell.props && renderedCell.props.style === undefined && parent.__warnedAboutMissingStyle !== true) {\n        parent.__warnedAboutMissingStyle = true;\n        console.warn('Rendered cell should include style property for positioning.');\n      }\n    }\n  }\n}\n\nimport { bpfrpt_proptype_CellRangeRendererParams } from \"./types\";","export default !!(typeof window !== 'undefined' && window.document && window.document.createElement);","import canUseDOM from './canUseDOM';\nvar size;\nexport default function scrollbarSize(recalc) {\n  if (!size && size !== 0 || recalc) {\n    if (canUseDOM) {\n      var scrollDiv = document.createElement('div');\n      scrollDiv.style.position = 'absolute';\n      scrollDiv.style.top = '-9999px';\n      scrollDiv.style.width = '50px';\n      scrollDiv.style.height = '50px';\n      scrollDiv.style.overflow = 'scroll';\n      document.body.appendChild(scrollDiv);\n      size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      document.body.removeChild(scrollDiv);\n    }\n  }\n\n  return size;\n}","// Properly handle server-side rendering.\nvar win;\n\nif (typeof window !== 'undefined') {\n  win = window;\n} else if (typeof self !== 'undefined') {\n  win = self;\n} else {\n  win = {};\n} // requestAnimationFrame() shim by Paul Irish\n// http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n\n\nvar request = win.requestAnimationFrame || win.webkitRequestAnimationFrame || win.mozRequestAnimationFrame || win.oRequestAnimationFrame || win.msRequestAnimationFrame || function (callback) {\n  return win.setTimeout(callback, 1000 / 60);\n};\n\nvar cancel = win.cancelAnimationFrame || win.webkitCancelAnimationFrame || win.mozCancelAnimationFrame || win.oCancelAnimationFrame || win.msCancelAnimationFrame || function (id) {\n  win.clearTimeout(id);\n};\n\nexport var raf = request;\nexport var caf = cancel;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport calculateSizeAndPositionDataAndUpdateScrollOffset from './utils/calculateSizeAndPositionDataAndUpdateScrollOffset';\nimport ScalingCellSizeAndPositionManager from './utils/ScalingCellSizeAndPositionManager';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\nimport defaultOverscanIndicesGetter, { SCROLL_DIRECTION_BACKWARD, SCROLL_DIRECTION_FORWARD } from './defaultOverscanIndicesGetter';\nimport updateScrollIndexHelper from './utils/updateScrollIndexHelper';\nimport defaultCellRangeRenderer from './defaultCellRangeRenderer';\nimport scrollbarSize from 'dom-helpers/scrollbarSize';\nimport { polyfill } from 'react-lifecycles-compat';\nimport { requestAnimationTimeout, cancelAnimationTimeout } from '../utils/requestAnimationTimeout';\n/**\n * Specifies the number of milliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nexport var DEFAULT_SCROLLING_RESET_TIME_INTERVAL = 150;\n/**\n * Controls whether the Grid updates the DOM element's scrollLeft/scrollTop based on the current state or just observes it.\n * This prevents Grid from interrupting mouse-wheel animations (see issue #2).\n */\n\nvar SCROLL_POSITION_CHANGE_REASONS = {\n  OBSERVED: 'observed',\n  REQUESTED: 'requested'\n};\n\nvar renderNull = function renderNull() {\n  return null;\n};\n\n/**\n * Renders tabular data with virtualization along the vertical and horizontal axes.\n * Row heights and column widths must be known ahead of time and specified as properties.\n */\nvar Grid = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Grid, _React$PureComponent);\n\n  // Invokes onSectionRendered callback only when start/stop row or column indices change\n  function Grid(props) {\n    var _this;\n\n    _classCallCheck(this, Grid);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Grid).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"_onGridRenderedMemoizer\", createCallbackMemoizer());\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollMemoizer\", createCallbackMemoizer(false));\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateColumnIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateRowIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_recomputeScrollLeftFlag\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_recomputeScrollTopFlag\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_horizontalScrollBarSize\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_verticalScrollBarSize\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_scrollbarPresenceChanged\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_scrollingContainer\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_childrenToDisplay\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStartIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStopIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStartIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStopIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedColumnStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedColumnStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedRowStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedRowStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_initialScrollTop\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_initialScrollLeft\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_disablePointerEventsTimeoutId\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_styleCache\", {});\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellCache\", {});\n\n    _defineProperty(_assertThisInitialized(_this), \"_debounceScrollEndedCallback\", function () {\n      _this._disablePointerEventsTimeoutId = null; // isScrolling is used to determine if we reset styleCache\n\n      _this.setState({\n        isScrolling: false,\n        needToResetStyleCache: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_invokeOnGridRenderedHelper\", function () {\n      var onSectionRendered = _this.props.onSectionRendered;\n\n      _this._onGridRenderedMemoizer({\n        callback: onSectionRendered,\n        indices: {\n          columnOverscanStartIndex: _this._columnStartIndex,\n          columnOverscanStopIndex: _this._columnStopIndex,\n          columnStartIndex: _this._renderedColumnStartIndex,\n          columnStopIndex: _this._renderedColumnStopIndex,\n          rowOverscanStartIndex: _this._rowStartIndex,\n          rowOverscanStopIndex: _this._rowStopIndex,\n          rowStartIndex: _this._renderedRowStartIndex,\n          rowStopIndex: _this._renderedRowStopIndex\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (event) {\n      // In certain edge-cases React dispatches an onScroll event with an invalid target.scrollLeft / target.scrollTop.\n      // This invalid event can be detected by comparing event.target to this component's scrollable DOM element.\n      // See issue #404 for more information.\n      if (event.target === _this._scrollingContainer) {\n        _this.handleScrollEvent(event.target);\n      }\n    });\n\n    var columnSizeAndPositionManager = new ScalingCellSizeAndPositionManager({\n      cellCount: props.columnCount,\n      cellSizeGetter: function cellSizeGetter(params) {\n        return Grid._wrapSizeGetter(props.columnWidth)(params);\n      },\n      estimatedCellSize: Grid._getEstimatedColumnSize(props)\n    });\n    var rowSizeAndPositionManager = new ScalingCellSizeAndPositionManager({\n      cellCount: props.rowCount,\n      cellSizeGetter: function cellSizeGetter(params) {\n        return Grid._wrapSizeGetter(props.rowHeight)(params);\n      },\n      estimatedCellSize: Grid._getEstimatedRowSize(props)\n    });\n    _this.state = {\n      instanceProps: {\n        columnSizeAndPositionManager: columnSizeAndPositionManager,\n        rowSizeAndPositionManager: rowSizeAndPositionManager,\n        prevColumnWidth: props.columnWidth,\n        prevRowHeight: props.rowHeight,\n        prevColumnCount: props.columnCount,\n        prevRowCount: props.rowCount,\n        prevIsScrolling: props.isScrolling === true,\n        prevScrollToColumn: props.scrollToColumn,\n        prevScrollToRow: props.scrollToRow,\n        scrollbarSize: 0,\n        scrollbarSizeMeasured: false\n      },\n      isScrolling: false,\n      scrollDirectionHorizontal: SCROLL_DIRECTION_FORWARD,\n      scrollDirectionVertical: SCROLL_DIRECTION_FORWARD,\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollPositionChangeReason: null,\n      needToResetStyleCache: false\n    };\n\n    if (props.scrollToRow > 0) {\n      _this._initialScrollTop = _this._getCalculatedScrollTop(props, _this.state);\n    }\n\n    if (props.scrollToColumn > 0) {\n      _this._initialScrollLeft = _this._getCalculatedScrollLeft(props, _this.state);\n    }\n\n    return _this;\n  }\n  /**\n   * Gets offsets for a given cell and alignment.\n   */\n\n\n  _createClass(Grid, [{\n    key: \"getOffsetForCell\",\n    value: function getOffsetForCell() {\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref$alignment = _ref.alignment,\n          alignment = _ref$alignment === void 0 ? this.props.scrollToAlignment : _ref$alignment,\n          _ref$columnIndex = _ref.columnIndex,\n          columnIndex = _ref$columnIndex === void 0 ? this.props.scrollToColumn : _ref$columnIndex,\n          _ref$rowIndex = _ref.rowIndex,\n          rowIndex = _ref$rowIndex === void 0 ? this.props.scrollToRow : _ref$rowIndex;\n\n      var offsetProps = _objectSpread({}, this.props, {\n        scrollToAlignment: alignment,\n        scrollToColumn: columnIndex,\n        scrollToRow: rowIndex\n      });\n\n      return {\n        scrollLeft: this._getCalculatedScrollLeft(offsetProps),\n        scrollTop: this._getCalculatedScrollTop(offsetProps)\n      };\n    }\n    /**\n     * Gets estimated total rows' height.\n     */\n\n  }, {\n    key: \"getTotalRowsHeight\",\n    value: function getTotalRowsHeight() {\n      return this.state.instanceProps.rowSizeAndPositionManager.getTotalSize();\n    }\n    /**\n     * Gets estimated total columns' width.\n     */\n\n  }, {\n    key: \"getTotalColumnsWidth\",\n    value: function getTotalColumnsWidth() {\n      return this.state.instanceProps.columnSizeAndPositionManager.getTotalSize();\n    }\n    /**\n     * This method handles a scroll event originating from an external scroll control.\n     * It's an advanced method and should probably not be used unless you're implementing a custom scroll-bar solution.\n     */\n\n  }, {\n    key: \"handleScrollEvent\",\n    value: function handleScrollEvent(_ref2) {\n      var _ref2$scrollLeft = _ref2.scrollLeft,\n          scrollLeftParam = _ref2$scrollLeft === void 0 ? 0 : _ref2$scrollLeft,\n          _ref2$scrollTop = _ref2.scrollTop,\n          scrollTopParam = _ref2$scrollTop === void 0 ? 0 : _ref2$scrollTop;\n\n      // On iOS, we can arrive at negative offsets by swiping past the start.\n      // To prevent flicker here, we make playing in the negative offset zone cause nothing to happen.\n      if (scrollTopParam < 0) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      this._debounceScrollEnded();\n\n      var _this$props = this.props,\n          autoHeight = _this$props.autoHeight,\n          autoWidth = _this$props.autoWidth,\n          height = _this$props.height,\n          width = _this$props.width;\n      var instanceProps = this.state.instanceProps; // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scroll offsets never exceed their bounds.\n\n      var scrollbarSize = instanceProps.scrollbarSize;\n      var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n      var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n      var scrollLeft = Math.min(Math.max(0, totalColumnsWidth - width + scrollbarSize), scrollLeftParam);\n      var scrollTop = Math.min(Math.max(0, totalRowsHeight - height + scrollbarSize), scrollTopParam); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n      if (this.state.scrollLeft !== scrollLeft || this.state.scrollTop !== scrollTop) {\n        // Track scrolling direction so we can more efficiently overscan rows to reduce empty space around the edges while scrolling.\n        // Don't change direction for an axis unless scroll offset has changed.\n        var scrollDirectionHorizontal = scrollLeft !== this.state.scrollLeft ? scrollLeft > this.state.scrollLeft ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD : this.state.scrollDirectionHorizontal;\n        var scrollDirectionVertical = scrollTop !== this.state.scrollTop ? scrollTop > this.state.scrollTop ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD : this.state.scrollDirectionVertical;\n        var newState = {\n          isScrolling: true,\n          scrollDirectionHorizontal: scrollDirectionHorizontal,\n          scrollDirectionVertical: scrollDirectionVertical,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.OBSERVED\n        };\n\n        if (!autoHeight) {\n          newState.scrollTop = scrollTop;\n        }\n\n        if (!autoWidth) {\n          newState.scrollLeft = scrollLeft;\n        }\n\n        newState.needToResetStyleCache = false;\n        this.setState(newState);\n      }\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        totalColumnsWidth: totalColumnsWidth,\n        totalRowsHeight: totalRowsHeight\n      });\n    }\n    /**\n     * Invalidate Grid size and recompute visible cells.\n     * This is a deferred wrapper for recomputeGridSize().\n     * It sets a flag to be evaluated on cDM/cDU to avoid unnecessary renders.\n     * This method is intended for advanced use-cases like CellMeasurer.\n     */\n    // @TODO (bvaughn) Add automated test coverage for this.\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref3) {\n      var columnIndex = _ref3.columnIndex,\n          rowIndex = _ref3.rowIndex;\n      this._deferredInvalidateColumnIndex = typeof this._deferredInvalidateColumnIndex === 'number' ? Math.min(this._deferredInvalidateColumnIndex, columnIndex) : columnIndex;\n      this._deferredInvalidateRowIndex = typeof this._deferredInvalidateRowIndex === 'number' ? Math.min(this._deferredInvalidateRowIndex, rowIndex) : rowIndex;\n    }\n    /**\n     * Pre-measure all columns and rows in a Grid.\n     * Typically cells are only measured as needed and estimated sizes are used for cells that have not yet been measured.\n     * This method ensures that the next call to getTotalSize() returns an exact size (as opposed to just an estimated one).\n     */\n\n  }, {\n    key: \"measureAllCells\",\n    value: function measureAllCells() {\n      var _this$props2 = this.props,\n          columnCount = _this$props2.columnCount,\n          rowCount = _this$props2.rowCount;\n      var instanceProps = this.state.instanceProps;\n      instanceProps.columnSizeAndPositionManager.getSizeAndPositionOfCell(columnCount - 1);\n      instanceProps.rowSizeAndPositionManager.getSizeAndPositionOfCell(rowCount - 1);\n    }\n    /**\n     * Forced recompute of row heights and column widths.\n     * This function should be called if dynamic column or row sizes have changed but nothing else has.\n     * Since Grid only receives :columnCount and :rowCount it has no way of detecting when the underlying data changes.\n     */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref4 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref4$columnIndex = _ref4.columnIndex,\n          columnIndex = _ref4$columnIndex === void 0 ? 0 : _ref4$columnIndex,\n          _ref4$rowIndex = _ref4.rowIndex,\n          rowIndex = _ref4$rowIndex === void 0 ? 0 : _ref4$rowIndex;\n\n      var _this$props3 = this.props,\n          scrollToColumn = _this$props3.scrollToColumn,\n          scrollToRow = _this$props3.scrollToRow;\n      var instanceProps = this.state.instanceProps;\n      instanceProps.columnSizeAndPositionManager.resetCell(columnIndex);\n      instanceProps.rowSizeAndPositionManager.resetCell(rowIndex); // Cell sizes may be determined by a function property.\n      // In this case the cDU handler can't know if they changed.\n      // Store this flag to let the next cDU pass know it needs to recompute the scroll offset.\n\n      this._recomputeScrollLeftFlag = scrollToColumn >= 0 && (this.state.scrollDirectionHorizontal === SCROLL_DIRECTION_FORWARD ? columnIndex <= scrollToColumn : columnIndex >= scrollToColumn);\n      this._recomputeScrollTopFlag = scrollToRow >= 0 && (this.state.scrollDirectionVertical === SCROLL_DIRECTION_FORWARD ? rowIndex <= scrollToRow : rowIndex >= scrollToRow); // Clear cell cache in case we are scrolling;\n      // Invalid row heights likely mean invalid cached content as well.\n\n      this._styleCache = {};\n      this._cellCache = {};\n      this.forceUpdate();\n    }\n    /**\n     * Ensure column and row are visible.\n     */\n\n  }, {\n    key: \"scrollToCell\",\n    value: function scrollToCell(_ref5) {\n      var columnIndex = _ref5.columnIndex,\n          rowIndex = _ref5.rowIndex;\n      var columnCount = this.props.columnCount;\n      var props = this.props; // Don't adjust scroll offset for single-column grids (eg List, Table).\n      // This can cause a funky scroll offset because of the vertical scrollbar width.\n\n      if (columnCount > 1 && columnIndex !== undefined) {\n        this._updateScrollLeftForScrollToColumn(_objectSpread({}, props, {\n          scrollToColumn: columnIndex\n        }));\n      }\n\n      if (rowIndex !== undefined) {\n        this._updateScrollTopForScrollToRow(_objectSpread({}, props, {\n          scrollToRow: rowIndex\n        }));\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props4 = this.props,\n          getScrollbarSize = _this$props4.getScrollbarSize,\n          height = _this$props4.height,\n          scrollLeft = _this$props4.scrollLeft,\n          scrollToColumn = _this$props4.scrollToColumn,\n          scrollTop = _this$props4.scrollTop,\n          scrollToRow = _this$props4.scrollToRow,\n          width = _this$props4.width;\n      var instanceProps = this.state.instanceProps; // Reset initial offsets to be ignored in browser\n\n      this._initialScrollTop = 0;\n      this._initialScrollLeft = 0; // If cell sizes have been invalidated (eg we are using CellMeasurer) then reset cached positions.\n      // We must do this at the start of the method as we may calculate and update scroll position below.\n\n      this._handleInvalidatedGridSize(); // If this component was first rendered server-side, scrollbar size will be undefined.\n      // In that event we need to remeasure.\n\n\n      if (!instanceProps.scrollbarSizeMeasured) {\n        this.setState(function (prevState) {\n          var stateUpdate = _objectSpread({}, prevState, {\n            needToResetStyleCache: false\n          });\n\n          stateUpdate.instanceProps.scrollbarSize = getScrollbarSize();\n          stateUpdate.instanceProps.scrollbarSizeMeasured = true;\n          return stateUpdate;\n        });\n      }\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0 || typeof scrollTop === 'number' && scrollTop >= 0) {\n        var stateUpdate = Grid._getScrollToPositionStateUpdate({\n          prevState: this.state,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n\n        if (stateUpdate) {\n          stateUpdate.needToResetStyleCache = false;\n          this.setState(stateUpdate);\n        }\n      } // refs don't work in `react-test-renderer`\n\n\n      if (this._scrollingContainer) {\n        // setting the ref's scrollLeft and scrollTop.\n        // Somehow in MultiGrid the main grid doesn't trigger a update on mount.\n        if (this._scrollingContainer.scrollLeft !== this.state.scrollLeft) {\n          this._scrollingContainer.scrollLeft = this.state.scrollLeft;\n        }\n\n        if (this._scrollingContainer.scrollTop !== this.state.scrollTop) {\n          this._scrollingContainer.scrollTop = this.state.scrollTop;\n        }\n      } // Don't update scroll offset if the size is 0; we don't render any cells in this case.\n      // Setting a state may cause us to later thing we've updated the offce when we haven't.\n\n\n      var sizeIsBiggerThanZero = height > 0 && width > 0;\n\n      if (scrollToColumn >= 0 && sizeIsBiggerThanZero) {\n        this._updateScrollLeftForScrollToColumn();\n      }\n\n      if (scrollToRow >= 0 && sizeIsBiggerThanZero) {\n        this._updateScrollTopForScrollToRow();\n      } // Update onRowsRendered callback\n\n\n      this._invokeOnGridRenderedHelper(); // Initialize onScroll callback\n\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft || 0,\n        scrollTop: scrollTop || 0,\n        totalColumnsWidth: instanceProps.columnSizeAndPositionManager.getTotalSize(),\n        totalRowsHeight: instanceProps.rowSizeAndPositionManager.getTotalSize()\n      });\n\n      this._maybeCallOnScrollbarPresenceChange();\n    }\n    /**\n     * @private\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) New scroll-to-cell props have been set\n     */\n\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this2 = this;\n\n      var _this$props5 = this.props,\n          autoHeight = _this$props5.autoHeight,\n          autoWidth = _this$props5.autoWidth,\n          columnCount = _this$props5.columnCount,\n          height = _this$props5.height,\n          rowCount = _this$props5.rowCount,\n          scrollToAlignment = _this$props5.scrollToAlignment,\n          scrollToColumn = _this$props5.scrollToColumn,\n          scrollToRow = _this$props5.scrollToRow,\n          width = _this$props5.width;\n      var _this$state = this.state,\n          scrollLeft = _this$state.scrollLeft,\n          scrollPositionChangeReason = _this$state.scrollPositionChangeReason,\n          scrollTop = _this$state.scrollTop,\n          instanceProps = _this$state.instanceProps; // If cell sizes have been invalidated (eg we are using CellMeasurer) then reset cached positions.\n      // We must do this at the start of the method as we may calculate and update scroll position below.\n\n      this._handleInvalidatedGridSize(); // Handle edge case where column or row count has only just increased over 0.\n      // In this case we may have to restore a previously-specified scroll offset.\n      // For more info see bvaughn/react-virtualized/issues/218\n\n\n      var columnOrRowCountJustIncreasedFromZero = columnCount > 0 && prevProps.columnCount === 0 || rowCount > 0 && prevProps.rowCount === 0; // Make sure requested changes to :scrollLeft or :scrollTop get applied.\n      // Assigning to scrollLeft/scrollTop tells the browser to interrupt any running scroll animations,\n      // And to discard any pending async changes to the scroll position that may have happened in the meantime (e.g. on a separate scrolling thread).\n      // So we only set these when we require an adjustment of the scroll position.\n      // See issue #2 for more information.\n\n      if (scrollPositionChangeReason === SCROLL_POSITION_CHANGE_REASONS.REQUESTED) {\n        // @TRICKY :autoHeight and :autoWidth properties instructs Grid to leave :scrollTop and :scrollLeft management to an external HOC (eg WindowScroller).\n        // In this case we should avoid checking scrollingContainer.scrollTop and scrollingContainer.scrollLeft since it forces layout/flow.\n        if (!autoWidth && scrollLeft >= 0 && (scrollLeft !== this._scrollingContainer.scrollLeft || columnOrRowCountJustIncreasedFromZero)) {\n          this._scrollingContainer.scrollLeft = scrollLeft;\n        }\n\n        if (!autoHeight && scrollTop >= 0 && (scrollTop !== this._scrollingContainer.scrollTop || columnOrRowCountJustIncreasedFromZero)) {\n          this._scrollingContainer.scrollTop = scrollTop;\n        }\n      } // Special case where the previous size was 0:\n      // In this case we don't show any windowed cells at all.\n      // So we should always recalculate offset afterwards.\n\n\n      var sizeJustIncreasedFromZero = (prevProps.width === 0 || prevProps.height === 0) && height > 0 && width > 0; // Update scroll offsets if the current :scrollToColumn or :scrollToRow values requires it\n      // @TODO Do we also need this check or can the one in componentWillUpdate() suffice?\n\n      if (this._recomputeScrollLeftFlag) {\n        this._recomputeScrollLeftFlag = false;\n\n        this._updateScrollLeftForScrollToColumn(this.props);\n      } else {\n        updateScrollIndexHelper({\n          cellSizeAndPositionManager: instanceProps.columnSizeAndPositionManager,\n          previousCellsCount: prevProps.columnCount,\n          previousCellSize: prevProps.columnWidth,\n          previousScrollToAlignment: prevProps.scrollToAlignment,\n          previousScrollToIndex: prevProps.scrollToColumn,\n          previousSize: prevProps.width,\n          scrollOffset: scrollLeft,\n          scrollToAlignment: scrollToAlignment,\n          scrollToIndex: scrollToColumn,\n          size: width,\n          sizeJustIncreasedFromZero: sizeJustIncreasedFromZero,\n          updateScrollIndexCallback: function updateScrollIndexCallback() {\n            return _this2._updateScrollLeftForScrollToColumn(_this2.props);\n          }\n        });\n      }\n\n      if (this._recomputeScrollTopFlag) {\n        this._recomputeScrollTopFlag = false;\n\n        this._updateScrollTopForScrollToRow(this.props);\n      } else {\n        updateScrollIndexHelper({\n          cellSizeAndPositionManager: instanceProps.rowSizeAndPositionManager,\n          previousCellsCount: prevProps.rowCount,\n          previousCellSize: prevProps.rowHeight,\n          previousScrollToAlignment: prevProps.scrollToAlignment,\n          previousScrollToIndex: prevProps.scrollToRow,\n          previousSize: prevProps.height,\n          scrollOffset: scrollTop,\n          scrollToAlignment: scrollToAlignment,\n          scrollToIndex: scrollToRow,\n          size: height,\n          sizeJustIncreasedFromZero: sizeJustIncreasedFromZero,\n          updateScrollIndexCallback: function updateScrollIndexCallback() {\n            return _this2._updateScrollTopForScrollToRow(_this2.props);\n          }\n        });\n      } // Update onRowsRendered callback if start/stop indices have changed\n\n\n      this._invokeOnGridRenderedHelper(); // Changes to :scrollLeft or :scrollTop should also notify :onScroll listeners\n\n\n      if (scrollLeft !== prevState.scrollLeft || scrollTop !== prevState.scrollTop) {\n        var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n        var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n\n        this._invokeOnScrollMemoizer({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          totalColumnsWidth: totalColumnsWidth,\n          totalRowsHeight: totalRowsHeight\n        });\n      }\n\n      this._maybeCallOnScrollbarPresenceChange();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._disablePointerEventsTimeoutId) {\n        cancelAnimationTimeout(this._disablePointerEventsTimeoutId);\n      }\n    }\n    /**\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) Empty content (0 rows or columns)\n     * 2) New scroll props overriding the current state\n     * 3) Cells-count or cells-size has changed, making previous scroll offsets invalid\n     */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props6 = this.props,\n          autoContainerWidth = _this$props6.autoContainerWidth,\n          autoHeight = _this$props6.autoHeight,\n          autoWidth = _this$props6.autoWidth,\n          className = _this$props6.className,\n          containerProps = _this$props6.containerProps,\n          containerRole = _this$props6.containerRole,\n          containerStyle = _this$props6.containerStyle,\n          height = _this$props6.height,\n          id = _this$props6.id,\n          noContentRenderer = _this$props6.noContentRenderer,\n          role = _this$props6.role,\n          style = _this$props6.style,\n          tabIndex = _this$props6.tabIndex,\n          width = _this$props6.width;\n      var _this$state2 = this.state,\n          instanceProps = _this$state2.instanceProps,\n          needToResetStyleCache = _this$state2.needToResetStyleCache;\n\n      var isScrolling = this._isScrolling();\n\n      var gridStyle = {\n        boxSizing: 'border-box',\n        direction: 'ltr',\n        height: autoHeight ? 'auto' : height,\n        position: 'relative',\n        width: autoWidth ? 'auto' : width,\n        WebkitOverflowScrolling: 'touch',\n        willChange: 'transform'\n      };\n\n      if (needToResetStyleCache) {\n        this._styleCache = {};\n      } // calculate _styleCache here\n      // if state.isScrolling (not from _isScrolling) then reset\n\n\n      if (!this.state.isScrolling) {\n        this._resetStyleCache();\n      } // calculate children to render here\n\n\n      this._calculateChildrenToRender(this.props, this.state);\n\n      var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n      var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize(); // Force browser to hide scrollbars when we know they aren't necessary.\n      // Otherwise once scrollbars appear they may not disappear again.\n      // For more info see issue #116\n\n      var verticalScrollBarSize = totalRowsHeight > height ? instanceProps.scrollbarSize : 0;\n      var horizontalScrollBarSize = totalColumnsWidth > width ? instanceProps.scrollbarSize : 0;\n\n      if (horizontalScrollBarSize !== this._horizontalScrollBarSize || verticalScrollBarSize !== this._verticalScrollBarSize) {\n        this._horizontalScrollBarSize = horizontalScrollBarSize;\n        this._verticalScrollBarSize = verticalScrollBarSize;\n        this._scrollbarPresenceChanged = true;\n      } // Also explicitly init styles to 'auto' if scrollbars are required.\n      // This works around an obscure edge case where external CSS styles have not yet been loaded,\n      // But an initial scroll index of offset is set as an external prop.\n      // Without this style, Grid would render the correct range of cells but would NOT update its internal offset.\n      // This was originally reported via clauderic/react-infinite-calendar/issues/23\n\n\n      gridStyle.overflowX = totalColumnsWidth + verticalScrollBarSize <= width ? 'hidden' : 'auto';\n      gridStyle.overflowY = totalRowsHeight + horizontalScrollBarSize <= height ? 'hidden' : 'auto';\n      var childrenToDisplay = this._childrenToDisplay;\n      var showNoContentRenderer = childrenToDisplay.length === 0 && height > 0 && width > 0;\n      return React.createElement(\"div\", _extends({\n        ref: this._setScrollingContainerRef\n      }, containerProps, {\n        \"aria-label\": this.props['aria-label'],\n        \"aria-readonly\": this.props['aria-readonly'],\n        className: clsx('ReactVirtualized__Grid', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: role,\n        style: _objectSpread({}, gridStyle, {}, style),\n        tabIndex: tabIndex\n      }), childrenToDisplay.length > 0 && React.createElement(\"div\", {\n        className: \"ReactVirtualized__Grid__innerScrollContainer\",\n        role: containerRole,\n        style: _objectSpread({\n          width: autoContainerWidth ? 'auto' : totalColumnsWidth,\n          height: totalRowsHeight,\n          maxWidth: totalColumnsWidth,\n          maxHeight: totalRowsHeight,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          position: 'relative'\n        }, containerStyle)\n      }, childrenToDisplay), showNoContentRenderer && noContentRenderer());\n    }\n    /* ---------------------------- Helper methods ---------------------------- */\n\n  }, {\n    key: \"_calculateChildrenToRender\",\n    value: function _calculateChildrenToRender() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      var cellRenderer = props.cellRenderer,\n          cellRangeRenderer = props.cellRangeRenderer,\n          columnCount = props.columnCount,\n          deferredMeasurementCache = props.deferredMeasurementCache,\n          height = props.height,\n          overscanColumnCount = props.overscanColumnCount,\n          overscanIndicesGetter = props.overscanIndicesGetter,\n          overscanRowCount = props.overscanRowCount,\n          rowCount = props.rowCount,\n          width = props.width,\n          isScrollingOptOut = props.isScrollingOptOut;\n      var scrollDirectionHorizontal = state.scrollDirectionHorizontal,\n          scrollDirectionVertical = state.scrollDirectionVertical,\n          instanceProps = state.instanceProps;\n      var scrollTop = this._initialScrollTop > 0 ? this._initialScrollTop : state.scrollTop;\n      var scrollLeft = this._initialScrollLeft > 0 ? this._initialScrollLeft : state.scrollLeft;\n\n      var isScrolling = this._isScrolling(props, state);\n\n      this._childrenToDisplay = []; // Render only enough columns and rows to cover the visible area of the grid.\n\n      if (height > 0 && width > 0) {\n        var visibleColumnIndices = instanceProps.columnSizeAndPositionManager.getVisibleCellRange({\n          containerSize: width,\n          offset: scrollLeft\n        });\n        var visibleRowIndices = instanceProps.rowSizeAndPositionManager.getVisibleCellRange({\n          containerSize: height,\n          offset: scrollTop\n        });\n        var horizontalOffsetAdjustment = instanceProps.columnSizeAndPositionManager.getOffsetAdjustment({\n          containerSize: width,\n          offset: scrollLeft\n        });\n        var verticalOffsetAdjustment = instanceProps.rowSizeAndPositionManager.getOffsetAdjustment({\n          containerSize: height,\n          offset: scrollTop\n        }); // Store for _invokeOnGridRenderedHelper()\n\n        this._renderedColumnStartIndex = visibleColumnIndices.start;\n        this._renderedColumnStopIndex = visibleColumnIndices.stop;\n        this._renderedRowStartIndex = visibleRowIndices.start;\n        this._renderedRowStopIndex = visibleRowIndices.stop;\n        var overscanColumnIndices = overscanIndicesGetter({\n          direction: 'horizontal',\n          cellCount: columnCount,\n          overscanCellsCount: overscanColumnCount,\n          scrollDirection: scrollDirectionHorizontal,\n          startIndex: typeof visibleColumnIndices.start === 'number' ? visibleColumnIndices.start : 0,\n          stopIndex: typeof visibleColumnIndices.stop === 'number' ? visibleColumnIndices.stop : -1\n        });\n        var overscanRowIndices = overscanIndicesGetter({\n          direction: 'vertical',\n          cellCount: rowCount,\n          overscanCellsCount: overscanRowCount,\n          scrollDirection: scrollDirectionVertical,\n          startIndex: typeof visibleRowIndices.start === 'number' ? visibleRowIndices.start : 0,\n          stopIndex: typeof visibleRowIndices.stop === 'number' ? visibleRowIndices.stop : -1\n        }); // Store for _invokeOnGridRenderedHelper()\n\n        var columnStartIndex = overscanColumnIndices.overscanStartIndex;\n        var columnStopIndex = overscanColumnIndices.overscanStopIndex;\n        var rowStartIndex = overscanRowIndices.overscanStartIndex;\n        var rowStopIndex = overscanRowIndices.overscanStopIndex; // Advanced use-cases (eg CellMeasurer) require batched measurements to determine accurate sizes.\n\n        if (deferredMeasurementCache) {\n          // If rows have a dynamic height, scan the rows we are about to render.\n          // If any have not yet been measured, then we need to render all columns initially,\n          // Because the height of the row is equal to the tallest cell within that row,\n          // (And so we can't know the height without measuring all column-cells first).\n          if (!deferredMeasurementCache.hasFixedHeight()) {\n            for (var rowIndex = rowStartIndex; rowIndex <= rowStopIndex; rowIndex++) {\n              if (!deferredMeasurementCache.has(rowIndex, 0)) {\n                columnStartIndex = 0;\n                columnStopIndex = columnCount - 1;\n                break;\n              }\n            }\n          } // If columns have a dynamic width, scan the columns we are about to render.\n          // If any have not yet been measured, then we need to render all rows initially,\n          // Because the width of the column is equal to the widest cell within that column,\n          // (And so we can't know the width without measuring all row-cells first).\n\n\n          if (!deferredMeasurementCache.hasFixedWidth()) {\n            for (var columnIndex = columnStartIndex; columnIndex <= columnStopIndex; columnIndex++) {\n              if (!deferredMeasurementCache.has(0, columnIndex)) {\n                rowStartIndex = 0;\n                rowStopIndex = rowCount - 1;\n                break;\n              }\n            }\n          }\n        }\n\n        this._childrenToDisplay = cellRangeRenderer({\n          cellCache: this._cellCache,\n          cellRenderer: cellRenderer,\n          columnSizeAndPositionManager: instanceProps.columnSizeAndPositionManager,\n          columnStartIndex: columnStartIndex,\n          columnStopIndex: columnStopIndex,\n          deferredMeasurementCache: deferredMeasurementCache,\n          horizontalOffsetAdjustment: horizontalOffsetAdjustment,\n          isScrolling: isScrolling,\n          isScrollingOptOut: isScrollingOptOut,\n          parent: this,\n          rowSizeAndPositionManager: instanceProps.rowSizeAndPositionManager,\n          rowStartIndex: rowStartIndex,\n          rowStopIndex: rowStopIndex,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          styleCache: this._styleCache,\n          verticalOffsetAdjustment: verticalOffsetAdjustment,\n          visibleColumnIndices: visibleColumnIndices,\n          visibleRowIndices: visibleRowIndices\n        }); // update the indices\n\n        this._columnStartIndex = columnStartIndex;\n        this._columnStopIndex = columnStopIndex;\n        this._rowStartIndex = rowStartIndex;\n        this._rowStopIndex = rowStopIndex;\n      }\n    }\n    /**\n     * Sets an :isScrolling flag for a small window of time.\n     * This flag is used to disable pointer events on the scrollable portion of the Grid.\n     * This prevents jerky/stuttery mouse-wheel scrolling.\n     */\n\n  }, {\n    key: \"_debounceScrollEnded\",\n    value: function _debounceScrollEnded() {\n      var scrollingResetTimeInterval = this.props.scrollingResetTimeInterval;\n\n      if (this._disablePointerEventsTimeoutId) {\n        cancelAnimationTimeout(this._disablePointerEventsTimeoutId);\n      }\n\n      this._disablePointerEventsTimeoutId = requestAnimationTimeout(this._debounceScrollEndedCallback, scrollingResetTimeInterval);\n    }\n  }, {\n    key: \"_handleInvalidatedGridSize\",\n\n    /**\n     * Check for batched CellMeasurer size invalidations.\n     * This will occur the first time one or more previously unmeasured cells are rendered.\n     */\n    value: function _handleInvalidatedGridSize() {\n      if (typeof this._deferredInvalidateColumnIndex === 'number' && typeof this._deferredInvalidateRowIndex === 'number') {\n        var columnIndex = this._deferredInvalidateColumnIndex;\n        var rowIndex = this._deferredInvalidateRowIndex;\n        this._deferredInvalidateColumnIndex = null;\n        this._deferredInvalidateRowIndex = null;\n        this.recomputeGridSize({\n          columnIndex: columnIndex,\n          rowIndex: rowIndex\n        });\n      }\n    }\n  }, {\n    key: \"_invokeOnScrollMemoizer\",\n    value: function _invokeOnScrollMemoizer(_ref6) {\n      var _this3 = this;\n\n      var scrollLeft = _ref6.scrollLeft,\n          scrollTop = _ref6.scrollTop,\n          totalColumnsWidth = _ref6.totalColumnsWidth,\n          totalRowsHeight = _ref6.totalRowsHeight;\n\n      this._onScrollMemoizer({\n        callback: function callback(_ref7) {\n          var scrollLeft = _ref7.scrollLeft,\n              scrollTop = _ref7.scrollTop;\n          var _this3$props = _this3.props,\n              height = _this3$props.height,\n              onScroll = _this3$props.onScroll,\n              width = _this3$props.width;\n          onScroll({\n            clientHeight: height,\n            clientWidth: width,\n            scrollHeight: totalRowsHeight,\n            scrollLeft: scrollLeft,\n            scrollTop: scrollTop,\n            scrollWidth: totalColumnsWidth\n          });\n        },\n        indices: {\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        }\n      });\n    }\n  }, {\n    key: \"_isScrolling\",\n    value: function _isScrolling() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      // If isScrolling is defined in props, use it to override the value in state\n      // This is a performance optimization for WindowScroller + Grid\n      return Object.hasOwnProperty.call(props, 'isScrolling') ? Boolean(props.isScrolling) : Boolean(state.isScrolling);\n    }\n  }, {\n    key: \"_maybeCallOnScrollbarPresenceChange\",\n    value: function _maybeCallOnScrollbarPresenceChange() {\n      if (this._scrollbarPresenceChanged) {\n        var onScrollbarPresenceChange = this.props.onScrollbarPresenceChange;\n        this._scrollbarPresenceChanged = false;\n        onScrollbarPresenceChange({\n          horizontal: this._horizontalScrollBarSize > 0,\n          size: this.state.instanceProps.scrollbarSize,\n          vertical: this._verticalScrollBarSize > 0\n        });\n      }\n    }\n  }, {\n    key: \"scrollToPosition\",\n\n    /**\n     * Scroll to the specified offset(s).\n     * Useful for animating position changes.\n     */\n    value: function scrollToPosition(_ref8) {\n      var scrollLeft = _ref8.scrollLeft,\n          scrollTop = _ref8.scrollTop;\n\n      var stateUpdate = Grid._getScrollToPositionStateUpdate({\n        prevState: this.state,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      });\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }, {\n    key: \"_getCalculatedScrollLeft\",\n    value: function _getCalculatedScrollLeft() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      return Grid._getCalculatedScrollLeft(props, state);\n    }\n  }, {\n    key: \"_updateScrollLeftForScrollToColumn\",\n    value: function _updateScrollLeftForScrollToColumn() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n\n      var stateUpdate = Grid._getScrollLeftForScrollToColumnStateUpdate(props, state);\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }, {\n    key: \"_getCalculatedScrollTop\",\n    value: function _getCalculatedScrollTop() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      return Grid._getCalculatedScrollTop(props, state);\n    }\n  }, {\n    key: \"_resetStyleCache\",\n    value: function _resetStyleCache() {\n      var styleCache = this._styleCache;\n      var cellCache = this._cellCache;\n      var isScrollingOptOut = this.props.isScrollingOptOut; // Reset cell and style caches once scrolling stops.\n      // This makes Grid simpler to use (since cells commonly change).\n      // And it keeps the caches from growing too large.\n      // Performance is most sensitive when a user is scrolling.\n      // Don't clear visible cells from cellCache if isScrollingOptOut is specified.\n      // This keeps the cellCache to a resonable size.\n\n      this._cellCache = {};\n      this._styleCache = {}; // Copy over the visible cell styles so avoid unnecessary re-render.\n\n      for (var rowIndex = this._rowStartIndex; rowIndex <= this._rowStopIndex; rowIndex++) {\n        for (var columnIndex = this._columnStartIndex; columnIndex <= this._columnStopIndex; columnIndex++) {\n          var key = \"\".concat(rowIndex, \"-\").concat(columnIndex);\n          this._styleCache[key] = styleCache[key];\n\n          if (isScrollingOptOut) {\n            this._cellCache[key] = cellCache[key];\n          }\n        }\n      }\n    }\n  }, {\n    key: \"_updateScrollTopForScrollToRow\",\n    value: function _updateScrollTopForScrollToRow() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n\n      var stateUpdate = Grid._getScrollTopForScrollToRowStateUpdate(props, state);\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      var newState = {};\n\n      if (nextProps.columnCount === 0 && prevState.scrollLeft !== 0 || nextProps.rowCount === 0 && prevState.scrollTop !== 0) {\n        newState.scrollLeft = 0;\n        newState.scrollTop = 0; // only use scroll{Left,Top} from props if scrollTo{Column,Row} isn't specified\n        // scrollTo{Column,Row} should override scroll{Left,Top}\n      } else if (nextProps.scrollLeft !== prevState.scrollLeft && nextProps.scrollToColumn < 0 || nextProps.scrollTop !== prevState.scrollTop && nextProps.scrollToRow < 0) {\n        Object.assign(newState, Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: nextProps.scrollLeft,\n          scrollTop: nextProps.scrollTop\n        }));\n      }\n\n      var instanceProps = prevState.instanceProps; // Initially we should not clearStyleCache\n\n      newState.needToResetStyleCache = false;\n\n      if (nextProps.columnWidth !== instanceProps.prevColumnWidth || nextProps.rowHeight !== instanceProps.prevRowHeight) {\n        // Reset cache. set it to {} in render\n        newState.needToResetStyleCache = true;\n      }\n\n      instanceProps.columnSizeAndPositionManager.configure({\n        cellCount: nextProps.columnCount,\n        estimatedCellSize: Grid._getEstimatedColumnSize(nextProps),\n        cellSizeGetter: Grid._wrapSizeGetter(nextProps.columnWidth)\n      });\n      instanceProps.rowSizeAndPositionManager.configure({\n        cellCount: nextProps.rowCount,\n        estimatedCellSize: Grid._getEstimatedRowSize(nextProps),\n        cellSizeGetter: Grid._wrapSizeGetter(nextProps.rowHeight)\n      });\n\n      if (instanceProps.prevColumnCount === 0 || instanceProps.prevRowCount === 0) {\n        instanceProps.prevColumnCount = 0;\n        instanceProps.prevRowCount = 0;\n      } // If scrolling is controlled outside this component, clear cache when scrolling stops\n\n\n      if (nextProps.autoHeight && nextProps.isScrolling === false && instanceProps.prevIsScrolling === true) {\n        Object.assign(newState, {\n          isScrolling: false\n        });\n      }\n\n      var maybeStateA;\n      var maybeStateB;\n      calculateSizeAndPositionDataAndUpdateScrollOffset({\n        cellCount: instanceProps.prevColumnCount,\n        cellSize: typeof instanceProps.prevColumnWidth === 'number' ? instanceProps.prevColumnWidth : null,\n        computeMetadataCallback: function computeMetadataCallback() {\n          return instanceProps.columnSizeAndPositionManager.resetCell(0);\n        },\n        computeMetadataCallbackProps: nextProps,\n        nextCellsCount: nextProps.columnCount,\n        nextCellSize: typeof nextProps.columnWidth === 'number' ? nextProps.columnWidth : null,\n        nextScrollToIndex: nextProps.scrollToColumn,\n        scrollToIndex: instanceProps.prevScrollToColumn,\n        updateScrollOffsetForScrollToIndex: function updateScrollOffsetForScrollToIndex() {\n          maybeStateA = Grid._getScrollLeftForScrollToColumnStateUpdate(nextProps, prevState);\n        }\n      });\n      calculateSizeAndPositionDataAndUpdateScrollOffset({\n        cellCount: instanceProps.prevRowCount,\n        cellSize: typeof instanceProps.prevRowHeight === 'number' ? instanceProps.prevRowHeight : null,\n        computeMetadataCallback: function computeMetadataCallback() {\n          return instanceProps.rowSizeAndPositionManager.resetCell(0);\n        },\n        computeMetadataCallbackProps: nextProps,\n        nextCellsCount: nextProps.rowCount,\n        nextCellSize: typeof nextProps.rowHeight === 'number' ? nextProps.rowHeight : null,\n        nextScrollToIndex: nextProps.scrollToRow,\n        scrollToIndex: instanceProps.prevScrollToRow,\n        updateScrollOffsetForScrollToIndex: function updateScrollOffsetForScrollToIndex() {\n          maybeStateB = Grid._getScrollTopForScrollToRowStateUpdate(nextProps, prevState);\n        }\n      });\n      instanceProps.prevColumnCount = nextProps.columnCount;\n      instanceProps.prevColumnWidth = nextProps.columnWidth;\n      instanceProps.prevIsScrolling = nextProps.isScrolling === true;\n      instanceProps.prevRowCount = nextProps.rowCount;\n      instanceProps.prevRowHeight = nextProps.rowHeight;\n      instanceProps.prevScrollToColumn = nextProps.scrollToColumn;\n      instanceProps.prevScrollToRow = nextProps.scrollToRow; // getting scrollBarSize (moved from componentWillMount)\n\n      instanceProps.scrollbarSize = nextProps.getScrollbarSize();\n\n      if (instanceProps.scrollbarSize === undefined) {\n        instanceProps.scrollbarSizeMeasured = false;\n        instanceProps.scrollbarSize = 0;\n      } else {\n        instanceProps.scrollbarSizeMeasured = true;\n      }\n\n      newState.instanceProps = instanceProps;\n      return _objectSpread({}, newState, {}, maybeStateA, {}, maybeStateB);\n    }\n  }, {\n    key: \"_getEstimatedColumnSize\",\n    value: function _getEstimatedColumnSize(props) {\n      return typeof props.columnWidth === 'number' ? props.columnWidth : props.estimatedColumnSize;\n    }\n  }, {\n    key: \"_getEstimatedRowSize\",\n    value: function _getEstimatedRowSize(props) {\n      return typeof props.rowHeight === 'number' ? props.rowHeight : props.estimatedRowSize;\n    }\n  }, {\n    key: \"_getScrollToPositionStateUpdate\",\n\n    /**\n     * Get the updated state after scrolling to\n     * scrollLeft and scrollTop\n     */\n    value: function _getScrollToPositionStateUpdate(_ref9) {\n      var prevState = _ref9.prevState,\n          scrollLeft = _ref9.scrollLeft,\n          scrollTop = _ref9.scrollTop;\n      var newState = {\n        scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n      };\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0) {\n        newState.scrollDirectionHorizontal = scrollLeft > prevState.scrollLeft ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD;\n        newState.scrollLeft = scrollLeft;\n      }\n\n      if (typeof scrollTop === 'number' && scrollTop >= 0) {\n        newState.scrollDirectionVertical = scrollTop > prevState.scrollTop ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD;\n        newState.scrollTop = scrollTop;\n      }\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0 && scrollLeft !== prevState.scrollLeft || typeof scrollTop === 'number' && scrollTop >= 0 && scrollTop !== prevState.scrollTop) {\n        return newState;\n      }\n\n      return {};\n    }\n  }, {\n    key: \"_wrapSizeGetter\",\n    value: function _wrapSizeGetter(value) {\n      return typeof value === 'function' ? value : function () {\n        return value;\n      };\n    }\n  }, {\n    key: \"_getCalculatedScrollLeft\",\n    value: function _getCalculatedScrollLeft(nextProps, prevState) {\n      var columnCount = nextProps.columnCount,\n          height = nextProps.height,\n          scrollToAlignment = nextProps.scrollToAlignment,\n          scrollToColumn = nextProps.scrollToColumn,\n          width = nextProps.width;\n      var scrollLeft = prevState.scrollLeft,\n          instanceProps = prevState.instanceProps;\n\n      if (columnCount > 0) {\n        var finalColumn = columnCount - 1;\n        var targetIndex = scrollToColumn < 0 ? finalColumn : Math.min(finalColumn, scrollToColumn);\n        var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n        var scrollBarSize = instanceProps.scrollbarSizeMeasured && totalRowsHeight > height ? instanceProps.scrollbarSize : 0;\n        return instanceProps.columnSizeAndPositionManager.getUpdatedOffsetForIndex({\n          align: scrollToAlignment,\n          containerSize: width - scrollBarSize,\n          currentOffset: scrollLeft,\n          targetIndex: targetIndex\n        });\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"_getScrollLeftForScrollToColumnStateUpdate\",\n    value: function _getScrollLeftForScrollToColumnStateUpdate(nextProps, prevState) {\n      var scrollLeft = prevState.scrollLeft;\n\n      var calculatedScrollLeft = Grid._getCalculatedScrollLeft(nextProps, prevState);\n\n      if (typeof calculatedScrollLeft === 'number' && calculatedScrollLeft >= 0 && scrollLeft !== calculatedScrollLeft) {\n        return Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: calculatedScrollLeft,\n          scrollTop: -1\n        });\n      }\n\n      return {};\n    }\n  }, {\n    key: \"_getCalculatedScrollTop\",\n    value: function _getCalculatedScrollTop(nextProps, prevState) {\n      var height = nextProps.height,\n          rowCount = nextProps.rowCount,\n          scrollToAlignment = nextProps.scrollToAlignment,\n          scrollToRow = nextProps.scrollToRow,\n          width = nextProps.width;\n      var scrollTop = prevState.scrollTop,\n          instanceProps = prevState.instanceProps;\n\n      if (rowCount > 0) {\n        var finalRow = rowCount - 1;\n        var targetIndex = scrollToRow < 0 ? finalRow : Math.min(finalRow, scrollToRow);\n        var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n        var scrollBarSize = instanceProps.scrollbarSizeMeasured && totalColumnsWidth > width ? instanceProps.scrollbarSize : 0;\n        return instanceProps.rowSizeAndPositionManager.getUpdatedOffsetForIndex({\n          align: scrollToAlignment,\n          containerSize: height - scrollBarSize,\n          currentOffset: scrollTop,\n          targetIndex: targetIndex\n        });\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"_getScrollTopForScrollToRowStateUpdate\",\n    value: function _getScrollTopForScrollToRowStateUpdate(nextProps, prevState) {\n      var scrollTop = prevState.scrollTop;\n\n      var calculatedScrollTop = Grid._getCalculatedScrollTop(nextProps, prevState);\n\n      if (typeof calculatedScrollTop === 'number' && calculatedScrollTop >= 0 && scrollTop !== calculatedScrollTop) {\n        return Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: -1,\n          scrollTop: calculatedScrollTop\n        });\n      }\n\n      return {};\n    }\n  }]);\n\n  return Grid;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"aria-label\": PropTypes.string.isRequired,\n  \"aria-readonly\": PropTypes.bool,\n\n  /**\n   * Set the width of the inner scrollable container to 'auto'.\n   * This is useful for single-column Grids to ensure that the column doesn't extend below a vertical scrollbar.\n   */\n  \"autoContainerWidth\": PropTypes.bool.isRequired,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height of rows can stretch the window.\n   * Intended for use with WindowScroller\n   */\n  \"autoHeight\": PropTypes.bool.isRequired,\n\n  /**\n   * Removes fixed width from the scrollingContainer so that the total width of rows can stretch the window.\n   * Intended for use with WindowScroller\n   */\n  \"autoWidth\": PropTypes.bool.isRequired,\n\n  /** Responsible for rendering a cell given an row and column index.  */\n  \"cellRenderer\": function cellRenderer() {\n    return (typeof bpfrpt_proptype_CellRenderer === \"function\" ? bpfrpt_proptype_CellRenderer.isRequired ? bpfrpt_proptype_CellRenderer.isRequired : bpfrpt_proptype_CellRenderer : PropTypes.shape(bpfrpt_proptype_CellRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Responsible for rendering a group of cells given their index ranges.  */\n  \"cellRangeRenderer\": function cellRangeRenderer() {\n    return (typeof bpfrpt_proptype_CellRangeRenderer === \"function\" ? bpfrpt_proptype_CellRangeRenderer.isRequired ? bpfrpt_proptype_CellRangeRenderer.isRequired : bpfrpt_proptype_CellRangeRenderer : PropTypes.shape(bpfrpt_proptype_CellRangeRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Optional custom CSS class name to attach to root Grid element.  */\n  \"className\": PropTypes.string,\n\n  /** Number of columns in grid.  */\n  \"columnCount\": PropTypes.number.isRequired,\n\n  /** Either a fixed column width (number) or a function that returns the width of a column given its index.  */\n  \"columnWidth\": function columnWidth() {\n    return (typeof bpfrpt_proptype_CellSize === \"function\" ? bpfrpt_proptype_CellSize.isRequired ? bpfrpt_proptype_CellSize.isRequired : bpfrpt_proptype_CellSize : PropTypes.shape(bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Unfiltered props for the Grid container. */\n  \"containerProps\": PropTypes.object,\n\n  /** ARIA role for the cell-container.  */\n  \"containerRole\": PropTypes.string.isRequired,\n\n  /** Optional inline style applied to inner cell-container */\n  \"containerStyle\": PropTypes.object.isRequired,\n\n  /**\n   * If CellMeasurer is used to measure this Grid's children, this should be a pointer to its CellMeasurerCache.\n   * A shared CellMeasurerCache reference enables Grid and CellMeasurer to share measurement data.\n   */\n  \"deferredMeasurementCache\": PropTypes.object,\n\n  /**\n   * Used to estimate the total width of a Grid before all of its columns have actually been measured.\n   * The estimated total width is adjusted as columns are rendered.\n   */\n  \"estimatedColumnSize\": PropTypes.number.isRequired,\n\n  /**\n   * Used to estimate the total height of a Grid before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  \"estimatedRowSize\": PropTypes.number.isRequired,\n\n  /** Exposed for testing purposes only.  */\n  \"getScrollbarSize\": PropTypes.func.isRequired,\n\n  /** Height of Grid; this property determines the number of visible (vs virtualized) rows.  */\n  \"height\": PropTypes.number.isRequired,\n\n  /** Optional custom id to attach to root Grid element.  */\n  \"id\": PropTypes.string,\n\n  /**\n   * Override internal is-scrolling state tracking.\n   * This property is primarily intended for use with the WindowScroller component.\n   */\n  \"isScrolling\": PropTypes.bool,\n\n  /**\n   * Opt-out of isScrolling param passed to cellRangeRenderer.\n   * To avoid the extra render when scroll stops.\n   */\n  \"isScrollingOptOut\": PropTypes.bool.isRequired,\n\n  /** Optional renderer to be used in place of rows when either :rowCount or :columnCount is 0.  */\n  \"noContentRenderer\": function noContentRenderer() {\n    return (typeof bpfrpt_proptype_NoContentRenderer === \"function\" ? bpfrpt_proptype_NoContentRenderer.isRequired ? bpfrpt_proptype_NoContentRenderer.isRequired : bpfrpt_proptype_NoContentRenderer : PropTypes.shape(bpfrpt_proptype_NoContentRenderer).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   */\n  \"onScroll\": PropTypes.func.isRequired,\n\n  /**\n   * Called whenever a horizontal or vertical scrollbar is added or removed.\n   * This prop is not intended for end-user use;\n   * It is used by MultiGrid to support fixed-row/fixed-column scroll syncing.\n   */\n  \"onScrollbarPresenceChange\": PropTypes.func.isRequired,\n\n  /** Callback invoked with information about the section of the Grid that was just rendered.  */\n  \"onSectionRendered\": PropTypes.func.isRequired,\n\n  /**\n   * Number of columns to render before/after the visible section of the grid.\n   * These columns can help for smoother scrolling on touch devices or browsers that send scroll events infrequently.\n   */\n  \"overscanColumnCount\": PropTypes.number.isRequired,\n\n  /**\n   * Calculates the number of cells to overscan before and after a specified range.\n   * This function ensures that overscanning doesn't exceed the available cells.\n   */\n  \"overscanIndicesGetter\": function overscanIndicesGetter() {\n    return (typeof bpfrpt_proptype_OverscanIndicesGetter === \"function\" ? bpfrpt_proptype_OverscanIndicesGetter.isRequired ? bpfrpt_proptype_OverscanIndicesGetter.isRequired : bpfrpt_proptype_OverscanIndicesGetter : PropTypes.shape(bpfrpt_proptype_OverscanIndicesGetter).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Number of rows to render above/below the visible section of the grid.\n   * These rows can help for smoother scrolling on touch devices or browsers that send scroll events infrequently.\n   */\n  \"overscanRowCount\": PropTypes.number.isRequired,\n\n  /** ARIA role for the grid element.  */\n  \"role\": PropTypes.string.isRequired,\n\n  /**\n   * Either a fixed row height (number) or a function that returns the height of a row given its index.\n   * Should implement the following interface: ({ index: number }): number\n   */\n  \"rowHeight\": function rowHeight() {\n    return (typeof bpfrpt_proptype_CellSize === \"function\" ? bpfrpt_proptype_CellSize.isRequired ? bpfrpt_proptype_CellSize.isRequired : bpfrpt_proptype_CellSize : PropTypes.shape(bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Number of rows in grid.  */\n  \"rowCount\": PropTypes.number.isRequired,\n\n  /** Wait this amount of time after the last scroll event before resetting Grid `pointer-events`. */\n  \"scrollingResetTimeInterval\": PropTypes.number.isRequired,\n\n  /** Horizontal offset. */\n  \"scrollLeft\": PropTypes.number,\n\n  /**\n   * Controls scroll-to-cell behavior of the Grid.\n   * The default (\"auto\") scrolls the least amount possible to ensure that the specified cell is fully visible.\n   * Use \"start\" to align cells to the top/left of the Grid and \"end\" to align bottom/right.\n   */\n  \"scrollToAlignment\": function scrollToAlignment() {\n    return (typeof bpfrpt_proptype_Alignment === \"function\" ? bpfrpt_proptype_Alignment.isRequired ? bpfrpt_proptype_Alignment.isRequired : bpfrpt_proptype_Alignment : PropTypes.shape(bpfrpt_proptype_Alignment).isRequired).apply(this, arguments);\n  },\n\n  /** Column index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToColumn\": PropTypes.number.isRequired,\n\n  /** Vertical offset. */\n  \"scrollTop\": PropTypes.number,\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToRow\": PropTypes.number.isRequired,\n\n  /** Optional inline style */\n  \"style\": PropTypes.object.isRequired,\n\n  /** Tab index for focus */\n  \"tabIndex\": PropTypes.number,\n\n  /** Width of Grid; this property determines the number of visible (vs virtualized) columns.  */\n  \"width\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(Grid, \"defaultProps\", {\n  'aria-label': 'grid',\n  'aria-readonly': true,\n  autoContainerWidth: false,\n  autoHeight: false,\n  autoWidth: false,\n  cellRangeRenderer: defaultCellRangeRenderer,\n  containerRole: 'rowgroup',\n  containerStyle: {},\n  estimatedColumnSize: 100,\n  estimatedRowSize: 30,\n  getScrollbarSize: scrollbarSize,\n  noContentRenderer: renderNull,\n  onScroll: function onScroll() {},\n  onScrollbarPresenceChange: function onScrollbarPresenceChange() {},\n  onSectionRendered: function onSectionRendered() {},\n  overscanColumnCount: 0,\n  overscanIndicesGetter: defaultOverscanIndicesGetter,\n  overscanRowCount: 10,\n  role: 'grid',\n  scrollingResetTimeInterval: DEFAULT_SCROLLING_RESET_TIME_INTERVAL,\n  scrollToAlignment: 'auto',\n  scrollToColumn: -1,\n  scrollToRow: -1,\n  style: {},\n  tabIndex: 0,\n  isScrollingOptOut: false\n});\n\npolyfill(Grid);\nexport default Grid;\nimport { bpfrpt_proptype_CellRenderer } from \"./types\";\nimport { bpfrpt_proptype_CellRangeRenderer } from \"./types\";\nimport { bpfrpt_proptype_CellPosition } from \"./types\";\nimport { bpfrpt_proptype_CellSize } from \"./types\";\nimport { bpfrpt_proptype_CellSizeGetter } from \"./types\";\nimport { bpfrpt_proptype_NoContentRenderer } from \"./types\";\nimport { bpfrpt_proptype_Scroll } from \"./types\";\nimport { bpfrpt_proptype_ScrollbarPresenceChange } from \"./types\";\nimport { bpfrpt_proptype_RenderedSection } from \"./types\";\nimport { bpfrpt_proptype_OverscanIndicesGetter } from \"./types\";\nimport { bpfrpt_proptype_Alignment } from \"./types\";\nimport { bpfrpt_proptype_CellCache } from \"./types\";\nimport { bpfrpt_proptype_StyleCache } from \"./types\";\nimport { bpfrpt_proptype_AnimationTimeoutId } from \"../utils/requestAnimationTimeout\";\nimport PropTypes from \"prop-types\";","import { caf, raf } from './animationFrame';\nvar bpfrpt_proptype_AnimationTimeoutId = process.env.NODE_ENV === 'production' ? null : {\n  \"id\": PropTypes.number.isRequired\n};\nexport var cancelAnimationTimeout = function cancelAnimationTimeout(frame) {\n  return caf(frame.id);\n};\n/**\n * Recursively calls requestAnimationFrame until a specified delay has been met or exceeded.\n * When the delay time has been reached the function you're timing out will be called.\n *\n * Credit: Joe Lambert (https://gist.github.com/joelambert/1002116#file-requesttimeout-js)\n */\n\nexport var requestAnimationTimeout = function requestAnimationTimeout(callback, delay) {\n  var start; // wait for end of processing current event handler, because event handler may be long\n\n  Promise.resolve().then(function () {\n    start = Date.now();\n  });\n\n  var timeout = function timeout() {\n    if (Date.now() - start >= delay) {\n      callback.call();\n    } else {\n      frame.id = raf(timeout);\n    }\n  };\n\n  var frame = {\n    id: raf(timeout)\n  };\n  return frame;\n};\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_AnimationTimeoutId };","export var SCROLL_DIRECTION_BACKWARD = -1;\nexport var SCROLL_DIRECTION_FORWARD = 1;\nexport var SCROLL_DIRECTION_HORIZONTAL = 'horizontal';\nexport var SCROLL_DIRECTION_VERTICAL = 'vertical';\n/**\n * Calculates the number of cells to overscan before and after a specified range.\n * This function ensures that overscanning doesn't exceed the available cells.\n */\n\nexport default function defaultOverscanIndicesGetter(_ref) {\n  var cellCount = _ref.cellCount,\n      overscanCellsCount = _ref.overscanCellsCount,\n      scrollDirection = _ref.scrollDirection,\n      startIndex = _ref.startIndex,\n      stopIndex = _ref.stopIndex;\n  // Make sure we render at least 1 cell extra before and after (except near boundaries)\n  // This is necessary in order to support keyboard navigation (TAB/SHIFT+TAB) in some cases\n  // For more info see issues #625\n  overscanCellsCount = Math.max(1, overscanCellsCount);\n\n  if (scrollDirection === SCROLL_DIRECTION_FORWARD) {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - 1),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + overscanCellsCount)\n    };\n  } else {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - overscanCellsCount),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + 1)\n    };\n  }\n}\nimport { bpfrpt_proptype_OverscanIndicesGetterParams } from \"./types\";\nimport { bpfrpt_proptype_OverscanIndices } from \"./types\";","var bpfrpt_proptype_ScrollIndices = process.env.NODE_ENV === 'production' ? null : {\n  \"scrollToColumn\": PropTypes.number.isRequired,\n  \"scrollToRow\": PropTypes.number.isRequired\n};\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_ScrollIndices };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\n/**\n * This HOC decorates a virtualized component and responds to arrow-key events by scrolling one row or column at a time.\n */\n\nvar ArrowKeyStepper = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(ArrowKeyStepper, _React$PureComponent);\n\n  function ArrowKeyStepper() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ArrowKeyStepper);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ArrowKeyStepper)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      scrollToColumn: 0,\n      scrollToRow: 0,\n      instanceProps: {\n        prevScrollToColumn: 0,\n        prevScrollToRow: 0\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_onKeyDown\", function (event) {\n      var _this$props = _this.props,\n          columnCount = _this$props.columnCount,\n          disabled = _this$props.disabled,\n          mode = _this$props.mode,\n          rowCount = _this$props.rowCount;\n\n      if (disabled) {\n        return;\n      }\n\n      var _this$_getScrollState = _this._getScrollState(),\n          scrollToColumnPrevious = _this$_getScrollState.scrollToColumn,\n          scrollToRowPrevious = _this$_getScrollState.scrollToRow;\n\n      var _this$_getScrollState2 = _this._getScrollState(),\n          scrollToColumn = _this$_getScrollState2.scrollToColumn,\n          scrollToRow = _this$_getScrollState2.scrollToRow; // The above cases all prevent default event event behavior.\n      // This is to keep the grid from scrolling after the snap-to update.\n\n\n      switch (event.key) {\n        case 'ArrowDown':\n          scrollToRow = mode === 'cells' ? Math.min(scrollToRow + 1, rowCount - 1) : Math.min(_this._rowStopIndex + 1, rowCount - 1);\n          break;\n\n        case 'ArrowLeft':\n          scrollToColumn = mode === 'cells' ? Math.max(scrollToColumn - 1, 0) : Math.max(_this._columnStartIndex - 1, 0);\n          break;\n\n        case 'ArrowRight':\n          scrollToColumn = mode === 'cells' ? Math.min(scrollToColumn + 1, columnCount - 1) : Math.min(_this._columnStopIndex + 1, columnCount - 1);\n          break;\n\n        case 'ArrowUp':\n          scrollToRow = mode === 'cells' ? Math.max(scrollToRow - 1, 0) : Math.max(_this._rowStartIndex - 1, 0);\n          break;\n      }\n\n      if (scrollToColumn !== scrollToColumnPrevious || scrollToRow !== scrollToRowPrevious) {\n        event.preventDefault();\n\n        _this._updateScrollState({\n          scrollToColumn: scrollToColumn,\n          scrollToRow: scrollToRow\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onSectionRendered\", function (_ref) {\n      var columnStartIndex = _ref.columnStartIndex,\n          columnStopIndex = _ref.columnStopIndex,\n          rowStartIndex = _ref.rowStartIndex,\n          rowStopIndex = _ref.rowStopIndex;\n      _this._columnStartIndex = columnStartIndex;\n      _this._columnStopIndex = columnStopIndex;\n      _this._rowStartIndex = rowStartIndex;\n      _this._rowStopIndex = rowStopIndex;\n    });\n\n    return _this;\n  }\n\n  _createClass(ArrowKeyStepper, [{\n    key: \"setScrollIndexes\",\n    value: function setScrollIndexes(_ref2) {\n      var scrollToColumn = _ref2.scrollToColumn,\n          scrollToRow = _ref2.scrollToRow;\n      this.setState({\n        scrollToRow: scrollToRow,\n        scrollToColumn: scrollToColumn\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          className = _this$props2.className,\n          children = _this$props2.children;\n\n      var _this$_getScrollState3 = this._getScrollState(),\n          scrollToColumn = _this$_getScrollState3.scrollToColumn,\n          scrollToRow = _this$_getScrollState3.scrollToRow;\n\n      return React.createElement(\"div\", {\n        className: className,\n        onKeyDown: this._onKeyDown\n      }, children({\n        onSectionRendered: this._onSectionRendered,\n        scrollToColumn: scrollToColumn,\n        scrollToRow: scrollToRow\n      }));\n    }\n  }, {\n    key: \"_getScrollState\",\n    value: function _getScrollState() {\n      return this.props.isControlled ? this.props : this.state;\n    }\n  }, {\n    key: \"_updateScrollState\",\n    value: function _updateScrollState(_ref3) {\n      var scrollToColumn = _ref3.scrollToColumn,\n          scrollToRow = _ref3.scrollToRow;\n      var _this$props3 = this.props,\n          isControlled = _this$props3.isControlled,\n          onScrollToChange = _this$props3.onScrollToChange;\n\n      if (typeof onScrollToChange === 'function') {\n        onScrollToChange({\n          scrollToColumn: scrollToColumn,\n          scrollToRow: scrollToRow\n        });\n      }\n\n      if (!isControlled) {\n        this.setState({\n          scrollToColumn: scrollToColumn,\n          scrollToRow: scrollToRow\n        });\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.isControlled) {\n        return {};\n      }\n\n      if (nextProps.scrollToColumn !== prevState.instanceProps.prevScrollToColumn || nextProps.scrollToRow !== prevState.instanceProps.prevScrollToRow) {\n        return _objectSpread({}, prevState, {\n          scrollToColumn: nextProps.scrollToColumn,\n          scrollToRow: nextProps.scrollToRow,\n          instanceProps: {\n            prevScrollToColumn: nextProps.scrollToColumn,\n            prevScrollToRow: nextProps.scrollToRow\n          }\n        });\n      }\n\n      return {};\n    }\n  }]);\n\n  return ArrowKeyStepper;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"children\": PropTypes.func.isRequired,\n  \"className\": PropTypes.string,\n  \"columnCount\": PropTypes.number.isRequired,\n  \"disabled\": PropTypes.bool.isRequired,\n  \"isControlled\": PropTypes.bool.isRequired,\n  \"mode\": PropTypes.oneOf([\"cells\", \"edges\"]).isRequired,\n  \"onScrollToChange\": PropTypes.func,\n  \"rowCount\": PropTypes.number.isRequired,\n  \"scrollToColumn\": PropTypes.number.isRequired,\n  \"scrollToRow\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(ArrowKeyStepper, \"defaultProps\", {\n  disabled: false,\n  isControlled: false,\n  mode: 'edges',\n  scrollToColumn: 0,\n  scrollToRow: 0\n});\n\npolyfill(ArrowKeyStepper);\nexport default ArrowKeyStepper;\nimport { bpfrpt_proptype_RenderedSection } from \"../Grid\";\nimport { bpfrpt_proptype_ScrollIndices } from \"./types\";\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport createDetectElementResize from '../vendor/detectElementResize';\nvar AutoSizer = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AutoSizer, _React$Component);\n\n  function AutoSizer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AutoSizer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AutoSizer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      height: _this.props.defaultHeight || 0,\n      width: _this.props.defaultWidth || 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_parentNode\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_autoSizer\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_window\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_detectElementResize\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_onResize\", function () {\n      var _this$props = _this.props,\n          disableHeight = _this$props.disableHeight,\n          disableWidth = _this$props.disableWidth,\n          onResize = _this$props.onResize;\n\n      if (_this._parentNode) {\n        // Guard against AutoSizer component being removed from the DOM immediately after being added.\n        // This can result in invalid style values which can result in NaN values if we don't handle them.\n        // See issue #150 for more context.\n        var height = _this._parentNode.offsetHeight || 0;\n        var width = _this._parentNode.offsetWidth || 0;\n        var win = _this._window || window;\n        var style = win.getComputedStyle(_this._parentNode) || {};\n        var paddingLeft = parseInt(style.paddingLeft, 10) || 0;\n        var paddingRight = parseInt(style.paddingRight, 10) || 0;\n        var paddingTop = parseInt(style.paddingTop, 10) || 0;\n        var paddingBottom = parseInt(style.paddingBottom, 10) || 0;\n        var newHeight = height - paddingTop - paddingBottom;\n        var newWidth = width - paddingLeft - paddingRight;\n\n        if (!disableHeight && _this.state.height !== newHeight || !disableWidth && _this.state.width !== newWidth) {\n          _this.setState({\n            height: height - paddingTop - paddingBottom,\n            width: width - paddingLeft - paddingRight\n          });\n\n          onResize({\n            height: height,\n            width: width\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setRef\", function (autoSizer) {\n      _this._autoSizer = autoSizer;\n    });\n\n    return _this;\n  }\n\n  _createClass(AutoSizer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var nonce = this.props.nonce;\n\n      if (this._autoSizer && this._autoSizer.parentNode && this._autoSizer.parentNode.ownerDocument && this._autoSizer.parentNode.ownerDocument.defaultView && this._autoSizer.parentNode instanceof this._autoSizer.parentNode.ownerDocument.defaultView.HTMLElement) {\n        // Delay access of parentNode until mount.\n        // This handles edge-cases where the component has already been unmounted before its ref has been set,\n        // As well as libraries like react-lite which have a slightly different lifecycle.\n        this._parentNode = this._autoSizer.parentNode;\n        this._window = this._autoSizer.parentNode.ownerDocument.defaultView; // Defer requiring resize handler in order to support server-side rendering.\n        // See issue #41\n\n        this._detectElementResize = createDetectElementResize(nonce, this._window);\n\n        this._detectElementResize.addResizeListener(this._parentNode, this._onResize);\n\n        this._onResize();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._detectElementResize && this._parentNode) {\n        this._detectElementResize.removeResizeListener(this._parentNode, this._onResize);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          children = _this$props2.children,\n          className = _this$props2.className,\n          disableHeight = _this$props2.disableHeight,\n          disableWidth = _this$props2.disableWidth,\n          style = _this$props2.style;\n      var _this$state = this.state,\n          height = _this$state.height,\n          width = _this$state.width; // Outer div should not force width/height since that may prevent containers from shrinking.\n      // Inner component should overflow and use calculated width/height.\n      // See issue #68 for more information.\n\n      var outerStyle = {\n        overflow: 'visible'\n      };\n      var childParams = {};\n\n      if (!disableHeight) {\n        outerStyle.height = 0;\n        childParams.height = height;\n      }\n\n      if (!disableWidth) {\n        outerStyle.width = 0;\n        childParams.width = width;\n      }\n      /**\n       * TODO: Avoid rendering children before the initial measurements have been collected.\n       * At best this would just be wasting cycles.\n       * Add this check into version 10 though as it could break too many ref callbacks in version 9.\n       * Note that if default width/height props were provided this would still work with SSR.\n      if (\n        height !== 0 &&\n        width !== 0\n      ) {\n        child = children({ height, width })\n      }\n      */\n\n\n      return React.createElement(\"div\", {\n        className: className,\n        ref: this._setRef,\n        style: _objectSpread({}, outerStyle, {}, style)\n      }, children(childParams));\n    }\n  }]);\n\n  return AutoSizer;\n}(React.Component), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  /** Function responsible for rendering children.*/\n  \"children\": PropTypes.func.isRequired,\n\n  /** Optional custom CSS class name to attach to root AutoSizer element.  */\n  \"className\": PropTypes.string,\n\n  /** Default height to use for initial render; useful for SSR */\n  \"defaultHeight\": PropTypes.number,\n\n  /** Default width to use for initial render; useful for SSR */\n  \"defaultWidth\": PropTypes.number,\n\n  /** Disable dynamic :height property */\n  \"disableHeight\": PropTypes.bool.isRequired,\n\n  /** Disable dynamic :width property */\n  \"disableWidth\": PropTypes.bool.isRequired,\n\n  /** Nonce of the inlined stylesheet for Content Security Policy */\n  \"nonce\": PropTypes.string,\n\n  /** Callback to be invoked on-resize */\n  \"onResize\": PropTypes.func.isRequired,\n\n  /** Optional inline style */\n  \"style\": PropTypes.object\n}), _temp);\n\n_defineProperty(AutoSizer, \"defaultProps\", {\n  onResize: function onResize() {},\n  disableHeight: false,\n  disableWidth: false,\n  style: {}\n});\n\nexport { AutoSizer as default };\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nimport * as React from 'react';\nimport { findDOMNode } from 'react-dom';\n\n/**\n * Wraps a cell and measures its rendered content.\n * Measurements are stored in a per-cell cache.\n * Cached-content is not be re-measured.\n */\nvar CellMeasurer = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(CellMeasurer, _React$PureComponent);\n\n  function CellMeasurer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CellMeasurer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CellMeasurer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"_child\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_measure\", function () {\n      var _this$props = _this.props,\n          cache = _this$props.cache,\n          _this$props$columnInd = _this$props.columnIndex,\n          columnIndex = _this$props$columnInd === void 0 ? 0 : _this$props$columnInd,\n          parent = _this$props.parent,\n          _this$props$rowIndex = _this$props.rowIndex,\n          rowIndex = _this$props$rowIndex === void 0 ? _this.props.index || 0 : _this$props$rowIndex;\n\n      var _this$_getCellMeasure = _this._getCellMeasurements(),\n          height = _this$_getCellMeasure.height,\n          width = _this$_getCellMeasure.width;\n\n      if (height !== cache.getHeight(rowIndex, columnIndex) || width !== cache.getWidth(rowIndex, columnIndex)) {\n        cache.set(rowIndex, columnIndex, width, height);\n\n        if (parent && typeof parent.recomputeGridSize === 'function') {\n          parent.recomputeGridSize({\n            columnIndex: columnIndex,\n            rowIndex: rowIndex\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_registerChild\", function (element) {\n      if (element && !(element instanceof Element)) {\n        console.warn('CellMeasurer registerChild expects to be passed Element or null');\n      }\n\n      _this._child = element;\n\n      if (element) {\n        _this._maybeMeasureCell();\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(CellMeasurer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._maybeMeasureCell();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._maybeMeasureCell();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      return typeof children === 'function' ? children({\n        measure: this._measure,\n        registerChild: this._registerChild\n      }) : children;\n    }\n  }, {\n    key: \"_getCellMeasurements\",\n    value: function _getCellMeasurements() {\n      var cache = this.props.cache;\n      var node = this._child || findDOMNode(this); // TODO Check for a bad combination of fixedWidth and missing numeric width or vice versa with height\n\n      if (node && node.ownerDocument && node.ownerDocument.defaultView && node instanceof node.ownerDocument.defaultView.HTMLElement) {\n        var styleWidth = node.style.width;\n        var styleHeight = node.style.height; // If we are re-measuring a cell that has already been measured,\n        // It will have a hard-coded width/height from the previous measurement.\n        // The fact that we are measuring indicates this measurement is probably stale,\n        // So explicitly clear it out (eg set to \"auto\") so we can recalculate.\n        // See issue #593 for more info.\n        // Even if we are measuring initially- if we're inside of a MultiGrid component,\n        // Explicitly clear width/height before measuring to avoid being tainted by another Grid.\n        // eg top/left Grid renders before bottom/right Grid\n        // Since the CellMeasurerCache is shared between them this taints derived cell size values.\n\n        if (!cache.hasFixedWidth()) {\n          node.style.width = 'auto';\n        }\n\n        if (!cache.hasFixedHeight()) {\n          node.style.height = 'auto';\n        }\n\n        var height = Math.ceil(node.offsetHeight);\n        var width = Math.ceil(node.offsetWidth); // Reset after measuring to avoid breaking styles; see #660\n\n        if (styleWidth) {\n          node.style.width = styleWidth;\n        }\n\n        if (styleHeight) {\n          node.style.height = styleHeight;\n        }\n\n        return {\n          height: height,\n          width: width\n        };\n      } else {\n        return {\n          height: 0,\n          width: 0\n        };\n      }\n    }\n  }, {\n    key: \"_maybeMeasureCell\",\n    value: function _maybeMeasureCell() {\n      var _this$props2 = this.props,\n          cache = _this$props2.cache,\n          _this$props2$columnIn = _this$props2.columnIndex,\n          columnIndex = _this$props2$columnIn === void 0 ? 0 : _this$props2$columnIn,\n          parent = _this$props2.parent,\n          _this$props2$rowIndex = _this$props2.rowIndex,\n          rowIndex = _this$props2$rowIndex === void 0 ? this.props.index || 0 : _this$props2$rowIndex;\n\n      if (!cache.has(rowIndex, columnIndex)) {\n        var _this$_getCellMeasure2 = this._getCellMeasurements(),\n            height = _this$_getCellMeasure2.height,\n            width = _this$_getCellMeasure2.width;\n\n        cache.set(rowIndex, columnIndex, width, height); // If size has changed, let Grid know to re-render.\n\n        if (parent && typeof parent.invalidateCellSizeAfterRender === 'function') {\n          parent.invalidateCellSizeAfterRender({\n            columnIndex: columnIndex,\n            rowIndex: rowIndex\n          });\n        }\n      }\n    }\n  }]);\n\n  return CellMeasurer;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"cache\": function cache() {\n    return (typeof bpfrpt_proptype_CellMeasureCache === \"function\" ? bpfrpt_proptype_CellMeasureCache.isRequired ? bpfrpt_proptype_CellMeasureCache.isRequired : bpfrpt_proptype_CellMeasureCache : PropTypes.shape(bpfrpt_proptype_CellMeasureCache).isRequired).apply(this, arguments);\n  },\n  \"children\": PropTypes.oneOfType([PropTypes.func, PropTypes.node]).isRequired,\n  \"columnIndex\": PropTypes.number,\n  \"index\": PropTypes.number,\n  \"parent\": PropTypes.shape({\n    invalidateCellSizeAfterRender: PropTypes.func,\n    recomputeGridSize: PropTypes.func\n  }).isRequired,\n  \"rowIndex\": PropTypes.number\n}), _temp); // Used for DEV mode warning check\n\n_defineProperty(CellMeasurer, \"__internalCellMeasurerFlag\", false);\n\nexport { CellMeasurer as default };\n\nif (process.env.NODE_ENV !== 'production') {\n  CellMeasurer.__internalCellMeasurerFlag = true;\n}\n\nimport { bpfrpt_proptype_CellMeasureCache } from \"./types\";\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nexport var DEFAULT_HEIGHT = 30;\nexport var DEFAULT_WIDTH = 100; // Enables more intelligent mapping of a given column and row index to an item ID.\n// This prevents a cell cache from being invalidated when its parent collection is modified.\n\n/**\n * Caches measurements for a given cell.\n */\nvar CellMeasurerCache =\n/*#__PURE__*/\nfunction () {\n  function CellMeasurerCache() {\n    var _this = this;\n\n    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, CellMeasurerCache);\n\n    _defineProperty(this, \"_cellHeightCache\", {});\n\n    _defineProperty(this, \"_cellWidthCache\", {});\n\n    _defineProperty(this, \"_columnWidthCache\", {});\n\n    _defineProperty(this, \"_rowHeightCache\", {});\n\n    _defineProperty(this, \"_defaultHeight\", void 0);\n\n    _defineProperty(this, \"_defaultWidth\", void 0);\n\n    _defineProperty(this, \"_minHeight\", void 0);\n\n    _defineProperty(this, \"_minWidth\", void 0);\n\n    _defineProperty(this, \"_keyMapper\", void 0);\n\n    _defineProperty(this, \"_hasFixedHeight\", void 0);\n\n    _defineProperty(this, \"_hasFixedWidth\", void 0);\n\n    _defineProperty(this, \"_columnCount\", 0);\n\n    _defineProperty(this, \"_rowCount\", 0);\n\n    _defineProperty(this, \"columnWidth\", function (_ref) {\n      var index = _ref.index;\n\n      var key = _this._keyMapper(0, index);\n\n      return _this._columnWidthCache[key] !== undefined ? _this._columnWidthCache[key] : _this._defaultWidth;\n    });\n\n    _defineProperty(this, \"rowHeight\", function (_ref2) {\n      var index = _ref2.index;\n\n      var key = _this._keyMapper(index, 0);\n\n      return _this._rowHeightCache[key] !== undefined ? _this._rowHeightCache[key] : _this._defaultHeight;\n    });\n\n    var defaultHeight = params.defaultHeight,\n        defaultWidth = params.defaultWidth,\n        fixedHeight = params.fixedHeight,\n        fixedWidth = params.fixedWidth,\n        keyMapper = params.keyMapper,\n        minHeight = params.minHeight,\n        minWidth = params.minWidth;\n    this._hasFixedHeight = fixedHeight === true;\n    this._hasFixedWidth = fixedWidth === true;\n    this._minHeight = minHeight || 0;\n    this._minWidth = minWidth || 0;\n    this._keyMapper = keyMapper || defaultKeyMapper;\n    this._defaultHeight = Math.max(this._minHeight, typeof defaultHeight === 'number' ? defaultHeight : DEFAULT_HEIGHT);\n    this._defaultWidth = Math.max(this._minWidth, typeof defaultWidth === 'number' ? defaultWidth : DEFAULT_WIDTH);\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (this._hasFixedHeight === false && this._hasFixedWidth === false) {\n        console.warn(\"CellMeasurerCache should only measure a cell's width or height. \" + 'You have configured CellMeasurerCache to measure both. ' + 'This will result in poor performance.');\n      }\n\n      if (this._hasFixedHeight === false && this._defaultHeight === 0) {\n        console.warn('Fixed height CellMeasurerCache should specify a :defaultHeight greater than 0. ' + 'Failing to do so will lead to unnecessary layout and poor performance.');\n      }\n\n      if (this._hasFixedWidth === false && this._defaultWidth === 0) {\n        console.warn('Fixed width CellMeasurerCache should specify a :defaultWidth greater than 0. ' + 'Failing to do so will lead to unnecessary layout and poor performance.');\n      }\n    }\n  }\n\n  _createClass(CellMeasurerCache, [{\n    key: \"clear\",\n    value: function clear(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      var key = this._keyMapper(rowIndex, columnIndex);\n\n      delete this._cellHeightCache[key];\n      delete this._cellWidthCache[key];\n\n      this._updateCachedColumnAndRowSizes(rowIndex, columnIndex);\n    }\n  }, {\n    key: \"clearAll\",\n    value: function clearAll() {\n      this._cellHeightCache = {};\n      this._cellWidthCache = {};\n      this._columnWidthCache = {};\n      this._rowHeightCache = {};\n      this._rowCount = 0;\n      this._columnCount = 0;\n    }\n  }, {\n    key: \"hasFixedHeight\",\n    value: function hasFixedHeight() {\n      return this._hasFixedHeight;\n    }\n  }, {\n    key: \"hasFixedWidth\",\n    value: function hasFixedWidth() {\n      return this._hasFixedWidth;\n    }\n  }, {\n    key: \"getHeight\",\n    value: function getHeight(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      if (this._hasFixedHeight) {\n        return this._defaultHeight;\n      } else {\n        var _key = this._keyMapper(rowIndex, columnIndex);\n\n        return this._cellHeightCache[_key] !== undefined ? Math.max(this._minHeight, this._cellHeightCache[_key]) : this._defaultHeight;\n      }\n    }\n  }, {\n    key: \"getWidth\",\n    value: function getWidth(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      if (this._hasFixedWidth) {\n        return this._defaultWidth;\n      } else {\n        var _key2 = this._keyMapper(rowIndex, columnIndex);\n\n        return this._cellWidthCache[_key2] !== undefined ? Math.max(this._minWidth, this._cellWidthCache[_key2]) : this._defaultWidth;\n      }\n    }\n  }, {\n    key: \"has\",\n    value: function has(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      var key = this._keyMapper(rowIndex, columnIndex);\n\n      return this._cellHeightCache[key] !== undefined;\n    }\n  }, {\n    key: \"set\",\n    value: function set(rowIndex, columnIndex, width, height) {\n      var key = this._keyMapper(rowIndex, columnIndex);\n\n      if (columnIndex >= this._columnCount) {\n        this._columnCount = columnIndex + 1;\n      }\n\n      if (rowIndex >= this._rowCount) {\n        this._rowCount = rowIndex + 1;\n      } // Size is cached per cell so we don't have to re-measure if cells are re-ordered.\n\n\n      this._cellHeightCache[key] = height;\n      this._cellWidthCache[key] = width;\n\n      this._updateCachedColumnAndRowSizes(rowIndex, columnIndex);\n    }\n  }, {\n    key: \"_updateCachedColumnAndRowSizes\",\n    value: function _updateCachedColumnAndRowSizes(rowIndex, columnIndex) {\n      // :columnWidth and :rowHeight are derived based on all cells in a column/row.\n      // Pre-cache these derived values for faster lookup later.\n      // Reads are expected to occur more frequently than writes in this case.\n      // Only update non-fixed dimensions though to avoid doing unnecessary work.\n      if (!this._hasFixedWidth) {\n        var columnWidth = 0;\n\n        for (var i = 0; i < this._rowCount; i++) {\n          columnWidth = Math.max(columnWidth, this.getWidth(i, columnIndex));\n        }\n\n        var columnKey = this._keyMapper(0, columnIndex);\n\n        this._columnWidthCache[columnKey] = columnWidth;\n      }\n\n      if (!this._hasFixedHeight) {\n        var rowHeight = 0;\n\n        for (var _i = 0; _i < this._columnCount; _i++) {\n          rowHeight = Math.max(rowHeight, this.getHeight(rowIndex, _i));\n        }\n\n        var rowKey = this._keyMapper(rowIndex, 0);\n\n        this._rowHeightCache[rowKey] = rowHeight;\n      }\n    }\n  }, {\n    key: \"defaultHeight\",\n    get: function get() {\n      return this._defaultHeight;\n    }\n  }, {\n    key: \"defaultWidth\",\n    get: function get() {\n      return this._defaultWidth;\n    }\n  }]);\n\n  return CellMeasurerCache;\n}();\n\nexport { CellMeasurerCache as default };\n\nfunction defaultKeyMapper(rowIndex, columnIndex) {\n  return \"\".concat(rowIndex, \"-\").concat(columnIndex);\n}\n\nimport { bpfrpt_proptype_CellMeasureCache } from \"./types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\nimport getScrollbarSize from 'dom-helpers/scrollbarSize'; // @TODO Merge Collection and CollectionView\n\n/**\n * Specifies the number of milliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nvar IS_SCROLLING_TIMEOUT = 150;\n/**\n * Controls whether the Grid updates the DOM element's scrollLeft/scrollTop based on the current state or just observes it.\n * This prevents Grid from interrupting mouse-wheel animations (see issue #2).\n */\n\nvar SCROLL_POSITION_CHANGE_REASONS = {\n  OBSERVED: 'observed',\n  REQUESTED: 'requested'\n};\n/**\n * Monitors changes in properties (eg. cellCount) and state (eg. scroll offsets) to determine when rendering needs to occur.\n * This component does not render any visible content itself; it defers to the specified :cellLayoutManager.\n */\n\nvar CollectionView =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(CollectionView, _React$PureComponent);\n\n  // Invokes callbacks only when their values have changed.\n  function CollectionView() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CollectionView);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CollectionView)).call.apply(_getPrototypeOf2, [this].concat(args))); // If this component is being rendered server-side, getScrollbarSize() will return undefined.\n    // We handle this case in componentDidMount()\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isScrolling: false,\n      scrollLeft: 0,\n      scrollTop: 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_calculateSizeAndPositionDataOnNextUpdate\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_onSectionRenderedMemoizer\", createCallbackMemoizer());\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollMemoizer\", createCallbackMemoizer(false));\n\n    _defineProperty(_assertThisInitialized(_this), \"_invokeOnSectionRenderedHelper\", function () {\n      var _this$props = _this.props,\n          cellLayoutManager = _this$props.cellLayoutManager,\n          onSectionRendered = _this$props.onSectionRendered;\n\n      _this._onSectionRenderedMemoizer({\n        callback: onSectionRendered,\n        indices: {\n          indices: cellLayoutManager.getLastRenderedIndices()\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_updateScrollPositionForScrollToCell\", function () {\n      var _this$props2 = _this.props,\n          cellLayoutManager = _this$props2.cellLayoutManager,\n          height = _this$props2.height,\n          scrollToAlignment = _this$props2.scrollToAlignment,\n          scrollToCell = _this$props2.scrollToCell,\n          width = _this$props2.width;\n      var _this$state = _this.state,\n          scrollLeft = _this$state.scrollLeft,\n          scrollTop = _this$state.scrollTop;\n\n      if (scrollToCell >= 0) {\n        var scrollPosition = cellLayoutManager.getScrollPositionForCell({\n          align: scrollToAlignment,\n          cellIndex: scrollToCell,\n          height: height,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          width: width\n        });\n\n        if (scrollPosition.scrollLeft !== scrollLeft || scrollPosition.scrollTop !== scrollTop) {\n          _this._setScrollPosition(scrollPosition);\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (event) {\n      // In certain edge-cases React dispatches an onScroll event with an invalid target.scrollLeft / target.scrollTop.\n      // This invalid event can be detected by comparing event.target to this component's scrollable DOM element.\n      // See issue #404 for more information.\n      if (event.target !== _this._scrollingContainer) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      _this._enablePointerEventsAfterDelay(); // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scrollTop never exceeds the total height.\n\n\n      var _this$props3 = _this.props,\n          cellLayoutManager = _this$props3.cellLayoutManager,\n          height = _this$props3.height,\n          isScrollingChange = _this$props3.isScrollingChange,\n          width = _this$props3.width;\n      var scrollbarSize = _this._scrollbarSize;\n\n      var _cellLayoutManager$ge = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge.height,\n          totalWidth = _cellLayoutManager$ge.width;\n\n      var scrollLeft = Math.max(0, Math.min(totalWidth - width + scrollbarSize, event.target.scrollLeft));\n      var scrollTop = Math.max(0, Math.min(totalHeight - height + scrollbarSize, event.target.scrollTop)); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n      if (_this.state.scrollLeft !== scrollLeft || _this.state.scrollTop !== scrollTop) {\n        // Browsers with cancelable scroll events (eg. Firefox) interrupt scrolling animations if scrollTop/scrollLeft is set.\n        // Other browsers (eg. Safari) don't scroll as well without the help under certain conditions (DOM or style changes during scrolling).\n        // All things considered, this seems to be the best current work around that I'm aware of.\n        // For more information see https://github.com/bvaughn/react-virtualized/pull/124\n        var scrollPositionChangeReason = event.cancelable ? SCROLL_POSITION_CHANGE_REASONS.OBSERVED : SCROLL_POSITION_CHANGE_REASONS.REQUESTED; // Synchronously set :isScrolling the first time (since _setNextState will reschedule its animation frame each time it's called)\n\n        if (!_this.state.isScrolling) {\n          isScrollingChange(true);\n        }\n\n        _this.setState({\n          isScrolling: true,\n          scrollLeft: scrollLeft,\n          scrollPositionChangeReason: scrollPositionChangeReason,\n          scrollTop: scrollTop\n        });\n      }\n\n      _this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        totalWidth: totalWidth,\n        totalHeight: totalHeight\n      });\n    });\n\n    _this._scrollbarSize = getScrollbarSize();\n\n    if (_this._scrollbarSize === undefined) {\n      _this._scrollbarSizeMeasured = false;\n      _this._scrollbarSize = 0;\n    } else {\n      _this._scrollbarSizeMeasured = true;\n    }\n\n    return _this;\n  }\n  /**\n   * Forced recompute of cell sizes and positions.\n   * This function should be called if cell sizes have changed but nothing else has.\n   * Since cell positions are calculated by callbacks, the collection view has no way of detecting when the underlying data has changed.\n   */\n\n\n  _createClass(CollectionView, [{\n    key: \"recomputeCellSizesAndPositions\",\n    value: function recomputeCellSizesAndPositions() {\n      this._calculateSizeAndPositionDataOnNextUpdate = true;\n      this.forceUpdate();\n    }\n    /* ---------------------------- Component lifecycle methods ---------------------------- */\n\n    /**\n     * @private\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) Empty content (0 rows or columns)\n     * 2) New scroll props overriding the current state\n     * 3) Cells-count or cells-size has changed, making previous scroll offsets invalid\n     */\n\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props4 = this.props,\n          cellLayoutManager = _this$props4.cellLayoutManager,\n          scrollLeft = _this$props4.scrollLeft,\n          scrollToCell = _this$props4.scrollToCell,\n          scrollTop = _this$props4.scrollTop; // If this component was first rendered server-side, scrollbar size will be undefined.\n      // In that event we need to remeasure.\n\n      if (!this._scrollbarSizeMeasured) {\n        this._scrollbarSize = getScrollbarSize();\n        this._scrollbarSizeMeasured = true;\n        this.setState({});\n      }\n\n      if (scrollToCell >= 0) {\n        this._updateScrollPositionForScrollToCell();\n      } else if (scrollLeft >= 0 || scrollTop >= 0) {\n        this._setScrollPosition({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n      } // Update onSectionRendered callback.\n\n\n      this._invokeOnSectionRenderedHelper();\n\n      var _cellLayoutManager$ge2 = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge2.height,\n          totalWidth = _cellLayoutManager$ge2.width; // Initialize onScroll callback.\n\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft || 0,\n        scrollTop: scrollTop || 0,\n        totalHeight: totalHeight,\n        totalWidth: totalWidth\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this$props5 = this.props,\n          height = _this$props5.height,\n          scrollToAlignment = _this$props5.scrollToAlignment,\n          scrollToCell = _this$props5.scrollToCell,\n          width = _this$props5.width;\n      var _this$state2 = this.state,\n          scrollLeft = _this$state2.scrollLeft,\n          scrollPositionChangeReason = _this$state2.scrollPositionChangeReason,\n          scrollTop = _this$state2.scrollTop; // Make sure requested changes to :scrollLeft or :scrollTop get applied.\n      // Assigning to scrollLeft/scrollTop tells the browser to interrupt any running scroll animations,\n      // And to discard any pending async changes to the scroll position that may have happened in the meantime (e.g. on a separate scrolling thread).\n      // So we only set these when we require an adjustment of the scroll position.\n      // See issue #2 for more information.\n\n      if (scrollPositionChangeReason === SCROLL_POSITION_CHANGE_REASONS.REQUESTED) {\n        if (scrollLeft >= 0 && scrollLeft !== prevState.scrollLeft && scrollLeft !== this._scrollingContainer.scrollLeft) {\n          this._scrollingContainer.scrollLeft = scrollLeft;\n        }\n\n        if (scrollTop >= 0 && scrollTop !== prevState.scrollTop && scrollTop !== this._scrollingContainer.scrollTop) {\n          this._scrollingContainer.scrollTop = scrollTop;\n        }\n      } // Update scroll offsets if the current :scrollToCell values requires it\n\n\n      if (height !== prevProps.height || scrollToAlignment !== prevProps.scrollToAlignment || scrollToCell !== prevProps.scrollToCell || width !== prevProps.width) {\n        this._updateScrollPositionForScrollToCell();\n      } // Update onRowsRendered callback if start/stop indices have changed\n\n\n      this._invokeOnSectionRenderedHelper();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._disablePointerEventsTimeoutId) {\n        clearTimeout(this._disablePointerEventsTimeoutId);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props6 = this.props,\n          autoHeight = _this$props6.autoHeight,\n          cellCount = _this$props6.cellCount,\n          cellLayoutManager = _this$props6.cellLayoutManager,\n          className = _this$props6.className,\n          height = _this$props6.height,\n          horizontalOverscanSize = _this$props6.horizontalOverscanSize,\n          id = _this$props6.id,\n          noContentRenderer = _this$props6.noContentRenderer,\n          style = _this$props6.style,\n          verticalOverscanSize = _this$props6.verticalOverscanSize,\n          width = _this$props6.width;\n      var _this$state3 = this.state,\n          isScrolling = _this$state3.isScrolling,\n          scrollLeft = _this$state3.scrollLeft,\n          scrollTop = _this$state3.scrollTop; // Memoization reset\n\n      if (this._lastRenderedCellCount !== cellCount || this._lastRenderedCellLayoutManager !== cellLayoutManager || this._calculateSizeAndPositionDataOnNextUpdate) {\n        this._lastRenderedCellCount = cellCount;\n        this._lastRenderedCellLayoutManager = cellLayoutManager;\n        this._calculateSizeAndPositionDataOnNextUpdate = false;\n        cellLayoutManager.calculateSizeAndPositionData();\n      }\n\n      var _cellLayoutManager$ge3 = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge3.height,\n          totalWidth = _cellLayoutManager$ge3.width; // Safely expand the rendered area by the specified overscan amount\n\n\n      var left = Math.max(0, scrollLeft - horizontalOverscanSize);\n      var top = Math.max(0, scrollTop - verticalOverscanSize);\n      var right = Math.min(totalWidth, scrollLeft + width + horizontalOverscanSize);\n      var bottom = Math.min(totalHeight, scrollTop + height + verticalOverscanSize);\n      var childrenToDisplay = height > 0 && width > 0 ? cellLayoutManager.cellRenderers({\n        height: bottom - top,\n        isScrolling: isScrolling,\n        width: right - left,\n        x: left,\n        y: top\n      }) : [];\n      var collectionStyle = {\n        boxSizing: 'border-box',\n        direction: 'ltr',\n        height: autoHeight ? 'auto' : height,\n        position: 'relative',\n        WebkitOverflowScrolling: 'touch',\n        width: width,\n        willChange: 'transform'\n      }; // Force browser to hide scrollbars when we know they aren't necessary.\n      // Otherwise once scrollbars appear they may not disappear again.\n      // For more info see issue #116\n\n      var verticalScrollBarSize = totalHeight > height ? this._scrollbarSize : 0;\n      var horizontalScrollBarSize = totalWidth > width ? this._scrollbarSize : 0; // Also explicitly init styles to 'auto' if scrollbars are required.\n      // This works around an obscure edge case where external CSS styles have not yet been loaded,\n      // But an initial scroll index of offset is set as an external prop.\n      // Without this style, Grid would render the correct range of cells but would NOT update its internal offset.\n      // This was originally reported via clauderic/react-infinite-calendar/issues/23\n\n      collectionStyle.overflowX = totalWidth + verticalScrollBarSize <= width ? 'hidden' : 'auto';\n      collectionStyle.overflowY = totalHeight + horizontalScrollBarSize <= height ? 'hidden' : 'auto';\n      return React.createElement(\"div\", {\n        ref: this._setScrollingContainerRef,\n        \"aria-label\": this.props['aria-label'],\n        className: clsx('ReactVirtualized__Collection', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: \"grid\",\n        style: _objectSpread({}, collectionStyle, {}, style),\n        tabIndex: 0\n      }, cellCount > 0 && React.createElement(\"div\", {\n        className: \"ReactVirtualized__Collection__innerScrollContainer\",\n        style: {\n          height: totalHeight,\n          maxHeight: totalHeight,\n          maxWidth: totalWidth,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          width: totalWidth\n        }\n      }, childrenToDisplay), cellCount === 0 && noContentRenderer());\n    }\n    /* ---------------------------- Helper methods ---------------------------- */\n\n    /**\n     * Sets an :isScrolling flag for a small window of time.\n     * This flag is used to disable pointer events on the scrollable portion of the Collection.\n     * This prevents jerky/stuttery mouse-wheel scrolling.\n     */\n\n  }, {\n    key: \"_enablePointerEventsAfterDelay\",\n    value: function _enablePointerEventsAfterDelay() {\n      var _this2 = this;\n\n      if (this._disablePointerEventsTimeoutId) {\n        clearTimeout(this._disablePointerEventsTimeoutId);\n      }\n\n      this._disablePointerEventsTimeoutId = setTimeout(function () {\n        var isScrollingChange = _this2.props.isScrollingChange;\n        isScrollingChange(false);\n        _this2._disablePointerEventsTimeoutId = null;\n\n        _this2.setState({\n          isScrolling: false\n        });\n      }, IS_SCROLLING_TIMEOUT);\n    }\n  }, {\n    key: \"_invokeOnScrollMemoizer\",\n    value: function _invokeOnScrollMemoizer(_ref) {\n      var _this3 = this;\n\n      var scrollLeft = _ref.scrollLeft,\n          scrollTop = _ref.scrollTop,\n          totalHeight = _ref.totalHeight,\n          totalWidth = _ref.totalWidth;\n\n      this._onScrollMemoizer({\n        callback: function callback(_ref2) {\n          var scrollLeft = _ref2.scrollLeft,\n              scrollTop = _ref2.scrollTop;\n          var _this3$props = _this3.props,\n              height = _this3$props.height,\n              onScroll = _this3$props.onScroll,\n              width = _this3$props.width;\n          onScroll({\n            clientHeight: height,\n            clientWidth: width,\n            scrollHeight: totalHeight,\n            scrollLeft: scrollLeft,\n            scrollTop: scrollTop,\n            scrollWidth: totalWidth\n          });\n        },\n        indices: {\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        }\n      });\n    }\n  }, {\n    key: \"_setScrollPosition\",\n    value: function _setScrollPosition(_ref3) {\n      var scrollLeft = _ref3.scrollLeft,\n          scrollTop = _ref3.scrollTop;\n      var newState = {\n        scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n      };\n\n      if (scrollLeft >= 0) {\n        newState.scrollLeft = scrollLeft;\n      }\n\n      if (scrollTop >= 0) {\n        newState.scrollTop = scrollTop;\n      }\n\n      if (scrollLeft >= 0 && scrollLeft !== this.state.scrollLeft || scrollTop >= 0 && scrollTop !== this.state.scrollTop) {\n        this.setState(newState);\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.cellCount === 0 && (prevState.scrollLeft !== 0 || prevState.scrollTop !== 0)) {\n        return {\n          scrollLeft: 0,\n          scrollTop: 0,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n        };\n      } else if (nextProps.scrollLeft !== prevState.scrollLeft || nextProps.scrollTop !== prevState.scrollTop) {\n        return {\n          scrollLeft: nextProps.scrollLeft != null ? nextProps.scrollLeft : prevState.scrollLeft,\n          scrollTop: nextProps.scrollTop != null ? nextProps.scrollTop : prevState.scrollTop,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return CollectionView;\n}(React.PureComponent);\n\n_defineProperty(CollectionView, \"defaultProps\", {\n  'aria-label': 'grid',\n  horizontalOverscanSize: 0,\n  noContentRenderer: function noContentRenderer() {\n    return null;\n  },\n  onScroll: function onScroll() {\n    return null;\n  },\n  onSectionRendered: function onSectionRendered() {\n    return null;\n  },\n  scrollToAlignment: 'auto',\n  scrollToCell: -1,\n  style: {},\n  verticalOverscanSize: 0\n});\n\nCollectionView.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  'aria-label': PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  autoHeight: PropTypes.bool,\n\n  /**\n   * Number of cells in collection.\n   */\n  cellCount: PropTypes.number.isRequired,\n\n  /**\n   * Calculates cell sizes and positions and manages rendering the appropriate cells given a specified window.\n   */\n  cellLayoutManager: PropTypes.object.isRequired,\n\n  /**\n   * Optional custom CSS class name to attach to root Collection element.\n   */\n  className: PropTypes.string,\n\n  /**\n   * Height of Collection; this property determines the number of visible (vs virtualized) rows.\n   */\n  height: PropTypes.number.isRequired,\n\n  /**\n   * Optional custom id to attach to root Collection element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * Enables the `Collection` to horiontally \"overscan\" its content similar to how `Grid` does.\n   * This can reduce flicker around the edges when a user scrolls quickly.\n   */\n  horizontalOverscanSize: PropTypes.number.isRequired,\n  isScrollingChange: PropTypes.func,\n\n  /**\n   * Optional renderer to be used in place of rows when either :rowCount or :cellCount is 0.\n   */\n  noContentRenderer: PropTypes.func.isRequired,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   * ({ clientHeight, clientWidth, scrollHeight, scrollLeft, scrollTop, scrollWidth }): void\n   */\n  onScroll: PropTypes.func.isRequired,\n\n  /**\n   * Callback invoked with information about the section of the Collection that was just rendered.\n   * This callback is passed a named :indices parameter which is an Array of the most recently rendered section indices.\n   */\n  onSectionRendered: PropTypes.func.isRequired,\n\n  /**\n   * Horizontal offset.\n   */\n  scrollLeft: PropTypes.number,\n\n  /**\n   * Controls scroll-to-cell behavior of the Grid.\n   * The default (\"auto\") scrolls the least amount possible to ensure that the specified cell is fully visible.\n   * Use \"start\" to align cells to the top/left of the Grid and \"end\" to align bottom/right.\n   */\n  scrollToAlignment: PropTypes.oneOf(['auto', 'end', 'start', 'center']).isRequired,\n\n  /**\n   * Cell index to ensure visible (by forcefully scrolling if necessary).\n   */\n  scrollToCell: PropTypes.number.isRequired,\n\n  /**\n   * Vertical offset.\n   */\n  scrollTop: PropTypes.number,\n\n  /**\n   * Optional custom inline style to attach to root Collection element.\n   */\n  style: PropTypes.object,\n\n  /**\n   * Enables the `Collection` to vertically \"overscan\" its content similar to how `Grid` does.\n   * This can reduce flicker around the edges when a user scrolls quickly.\n   */\n  verticalOverscanSize: PropTypes.number.isRequired,\n\n  /**\n   * Width of Collection; this property determines the number of visible (vs virtualized) columns.\n   */\n  width: PropTypes.number.isRequired\n} : {};\npolyfill(CollectionView);\nexport default CollectionView;","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\n/**\n * A section of the Window.\n * Window Sections are used to group nearby cells.\n * This enables us to more quickly determine which cells to display in a given region of the Window.\n * Sections have a fixed size and contain 0 to many cells (tracked by their indices).\n */\nvar Section =\n/*#__PURE__*/\nfunction () {\n  function Section(_ref) {\n    var height = _ref.height,\n        width = _ref.width,\n        x = _ref.x,\n        y = _ref.y;\n\n    _classCallCheck(this, Section);\n\n    this.height = height;\n    this.width = width;\n    this.x = x;\n    this.y = y;\n    this._indexMap = {};\n    this._indices = [];\n  }\n  /** Add a cell to this section. */\n\n\n  _createClass(Section, [{\n    key: \"addCellIndex\",\n    value: function addCellIndex(_ref2) {\n      var index = _ref2.index;\n\n      if (!this._indexMap[index]) {\n        this._indexMap[index] = true;\n\n        this._indices.push(index);\n      }\n    }\n    /** Get all cell indices that have been added to this section. */\n\n  }, {\n    key: \"getCellIndices\",\n    value: function getCellIndices() {\n      return this._indices;\n    }\n    /** Intended for debugger/test purposes only */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"\".concat(this.x, \",\").concat(this.y, \" \").concat(this.width, \"x\").concat(this.height);\n    }\n  }]);\n\n  return Section;\n}();\n\nexport { Section as default };\nimport { bpfrpt_proptype_Index } from \"./types\";\nimport { bpfrpt_proptype_SizeAndPositionInfo } from \"./types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\n/**\n * Window Sections are used to group nearby cells.\n * This enables us to more quickly determine which cells to display in a given region of the Window.\n * \n */\nimport Section from './Section';\nvar SECTION_SIZE = 100;\n\n/**\n * Contains 0 to many Sections.\n * Grows (and adds Sections) dynamically as cells are registered.\n * Automatically adds cells to the appropriate Section(s).\n */\nvar SectionManager =\n/*#__PURE__*/\nfunction () {\n  function SectionManager() {\n    var sectionSize = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : SECTION_SIZE;\n\n    _classCallCheck(this, SectionManager);\n\n    this._sectionSize = sectionSize;\n    this._cellMetadata = [];\n    this._sections = {};\n  }\n  /**\n   * Gets all cell indices contained in the specified region.\n   * A region may encompass 1 or more Sections.\n   */\n\n\n  _createClass(SectionManager, [{\n    key: \"getCellIndices\",\n    value: function getCellIndices(_ref) {\n      var height = _ref.height,\n          width = _ref.width,\n          x = _ref.x,\n          y = _ref.y;\n      var indices = {};\n      this.getSections({\n        height: height,\n        width: width,\n        x: x,\n        y: y\n      }).forEach(function (section) {\n        return section.getCellIndices().forEach(function (index) {\n          indices[index] = index;\n        });\n      }); // Object keys are strings; this function returns numbers\n\n      return Object.keys(indices).map(function (index) {\n        return indices[index];\n      });\n    }\n    /** Get size and position information for the cell specified. */\n\n  }, {\n    key: \"getCellMetadata\",\n    value: function getCellMetadata(_ref2) {\n      var index = _ref2.index;\n      return this._cellMetadata[index];\n    }\n    /** Get all Sections overlapping the specified region. */\n\n  }, {\n    key: \"getSections\",\n    value: function getSections(_ref3) {\n      var height = _ref3.height,\n          width = _ref3.width,\n          x = _ref3.x,\n          y = _ref3.y;\n      var sectionXStart = Math.floor(x / this._sectionSize);\n      var sectionXStop = Math.floor((x + width - 1) / this._sectionSize);\n      var sectionYStart = Math.floor(y / this._sectionSize);\n      var sectionYStop = Math.floor((y + height - 1) / this._sectionSize);\n      var sections = [];\n\n      for (var sectionX = sectionXStart; sectionX <= sectionXStop; sectionX++) {\n        for (var sectionY = sectionYStart; sectionY <= sectionYStop; sectionY++) {\n          var key = \"\".concat(sectionX, \".\").concat(sectionY);\n\n          if (!this._sections[key]) {\n            this._sections[key] = new Section({\n              height: this._sectionSize,\n              width: this._sectionSize,\n              x: sectionX * this._sectionSize,\n              y: sectionY * this._sectionSize\n            });\n          }\n\n          sections.push(this._sections[key]);\n        }\n      }\n\n      return sections;\n    }\n    /** Total number of Sections based on the currently registered cells. */\n\n  }, {\n    key: \"getTotalSectionCount\",\n    value: function getTotalSectionCount() {\n      return Object.keys(this._sections).length;\n    }\n    /** Intended for debugger/test purposes only */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var _this = this;\n\n      return Object.keys(this._sections).map(function (index) {\n        return _this._sections[index].toString();\n      });\n    }\n    /** Adds a cell to the appropriate Sections and registers it metadata for later retrievable. */\n\n  }, {\n    key: \"registerCell\",\n    value: function registerCell(_ref4) {\n      var cellMetadatum = _ref4.cellMetadatum,\n          index = _ref4.index;\n      this._cellMetadata[index] = cellMetadatum;\n      this.getSections(cellMetadatum).forEach(function (section) {\n        return section.addCellIndex({\n          index: index\n        });\n      });\n    }\n  }]);\n\n  return SectionManager;\n}();\n\nexport { SectionManager as default };\nimport { bpfrpt_proptype_Index } from \"./types\";\nimport { bpfrpt_proptype_SizeAndPositionInfo } from \"./types\";","/**\n * Determines a new offset that ensures a certain cell is visible, given the current offset.\n * If the cell is already visible then the current offset will be returned.\n * If the current offset is too great or small, it will be adjusted just enough to ensure the specified index is visible.\n *\n * @param align Desired alignment within container; one of \"auto\" (default), \"start\", or \"end\"\n * @param cellOffset Offset (x or y) position for cell\n * @param cellSize Size (width or height) of cell\n * @param containerSize Total size (width or height) of the container\n * @param currentOffset Container's current (x or y) offset\n * @return Offset to use to ensure the specified cell is visible\n */\nexport default function getUpdatedOffsetForIndex(_ref) {\n  var _ref$align = _ref.align,\n      align = _ref$align === void 0 ? 'auto' : _ref$align,\n      cellOffset = _ref.cellOffset,\n      cellSize = _ref.cellSize,\n      containerSize = _ref.containerSize,\n      currentOffset = _ref.currentOffset;\n  var maxOffset = cellOffset;\n  var minOffset = maxOffset - containerSize + cellSize;\n\n  switch (align) {\n    case 'start':\n      return maxOffset;\n\n    case 'end':\n      return minOffset;\n\n    case 'center':\n      return maxOffset - (containerSize - cellSize) / 2;\n\n    default:\n      return Math.max(minOffset, Math.min(maxOffset, currentOffset));\n  }\n}","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport CollectionView from './CollectionView';\nimport _calculateSizeAndPositionData from './utils/calculateSizeAndPositionData';\nimport getUpdatedOffsetForIndex from '../utils/getUpdatedOffsetForIndex';\n\n/**\n * Renders scattered or non-linear data.\n * Unlike Grid, which renders checkerboard data, Collection can render arbitrarily positioned- even overlapping- data.\n */\nvar Collection =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Collection, _React$PureComponent);\n\n  function Collection(props, context) {\n    var _this;\n\n    _classCallCheck(this, Collection);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Collection).call(this, props, context));\n    _this._cellMetadata = [];\n    _this._lastRenderedCellIndices = []; // Cell cache during scroll (for performance)\n\n    _this._cellCache = [];\n    _this._isScrollingChange = _this._isScrollingChange.bind(_assertThisInitialized(_this));\n    _this._setCollectionViewRef = _this._setCollectionViewRef.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Collection, [{\n    key: \"forceUpdate\",\n    value: function forceUpdate() {\n      if (this._collectionView !== undefined) {\n        this._collectionView.forceUpdate();\n      }\n    }\n    /** See Collection#recomputeCellSizesAndPositions */\n\n  }, {\n    key: \"recomputeCellSizesAndPositions\",\n    value: function recomputeCellSizesAndPositions() {\n      this._cellCache = [];\n\n      this._collectionView.recomputeCellSizesAndPositions();\n    }\n    /** React lifecycle methods */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var props = _extends({}, this.props);\n\n      return React.createElement(CollectionView, _extends({\n        cellLayoutManager: this,\n        isScrollingChange: this._isScrollingChange,\n        ref: this._setCollectionViewRef\n      }, props));\n    }\n    /** CellLayoutManager interface */\n\n  }, {\n    key: \"calculateSizeAndPositionData\",\n    value: function calculateSizeAndPositionData() {\n      var _this$props = this.props,\n          cellCount = _this$props.cellCount,\n          cellSizeAndPositionGetter = _this$props.cellSizeAndPositionGetter,\n          sectionSize = _this$props.sectionSize;\n\n      var data = _calculateSizeAndPositionData({\n        cellCount: cellCount,\n        cellSizeAndPositionGetter: cellSizeAndPositionGetter,\n        sectionSize: sectionSize\n      });\n\n      this._cellMetadata = data.cellMetadata;\n      this._sectionManager = data.sectionManager;\n      this._height = data.height;\n      this._width = data.width;\n    }\n    /**\n     * Returns the most recently rendered set of cell indices.\n     */\n\n  }, {\n    key: \"getLastRenderedIndices\",\n    value: function getLastRenderedIndices() {\n      return this._lastRenderedCellIndices;\n    }\n    /**\n     * Calculates the minimum amount of change from the current scroll position to ensure the specified cell is (fully) visible.\n     */\n\n  }, {\n    key: \"getScrollPositionForCell\",\n    value: function getScrollPositionForCell(_ref) {\n      var align = _ref.align,\n          cellIndex = _ref.cellIndex,\n          height = _ref.height,\n          scrollLeft = _ref.scrollLeft,\n          scrollTop = _ref.scrollTop,\n          width = _ref.width;\n      var cellCount = this.props.cellCount;\n\n      if (cellIndex >= 0 && cellIndex < cellCount) {\n        var cellMetadata = this._cellMetadata[cellIndex];\n        scrollLeft = getUpdatedOffsetForIndex({\n          align: align,\n          cellOffset: cellMetadata.x,\n          cellSize: cellMetadata.width,\n          containerSize: width,\n          currentOffset: scrollLeft,\n          targetIndex: cellIndex\n        });\n        scrollTop = getUpdatedOffsetForIndex({\n          align: align,\n          cellOffset: cellMetadata.y,\n          cellSize: cellMetadata.height,\n          containerSize: height,\n          currentOffset: scrollTop,\n          targetIndex: cellIndex\n        });\n      }\n\n      return {\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      };\n    }\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      return {\n        height: this._height,\n        width: this._width\n      };\n    }\n  }, {\n    key: \"cellRenderers\",\n    value: function cellRenderers(_ref2) {\n      var _this2 = this;\n\n      var height = _ref2.height,\n          isScrolling = _ref2.isScrolling,\n          width = _ref2.width,\n          x = _ref2.x,\n          y = _ref2.y;\n      var _this$props2 = this.props,\n          cellGroupRenderer = _this$props2.cellGroupRenderer,\n          cellRenderer = _this$props2.cellRenderer; // Store for later calls to getLastRenderedIndices()\n\n      this._lastRenderedCellIndices = this._sectionManager.getCellIndices({\n        height: height,\n        width: width,\n        x: x,\n        y: y\n      });\n      return cellGroupRenderer({\n        cellCache: this._cellCache,\n        cellRenderer: cellRenderer,\n        cellSizeAndPositionGetter: function cellSizeAndPositionGetter(_ref3) {\n          var index = _ref3.index;\n          return _this2._sectionManager.getCellMetadata({\n            index: index\n          });\n        },\n        indices: this._lastRenderedCellIndices,\n        isScrolling: isScrolling\n      });\n    }\n  }, {\n    key: \"_isScrollingChange\",\n    value: function _isScrollingChange(isScrolling) {\n      if (!isScrolling) {\n        this._cellCache = [];\n      }\n    }\n  }, {\n    key: \"_setCollectionViewRef\",\n    value: function _setCollectionViewRef(ref) {\n      this._collectionView = ref;\n    }\n  }]);\n\n  return Collection;\n}(React.PureComponent);\n\n_defineProperty(Collection, \"defaultProps\", {\n  'aria-label': 'grid',\n  cellGroupRenderer: defaultCellGroupRenderer\n});\n\nexport { Collection as default };\nCollection.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  'aria-label': PropTypes.string,\n\n  /**\n   * Number of cells in Collection.\n   */\n  cellCount: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a group of cells given their indices.\n   * Should implement the following interface: ({\n   *   cellSizeAndPositionGetter:Function,\n   *   indices: Array<number>,\n   *   cellRenderer: Function\n   * }): Array<PropTypes.node>\n   */\n  cellGroupRenderer: PropTypes.func.isRequired,\n\n  /**\n   * Responsible for rendering a cell given an row and column index.\n   * Should implement the following interface: ({ index: number, key: string, style: object }): PropTypes.element\n   */\n  cellRenderer: PropTypes.func.isRequired,\n\n  /**\n   * Callback responsible for returning size and offset/position information for a given cell (index).\n   * ({ index: number }): { height: number, width: number, x: number, y: number }\n   */\n  cellSizeAndPositionGetter: PropTypes.func.isRequired,\n\n  /**\n   * Optionally override the size of the sections a Collection's cells are split into.\n   */\n  sectionSize: PropTypes.number\n} : {};\n\nfunction defaultCellGroupRenderer(_ref4) {\n  var cellCache = _ref4.cellCache,\n      cellRenderer = _ref4.cellRenderer,\n      cellSizeAndPositionGetter = _ref4.cellSizeAndPositionGetter,\n      indices = _ref4.indices,\n      isScrolling = _ref4.isScrolling;\n  return indices.map(function (index) {\n    var cellMetadata = cellSizeAndPositionGetter({\n      index: index\n    });\n    var cellRendererProps = {\n      index: index,\n      isScrolling: isScrolling,\n      key: index,\n      style: {\n        height: cellMetadata.height,\n        left: cellMetadata.x,\n        position: 'absolute',\n        top: cellMetadata.y,\n        width: cellMetadata.width\n      }\n    }; // Avoid re-creating cells while scrolling.\n    // This can lead to the same cell being created many times and can cause performance issues for \"heavy\" cells.\n    // If a scroll is in progress- cache and reuse cells.\n    // This cache will be thrown away once scrolling complets.\n\n    if (isScrolling) {\n      if (!(index in cellCache)) {\n        cellCache[index] = cellRenderer(cellRendererProps);\n      }\n\n      return cellCache[index];\n    } else {\n      return cellRenderer(cellRendererProps);\n    }\n  }).filter(function (renderedCell) {\n    return !!renderedCell;\n  });\n}\n\nimport { bpfrpt_proptype_ScrollPosition } from \"./types\";\nimport { bpfrpt_proptype_SizeInfo } from \"./types\";","import SectionManager from '../SectionManager';\nexport default function calculateSizeAndPositionData(_ref) {\n  var cellCount = _ref.cellCount,\n      cellSizeAndPositionGetter = _ref.cellSizeAndPositionGetter,\n      sectionSize = _ref.sectionSize;\n  var cellMetadata = [];\n  var sectionManager = new SectionManager(sectionSize);\n  var height = 0;\n  var width = 0;\n\n  for (var index = 0; index < cellCount; index++) {\n    var cellMetadatum = cellSizeAndPositionGetter({\n      index: index\n    });\n\n    if (cellMetadatum.height == null || isNaN(cellMetadatum.height) || cellMetadatum.width == null || isNaN(cellMetadatum.width) || cellMetadatum.x == null || isNaN(cellMetadatum.x) || cellMetadatum.y == null || isNaN(cellMetadatum.y)) {\n      throw Error(\"Invalid metadata returned for cell \".concat(index, \":\\n        x:\").concat(cellMetadatum.x, \", y:\").concat(cellMetadatum.y, \", width:\").concat(cellMetadatum.width, \", height:\").concat(cellMetadatum.height));\n    }\n\n    height = Math.max(height, cellMetadatum.y + cellMetadatum.height);\n    width = Math.max(width, cellMetadatum.x + cellMetadatum.width);\n    cellMetadata[index] = cellMetadatum;\n    sectionManager.registerCell({\n      cellMetadatum: cellMetadatum,\n      index: index\n    });\n  }\n\n  return {\n    cellMetadata: cellMetadata,\n    height: height,\n    sectionManager: sectionManager,\n    width: width\n  };\n}","import Collection from './Collection';\nexport default Collection;\nexport { Collection };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\n/**\n * High-order component that auto-calculates column-widths for `Grid` cells.\n */\n\nvar ColumnSizer =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(ColumnSizer, _React$PureComponent);\n\n  function ColumnSizer(props, context) {\n    var _this;\n\n    _classCallCheck(this, ColumnSizer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ColumnSizer).call(this, props, context));\n    _this._registerChild = _this._registerChild.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ColumnSizer, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props = this.props,\n          columnMaxWidth = _this$props.columnMaxWidth,\n          columnMinWidth = _this$props.columnMinWidth,\n          columnCount = _this$props.columnCount,\n          width = _this$props.width;\n\n      if (columnMaxWidth !== prevProps.columnMaxWidth || columnMinWidth !== prevProps.columnMinWidth || columnCount !== prevProps.columnCount || width !== prevProps.width) {\n        if (this._registeredChild) {\n          this._registeredChild.recomputeGridSize();\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          children = _this$props2.children,\n          columnMaxWidth = _this$props2.columnMaxWidth,\n          columnMinWidth = _this$props2.columnMinWidth,\n          columnCount = _this$props2.columnCount,\n          width = _this$props2.width;\n      var safeColumnMinWidth = columnMinWidth || 1;\n      var safeColumnMaxWidth = columnMaxWidth ? Math.min(columnMaxWidth, width) : width;\n      var columnWidth = width / columnCount;\n      columnWidth = Math.max(safeColumnMinWidth, columnWidth);\n      columnWidth = Math.min(safeColumnMaxWidth, columnWidth);\n      columnWidth = Math.floor(columnWidth);\n      var adjustedWidth = Math.min(width, columnWidth * columnCount);\n      return children({\n        adjustedWidth: adjustedWidth,\n        columnWidth: columnWidth,\n        getColumnWidth: function getColumnWidth() {\n          return columnWidth;\n        },\n        registerChild: this._registerChild\n      });\n    }\n  }, {\n    key: \"_registerChild\",\n    value: function _registerChild(child) {\n      if (child && typeof child.recomputeGridSize !== 'function') {\n        throw Error('Unexpected child type registered; only Grid/MultiGrid children are supported.');\n      }\n\n      this._registeredChild = child;\n\n      if (this._registeredChild) {\n        this._registeredChild.recomputeGridSize();\n      }\n    }\n  }]);\n\n  return ColumnSizer;\n}(React.PureComponent);\n\nexport { ColumnSizer as default };\nColumnSizer.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering a virtualized Grid.\n   * This function should implement the following signature:\n   * ({ adjustedWidth, getColumnWidth, registerChild }) => PropTypes.element\n   *\n   * The specified :getColumnWidth function should be passed to the Grid's :columnWidth property.\n   * The :registerChild should be passed to the Grid's :ref property.\n   * The :adjustedWidth property is optional; it reflects the lesser of the overall width or the width of all columns.\n   */\n  children: PropTypes.func.isRequired,\n\n  /** Optional maximum allowed column width */\n  columnMaxWidth: PropTypes.number,\n\n  /** Optional minimum allowed column width */\n  columnMinWidth: PropTypes.number,\n\n  /** Number of columns in Grid or Table child */\n  columnCount: PropTypes.number.isRequired,\n\n  /** Width of Grid or Table child */\n  width: PropTypes.number.isRequired\n} : {};","import ColumnSizer from './ColumnSizer';\nexport default ColumnSizer;\nexport { ColumnSizer };","import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\n/**\n * Higher-order component that manages lazy-loading for \"infinite\" data.\n * This component decorates a virtual component and just-in-time prefetches rows as a user scrolls.\n * It is intended as a convenience component; fork it if you'd like finer-grained control over data-loading.\n */\n\nvar InfiniteLoader =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(InfiniteLoader, _React$PureComponent);\n\n  function InfiniteLoader(props, context) {\n    var _this;\n\n    _classCallCheck(this, InfiniteLoader);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(InfiniteLoader).call(this, props, context));\n    _this._loadMoreRowsMemoizer = createCallbackMemoizer();\n    _this._onRowsRendered = _this._onRowsRendered.bind(_assertThisInitialized(_this));\n    _this._registerChild = _this._registerChild.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(InfiniteLoader, [{\n    key: \"resetLoadMoreRowsCache\",\n    value: function resetLoadMoreRowsCache(autoReload) {\n      this._loadMoreRowsMemoizer = createCallbackMemoizer();\n\n      if (autoReload) {\n        this._doStuff(this._lastRenderedStartIndex, this._lastRenderedStopIndex);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      return children({\n        onRowsRendered: this._onRowsRendered,\n        registerChild: this._registerChild\n      });\n    }\n  }, {\n    key: \"_loadUnloadedRanges\",\n    value: function _loadUnloadedRanges(unloadedRanges) {\n      var _this2 = this;\n\n      var loadMoreRows = this.props.loadMoreRows;\n      unloadedRanges.forEach(function (unloadedRange) {\n        var promise = loadMoreRows(unloadedRange);\n\n        if (promise) {\n          promise.then(function () {\n            // Refresh the visible rows if any of them have just been loaded.\n            // Otherwise they will remain in their unloaded visual state.\n            if (isRangeVisible({\n              lastRenderedStartIndex: _this2._lastRenderedStartIndex,\n              lastRenderedStopIndex: _this2._lastRenderedStopIndex,\n              startIndex: unloadedRange.startIndex,\n              stopIndex: unloadedRange.stopIndex\n            })) {\n              if (_this2._registeredChild) {\n                forceUpdateReactVirtualizedComponent(_this2._registeredChild, _this2._lastRenderedStartIndex);\n              }\n            }\n          });\n        }\n      });\n    }\n  }, {\n    key: \"_onRowsRendered\",\n    value: function _onRowsRendered(_ref) {\n      var startIndex = _ref.startIndex,\n          stopIndex = _ref.stopIndex;\n      this._lastRenderedStartIndex = startIndex;\n      this._lastRenderedStopIndex = stopIndex;\n\n      this._doStuff(startIndex, stopIndex);\n    }\n  }, {\n    key: \"_doStuff\",\n    value: function _doStuff(startIndex, stopIndex) {\n      var _ref2,\n          _this3 = this;\n\n      var _this$props = this.props,\n          isRowLoaded = _this$props.isRowLoaded,\n          minimumBatchSize = _this$props.minimumBatchSize,\n          rowCount = _this$props.rowCount,\n          threshold = _this$props.threshold;\n      var unloadedRanges = scanForUnloadedRanges({\n        isRowLoaded: isRowLoaded,\n        minimumBatchSize: minimumBatchSize,\n        rowCount: rowCount,\n        startIndex: Math.max(0, startIndex - threshold),\n        stopIndex: Math.min(rowCount - 1, stopIndex + threshold)\n      }); // For memoize comparison\n\n      var squashedUnloadedRanges = (_ref2 = []).concat.apply(_ref2, _toConsumableArray(unloadedRanges.map(function (_ref3) {\n        var startIndex = _ref3.startIndex,\n            stopIndex = _ref3.stopIndex;\n        return [startIndex, stopIndex];\n      })));\n\n      this._loadMoreRowsMemoizer({\n        callback: function callback() {\n          _this3._loadUnloadedRanges(unloadedRanges);\n        },\n        indices: {\n          squashedUnloadedRanges: squashedUnloadedRanges\n        }\n      });\n    }\n  }, {\n    key: \"_registerChild\",\n    value: function _registerChild(registeredChild) {\n      this._registeredChild = registeredChild;\n    }\n  }]);\n\n  return InfiniteLoader;\n}(React.PureComponent);\n/**\n * Determines if the specified start/stop range is visible based on the most recently rendered range.\n */\n\n\n_defineProperty(InfiniteLoader, \"defaultProps\", {\n  minimumBatchSize: 10,\n  rowCount: 0,\n  threshold: 15\n});\n\nexport { InfiniteLoader as default };\nInfiniteLoader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering a virtualized component.\n   * This function should implement the following signature:\n   * ({ onRowsRendered, registerChild }) => PropTypes.element\n   *\n   * The specified :onRowsRendered function should be passed through to the child's :onRowsRendered property.\n   * The :registerChild callback should be set as the virtualized component's :ref.\n   */\n  children: PropTypes.func.isRequired,\n\n  /**\n   * Function responsible for tracking the loaded state of each row.\n   * It should implement the following signature: ({ index: number }): boolean\n   */\n  isRowLoaded: PropTypes.func.isRequired,\n\n  /**\n   * Callback to be invoked when more rows must be loaded.\n   * It should implement the following signature: ({ startIndex, stopIndex }): Promise\n   * The returned Promise should be resolved once row data has finished loading.\n   * It will be used to determine when to refresh the list with the newly-loaded data.\n   * This callback may be called multiple times in reaction to a single scroll event.\n   */\n  loadMoreRows: PropTypes.func.isRequired,\n\n  /**\n   * Minimum number of rows to be loaded at a time.\n   * This property can be used to batch requests to reduce HTTP requests.\n   */\n  minimumBatchSize: PropTypes.number.isRequired,\n\n  /**\n   * Number of rows in list; can be arbitrary high number if actual number is unknown.\n   */\n  rowCount: PropTypes.number.isRequired,\n\n  /**\n   * Threshold at which to pre-fetch data.\n   * A threshold X means that data will start loading when a user scrolls within X rows.\n   * This value defaults to 15.\n   */\n  threshold: PropTypes.number.isRequired\n} : {};\nexport function isRangeVisible(_ref4) {\n  var lastRenderedStartIndex = _ref4.lastRenderedStartIndex,\n      lastRenderedStopIndex = _ref4.lastRenderedStopIndex,\n      startIndex = _ref4.startIndex,\n      stopIndex = _ref4.stopIndex;\n  return !(startIndex > lastRenderedStopIndex || stopIndex < lastRenderedStartIndex);\n}\n/**\n * Returns all of the ranges within a larger range that contain unloaded rows.\n */\n\nexport function scanForUnloadedRanges(_ref5) {\n  var isRowLoaded = _ref5.isRowLoaded,\n      minimumBatchSize = _ref5.minimumBatchSize,\n      rowCount = _ref5.rowCount,\n      startIndex = _ref5.startIndex,\n      stopIndex = _ref5.stopIndex;\n  var unloadedRanges = [];\n  var rangeStartIndex = null;\n  var rangeStopIndex = null;\n\n  for (var index = startIndex; index <= stopIndex; index++) {\n    var loaded = isRowLoaded({\n      index: index\n    });\n\n    if (!loaded) {\n      rangeStopIndex = index;\n\n      if (rangeStartIndex === null) {\n        rangeStartIndex = index;\n      }\n    } else if (rangeStopIndex !== null) {\n      unloadedRanges.push({\n        startIndex: rangeStartIndex,\n        stopIndex: rangeStopIndex\n      });\n      rangeStartIndex = rangeStopIndex = null;\n    }\n  } // If :rangeStopIndex is not null it means we haven't ran out of unloaded rows.\n  // Scan forward to try filling our :minimumBatchSize.\n\n\n  if (rangeStopIndex !== null) {\n    var potentialStopIndex = Math.min(Math.max(rangeStopIndex, rangeStartIndex + minimumBatchSize - 1), rowCount - 1);\n\n    for (var _index = rangeStopIndex + 1; _index <= potentialStopIndex; _index++) {\n      if (!isRowLoaded({\n        index: _index\n      })) {\n        rangeStopIndex = _index;\n      } else {\n        break;\n      }\n    }\n\n    unloadedRanges.push({\n      startIndex: rangeStartIndex,\n      stopIndex: rangeStopIndex\n    });\n  } // Check to see if our first range ended prematurely.\n  // In this case we should scan backwards to try filling our :minimumBatchSize.\n\n\n  if (unloadedRanges.length) {\n    var firstUnloadedRange = unloadedRanges[0];\n\n    while (firstUnloadedRange.stopIndex - firstUnloadedRange.startIndex + 1 < minimumBatchSize && firstUnloadedRange.startIndex > 0) {\n      var _index2 = firstUnloadedRange.startIndex - 1;\n\n      if (!isRowLoaded({\n        index: _index2\n      })) {\n        firstUnloadedRange.startIndex = _index2;\n      } else {\n        break;\n      }\n    }\n  }\n\n  return unloadedRanges;\n}\n/**\n * Since RV components use shallowCompare we need to force a render (even though props haven't changed).\n * However InfiniteLoader may wrap a Grid or it may wrap a Table or List.\n * In the first case the built-in React forceUpdate() method is sufficient to force a re-render,\n * But in the latter cases we need to use the RV-specific forceUpdateGrid() method.\n * Else the inner Grid will not be re-rendered and visuals may be stale.\n *\n * Additionally, while a Grid is scrolling the cells can be cached,\n * So it's important to invalidate that cache by recalculating sizes\n * before forcing a rerender.\n */\n\nexport function forceUpdateReactVirtualizedComponent(component) {\n  var currentIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var recomputeSize = typeof component.recomputeGridSize === 'function' ? component.recomputeGridSize : component.recomputeRowHeights;\n\n  if (recomputeSize) {\n    recomputeSize.call(component, currentIndex);\n  } else {\n    component.forceUpdate();\n  }\n}","import InfiniteLoader from './InfiniteLoader';\nexport default InfiniteLoader;\nexport { InfiniteLoader };","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nimport Grid, { accessibilityOverscanIndicesGetter } from '../Grid';\nimport * as React from 'react';\nimport clsx from 'clsx';\n/**\n * It is inefficient to create and manage a large list of DOM elements within a scrolling container\n * if only a few of those elements are visible. The primary purpose of this component is to improve\n * performance by only rendering the DOM nodes that a user is able to see based on their current\n * scroll position.\n *\n * This component renders a virtualized list of elements with either fixed or dynamic heights.\n */\n\nvar List = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(List, _React$PureComponent);\n\n  function List() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, List);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(List)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"Grid\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRenderer\", function (_ref) {\n      var parent = _ref.parent,\n          rowIndex = _ref.rowIndex,\n          style = _ref.style,\n          isScrolling = _ref.isScrolling,\n          isVisible = _ref.isVisible,\n          key = _ref.key;\n      var rowRenderer = _this.props.rowRenderer; // TRICKY The style object is sometimes cached by Grid.\n      // This prevents new style objects from bypassing shallowCompare().\n      // However as of React 16, style props are auto-frozen (at least in dev mode)\n      // Check to make sure we can still modify the style before proceeding.\n      // https://github.com/facebook/react/commit/977357765b44af8ff0cfea327866861073095c12#commitcomment-20648713\n\n      var widthDescriptor = Object.getOwnPropertyDescriptor(style, 'width');\n\n      if (widthDescriptor && widthDescriptor.writable) {\n        // By default, List cells should be 100% width.\n        // This prevents them from flowing under a scrollbar (if present).\n        style.width = '100%';\n      }\n\n      return rowRenderer({\n        index: rowIndex,\n        style: style,\n        isScrolling: isScrolling,\n        isVisible: isVisible,\n        key: key,\n        parent: parent\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setRef\", function (ref) {\n      _this.Grid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (_ref2) {\n      var clientHeight = _ref2.clientHeight,\n          scrollHeight = _ref2.scrollHeight,\n          scrollTop = _ref2.scrollTop;\n      var onScroll = _this.props.onScroll;\n      onScroll({\n        clientHeight: clientHeight,\n        scrollHeight: scrollHeight,\n        scrollTop: scrollTop\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onSectionRendered\", function (_ref3) {\n      var rowOverscanStartIndex = _ref3.rowOverscanStartIndex,\n          rowOverscanStopIndex = _ref3.rowOverscanStopIndex,\n          rowStartIndex = _ref3.rowStartIndex,\n          rowStopIndex = _ref3.rowStopIndex;\n      var onRowsRendered = _this.props.onRowsRendered;\n      onRowsRendered({\n        overscanStartIndex: rowOverscanStartIndex,\n        overscanStopIndex: rowOverscanStopIndex,\n        startIndex: rowStartIndex,\n        stopIndex: rowStopIndex\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(List, [{\n    key: \"forceUpdateGrid\",\n    value: function forceUpdateGrid() {\n      if (this.Grid) {\n        this.Grid.forceUpdate();\n      }\n    }\n    /** See Grid#getOffsetForCell */\n\n  }, {\n    key: \"getOffsetForRow\",\n    value: function getOffsetForRow(_ref4) {\n      var alignment = _ref4.alignment,\n          index = _ref4.index;\n\n      if (this.Grid) {\n        var _this$Grid$getOffsetF = this.Grid.getOffsetForCell({\n          alignment: alignment,\n          rowIndex: index,\n          columnIndex: 0\n        }),\n            scrollTop = _this$Grid$getOffsetF.scrollTop;\n\n        return scrollTop;\n      }\n\n      return 0;\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref5) {\n      var columnIndex = _ref5.columnIndex,\n          rowIndex = _ref5.rowIndex;\n\n      if (this.Grid) {\n        this.Grid.invalidateCellSizeAfterRender({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllRows\",\n    value: function measureAllRows() {\n      if (this.Grid) {\n        this.Grid.measureAllCells();\n      }\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref6 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref6$columnIndex = _ref6.columnIndex,\n          columnIndex = _ref6$columnIndex === void 0 ? 0 : _ref6$columnIndex,\n          _ref6$rowIndex = _ref6.rowIndex,\n          rowIndex = _ref6$rowIndex === void 0 ? 0 : _ref6$rowIndex;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeRowHeights\",\n    value: function recomputeRowHeights() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: index,\n          columnIndex: 0\n        });\n      }\n    }\n    /** See Grid#scrollToPosition */\n\n  }, {\n    key: \"scrollToPosition\",\n    value: function scrollToPosition() {\n      var scrollTop = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToPosition({\n          scrollTop: scrollTop\n        });\n      }\n    }\n    /** See Grid#scrollToCell */\n\n  }, {\n    key: \"scrollToRow\",\n    value: function scrollToRow() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToCell({\n          columnIndex: 0,\n          rowIndex: index\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          className = _this$props.className,\n          noRowsRenderer = _this$props.noRowsRenderer,\n          scrollToIndex = _this$props.scrollToIndex,\n          width = _this$props.width;\n      var classNames = clsx('ReactVirtualized__List', className);\n      return React.createElement(Grid, _extends({}, this.props, {\n        autoContainerWidth: true,\n        cellRenderer: this._cellRenderer,\n        className: classNames,\n        columnWidth: width,\n        columnCount: 1,\n        noContentRenderer: noRowsRenderer,\n        onScroll: this._onScroll,\n        onSectionRendered: this._onSectionRendered,\n        ref: this._setRef,\n        scrollToRow: scrollToIndex\n      }));\n    }\n  }]);\n\n  return List;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"aria-label\": PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  \"autoHeight\": PropTypes.bool.isRequired,\n\n  /** Optional CSS class name */\n  \"className\": PropTypes.string,\n\n  /**\n   * Used to estimate the total height of a List before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  \"estimatedRowSize\": PropTypes.number.isRequired,\n\n  /** Height constraint for list (determines how many actual rows are rendered) */\n  \"height\": PropTypes.number.isRequired,\n\n  /** Optional renderer to be used in place of rows when rowCount is 0 */\n  \"noRowsRenderer\": function noRowsRenderer() {\n    return (typeof bpfrpt_proptype_NoContentRenderer === \"function\" ? bpfrpt_proptype_NoContentRenderer.isRequired ? bpfrpt_proptype_NoContentRenderer.isRequired : bpfrpt_proptype_NoContentRenderer : PropTypes.shape(bpfrpt_proptype_NoContentRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Callback invoked with information about the slice of rows that were just rendered.  */\n  \"onRowsRendered\": PropTypes.func.isRequired,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   */\n  \"onScroll\": PropTypes.func.isRequired,\n\n  /** See Grid#overscanIndicesGetter */\n  \"overscanIndicesGetter\": function overscanIndicesGetter() {\n    return (typeof bpfrpt_proptype_OverscanIndicesGetter === \"function\" ? bpfrpt_proptype_OverscanIndicesGetter.isRequired ? bpfrpt_proptype_OverscanIndicesGetter.isRequired : bpfrpt_proptype_OverscanIndicesGetter : PropTypes.shape(bpfrpt_proptype_OverscanIndicesGetter).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Number of rows to render above/below the visible bounds of the list.\n   * These rows can help for smoother scrolling on touch devices.\n   */\n  \"overscanRowCount\": PropTypes.number.isRequired,\n\n  /** Either a fixed row height (number) or a function that returns the height of a row given its index.  */\n  \"rowHeight\": function rowHeight() {\n    return (typeof bpfrpt_proptype_CellSize === \"function\" ? bpfrpt_proptype_CellSize.isRequired ? bpfrpt_proptype_CellSize.isRequired : bpfrpt_proptype_CellSize : PropTypes.shape(bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Responsible for rendering a row given an index; ({ index: number }): node */\n  \"rowRenderer\": function rowRenderer() {\n    return (typeof bpfrpt_proptype_RowRenderer === \"function\" ? bpfrpt_proptype_RowRenderer.isRequired ? bpfrpt_proptype_RowRenderer.isRequired : bpfrpt_proptype_RowRenderer : PropTypes.shape(bpfrpt_proptype_RowRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Number of rows in list. */\n  \"rowCount\": PropTypes.number.isRequired,\n\n  /** See Grid#scrollToAlignment */\n  \"scrollToAlignment\": function scrollToAlignment() {\n    return (typeof bpfrpt_proptype_Alignment === \"function\" ? bpfrpt_proptype_Alignment.isRequired ? bpfrpt_proptype_Alignment.isRequired : bpfrpt_proptype_Alignment : PropTypes.shape(bpfrpt_proptype_Alignment).isRequired).apply(this, arguments);\n  },\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToIndex\": PropTypes.number.isRequired,\n\n  /** Vertical offset. */\n  \"scrollTop\": PropTypes.number,\n\n  /** Optional inline style */\n  \"style\": PropTypes.object.isRequired,\n\n  /** Tab index for focus */\n  \"tabIndex\": PropTypes.number,\n\n  /** Width of list */\n  \"width\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(List, \"defaultProps\", {\n  autoHeight: false,\n  estimatedRowSize: 30,\n  onScroll: function onScroll() {},\n  noRowsRenderer: function noRowsRenderer() {\n    return null;\n  },\n  onRowsRendered: function onRowsRendered() {},\n  overscanIndicesGetter: accessibilityOverscanIndicesGetter,\n  overscanRowCount: 10,\n  scrollToAlignment: 'auto',\n  scrollToIndex: -1,\n  style: {}\n});\n\nexport { List as default };\nimport { bpfrpt_proptype_NoContentRenderer } from \"../Grid\";\nimport { bpfrpt_proptype_Alignment } from \"../Grid\";\nimport { bpfrpt_proptype_CellSize } from \"../Grid\";\nimport { bpfrpt_proptype_CellPosition } from \"../Grid\";\nimport { bpfrpt_proptype_OverscanIndicesGetter } from \"../Grid\";\nimport { bpfrpt_proptype_RenderedSection } from \"../Grid\";\nimport { bpfrpt_proptype_CellRendererParams } from \"../Grid\";\nimport { bpfrpt_proptype_Scroll as bpfrpt_proptype_GridScroll } from \"../Grid\";\nimport { bpfrpt_proptype_RowRenderer } from \"./types\";\nimport { bpfrpt_proptype_RenderedRows } from \"./types\";\nimport { bpfrpt_proptype_Scroll } from \"./types\";\nimport PropTypes from \"prop-types\";","/**\n * Binary Search Bounds\n * https://github.com/mikolalysenko/binary-search-bounds\n * Mikola Lysenko\n *\n * Inlined because of Content Security Policy issue caused by the use of `new Function(...)` syntax.\n * Issue reported here: https://github.com/mikolalysenko/binary-search-bounds/issues/5\n **/\nfunction _GEA(a, l, h, y) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x >= y) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _GEP(a, l, h, y, c) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) >= 0) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchGE(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _GEP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _GEA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _GTA(a, l, h, y) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x > y) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _GTP(a, l, h, y, c) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) > 0) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchGT(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _GTP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _GTA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _LTA(a, l, h, y) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x < y) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _LTP(a, l, h, y, c) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) < 0) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchLT(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _LTP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _LTA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _LEA(a, l, h, y) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x <= y) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _LEP(a, l, h, y, c) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) <= 0) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchLE(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _LEP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _LEA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _EQA(a, l, h, y) {\n  l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x === y) {\n      return m;\n    } else if (x <= y) {\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return -1;\n}\n\nfunction _EQP(a, l, h, y, c) {\n  l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n    var p = c(x, y);\n\n    if (p === 0) {\n      return m;\n    } else if (p <= 0) {\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return -1;\n}\n\nfunction dispatchBsearchEQ(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _EQP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _EQA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nexport default {\n  ge: dispatchBsearchGE,\n  gt: dispatchBsearchGT,\n  lt: dispatchBsearchLT,\n  le: dispatchBsearchLE,\n  eq: dispatchBsearchEQ\n};","/**\n * Binary Search Bounds\n * https://github.com/mikolalysenko/interval-tree-1d\n * Mikola Lysenko\n *\n * Inlined because of Content Security Policy issue caused by the use of `new Function(...)` syntax in an upstream dependency.\n * Issue reported here: https://github.com/mikolalysenko/binary-search-bounds/issues/5\n **/\nimport bounds from './binarySearchBounds';\nvar NOT_FOUND = 0;\nvar SUCCESS = 1;\nvar EMPTY = 2;\n\nfunction IntervalTreeNode(mid, left, right, leftPoints, rightPoints) {\n  this.mid = mid;\n  this.left = left;\n  this.right = right;\n  this.leftPoints = leftPoints;\n  this.rightPoints = rightPoints;\n  this.count = (left ? left.count : 0) + (right ? right.count : 0) + leftPoints.length;\n}\n\nvar proto = IntervalTreeNode.prototype;\n\nfunction copy(a, b) {\n  a.mid = b.mid;\n  a.left = b.left;\n  a.right = b.right;\n  a.leftPoints = b.leftPoints;\n  a.rightPoints = b.rightPoints;\n  a.count = b.count;\n}\n\nfunction rebuild(node, intervals) {\n  var ntree = createIntervalTree(intervals);\n  node.mid = ntree.mid;\n  node.left = ntree.left;\n  node.right = ntree.right;\n  node.leftPoints = ntree.leftPoints;\n  node.rightPoints = ntree.rightPoints;\n  node.count = ntree.count;\n}\n\nfunction rebuildWithInterval(node, interval) {\n  var intervals = node.intervals([]);\n  intervals.push(interval);\n  rebuild(node, intervals);\n}\n\nfunction rebuildWithoutInterval(node, interval) {\n  var intervals = node.intervals([]);\n  var idx = intervals.indexOf(interval);\n\n  if (idx < 0) {\n    return NOT_FOUND;\n  }\n\n  intervals.splice(idx, 1);\n  rebuild(node, intervals);\n  return SUCCESS;\n}\n\nproto.intervals = function (result) {\n  result.push.apply(result, this.leftPoints);\n\n  if (this.left) {\n    this.left.intervals(result);\n  }\n\n  if (this.right) {\n    this.right.intervals(result);\n  }\n\n  return result;\n};\n\nproto.insert = function (interval) {\n  var weight = this.count - this.leftPoints.length;\n  this.count += 1;\n\n  if (interval[1] < this.mid) {\n    if (this.left) {\n      if (4 * (this.left.count + 1) > 3 * (weight + 1)) {\n        rebuildWithInterval(this, interval);\n      } else {\n        this.left.insert(interval);\n      }\n    } else {\n      this.left = createIntervalTree([interval]);\n    }\n  } else if (interval[0] > this.mid) {\n    if (this.right) {\n      if (4 * (this.right.count + 1) > 3 * (weight + 1)) {\n        rebuildWithInterval(this, interval);\n      } else {\n        this.right.insert(interval);\n      }\n    } else {\n      this.right = createIntervalTree([interval]);\n    }\n  } else {\n    var l = bounds.ge(this.leftPoints, interval, compareBegin);\n    var r = bounds.ge(this.rightPoints, interval, compareEnd);\n    this.leftPoints.splice(l, 0, interval);\n    this.rightPoints.splice(r, 0, interval);\n  }\n};\n\nproto.remove = function (interval) {\n  var weight = this.count - this.leftPoints;\n\n  if (interval[1] < this.mid) {\n    if (!this.left) {\n      return NOT_FOUND;\n    }\n\n    var rw = this.right ? this.right.count : 0;\n\n    if (4 * rw > 3 * (weight - 1)) {\n      return rebuildWithoutInterval(this, interval);\n    }\n\n    var r = this.left.remove(interval);\n\n    if (r === EMPTY) {\n      this.left = null;\n      this.count -= 1;\n      return SUCCESS;\n    } else if (r === SUCCESS) {\n      this.count -= 1;\n    }\n\n    return r;\n  } else if (interval[0] > this.mid) {\n    if (!this.right) {\n      return NOT_FOUND;\n    }\n\n    var lw = this.left ? this.left.count : 0;\n\n    if (4 * lw > 3 * (weight - 1)) {\n      return rebuildWithoutInterval(this, interval);\n    }\n\n    var r = this.right.remove(interval);\n\n    if (r === EMPTY) {\n      this.right = null;\n      this.count -= 1;\n      return SUCCESS;\n    } else if (r === SUCCESS) {\n      this.count -= 1;\n    }\n\n    return r;\n  } else {\n    if (this.count === 1) {\n      if (this.leftPoints[0] === interval) {\n        return EMPTY;\n      } else {\n        return NOT_FOUND;\n      }\n    }\n\n    if (this.leftPoints.length === 1 && this.leftPoints[0] === interval) {\n      if (this.left && this.right) {\n        var p = this;\n        var n = this.left;\n\n        while (n.right) {\n          p = n;\n          n = n.right;\n        }\n\n        if (p === this) {\n          n.right = this.right;\n        } else {\n          var l = this.left;\n          var r = this.right;\n          p.count -= n.count;\n          p.right = n.left;\n          n.left = l;\n          n.right = r;\n        }\n\n        copy(this, n);\n        this.count = (this.left ? this.left.count : 0) + (this.right ? this.right.count : 0) + this.leftPoints.length;\n      } else if (this.left) {\n        copy(this, this.left);\n      } else {\n        copy(this, this.right);\n      }\n\n      return SUCCESS;\n    }\n\n    for (var l = bounds.ge(this.leftPoints, interval, compareBegin); l < this.leftPoints.length; ++l) {\n      if (this.leftPoints[l][0] !== interval[0]) {\n        break;\n      }\n\n      if (this.leftPoints[l] === interval) {\n        this.count -= 1;\n        this.leftPoints.splice(l, 1);\n\n        for (var r = bounds.ge(this.rightPoints, interval, compareEnd); r < this.rightPoints.length; ++r) {\n          if (this.rightPoints[r][1] !== interval[1]) {\n            break;\n          } else if (this.rightPoints[r] === interval) {\n            this.rightPoints.splice(r, 1);\n            return SUCCESS;\n          }\n        }\n      }\n    }\n\n    return NOT_FOUND;\n  }\n};\n\nfunction reportLeftRange(arr, hi, cb) {\n  for (var i = 0; i < arr.length && arr[i][0] <= hi; ++i) {\n    var r = cb(arr[i]);\n\n    if (r) {\n      return r;\n    }\n  }\n}\n\nfunction reportRightRange(arr, lo, cb) {\n  for (var i = arr.length - 1; i >= 0 && arr[i][1] >= lo; --i) {\n    var r = cb(arr[i]);\n\n    if (r) {\n      return r;\n    }\n  }\n}\n\nfunction reportRange(arr, cb) {\n  for (var i = 0; i < arr.length; ++i) {\n    var r = cb(arr[i]);\n\n    if (r) {\n      return r;\n    }\n  }\n}\n\nproto.queryPoint = function (x, cb) {\n  if (x < this.mid) {\n    if (this.left) {\n      var r = this.left.queryPoint(x, cb);\n\n      if (r) {\n        return r;\n      }\n    }\n\n    return reportLeftRange(this.leftPoints, x, cb);\n  } else if (x > this.mid) {\n    if (this.right) {\n      var r = this.right.queryPoint(x, cb);\n\n      if (r) {\n        return r;\n      }\n    }\n\n    return reportRightRange(this.rightPoints, x, cb);\n  } else {\n    return reportRange(this.leftPoints, cb);\n  }\n};\n\nproto.queryInterval = function (lo, hi, cb) {\n  if (lo < this.mid && this.left) {\n    var r = this.left.queryInterval(lo, hi, cb);\n\n    if (r) {\n      return r;\n    }\n  }\n\n  if (hi > this.mid && this.right) {\n    var r = this.right.queryInterval(lo, hi, cb);\n\n    if (r) {\n      return r;\n    }\n  }\n\n  if (hi < this.mid) {\n    return reportLeftRange(this.leftPoints, hi, cb);\n  } else if (lo > this.mid) {\n    return reportRightRange(this.rightPoints, lo, cb);\n  } else {\n    return reportRange(this.leftPoints, cb);\n  }\n};\n\nfunction compareNumbers(a, b) {\n  return a - b;\n}\n\nfunction compareBegin(a, b) {\n  var d = a[0] - b[0];\n\n  if (d) {\n    return d;\n  }\n\n  return a[1] - b[1];\n}\n\nfunction compareEnd(a, b) {\n  var d = a[1] - b[1];\n\n  if (d) {\n    return d;\n  }\n\n  return a[0] - b[0];\n}\n\nfunction createIntervalTree(intervals) {\n  if (intervals.length === 0) {\n    return null;\n  }\n\n  var pts = [];\n\n  for (var i = 0; i < intervals.length; ++i) {\n    pts.push(intervals[i][0], intervals[i][1]);\n  }\n\n  pts.sort(compareNumbers);\n  var mid = pts[pts.length >> 1];\n  var leftIntervals = [];\n  var rightIntervals = [];\n  var centerIntervals = [];\n\n  for (var i = 0; i < intervals.length; ++i) {\n    var s = intervals[i];\n\n    if (s[1] < mid) {\n      leftIntervals.push(s);\n    } else if (mid < s[0]) {\n      rightIntervals.push(s);\n    } else {\n      centerIntervals.push(s);\n    }\n  } //Split center intervals\n\n\n  var leftPoints = centerIntervals;\n  var rightPoints = centerIntervals.slice();\n  leftPoints.sort(compareBegin);\n  rightPoints.sort(compareEnd);\n  return new IntervalTreeNode(mid, createIntervalTree(leftIntervals), createIntervalTree(rightIntervals), leftPoints, rightPoints);\n} //User friendly wrapper that makes it possible to support empty trees\n\n\nfunction IntervalTree(root) {\n  this.root = root;\n}\n\nvar tproto = IntervalTree.prototype;\n\ntproto.insert = function (interval) {\n  if (this.root) {\n    this.root.insert(interval);\n  } else {\n    this.root = new IntervalTreeNode(interval[0], null, null, [interval], [interval]);\n  }\n};\n\ntproto.remove = function (interval) {\n  if (this.root) {\n    var r = this.root.remove(interval);\n\n    if (r === EMPTY) {\n      this.root = null;\n    }\n\n    return r !== NOT_FOUND;\n  }\n\n  return false;\n};\n\ntproto.queryPoint = function (p, cb) {\n  if (this.root) {\n    return this.root.queryPoint(p, cb);\n  }\n};\n\ntproto.queryInterval = function (lo, hi, cb) {\n  if (lo <= hi && this.root) {\n    return this.root.queryInterval(lo, hi, cb);\n  }\n};\n\nObject.defineProperty(tproto, 'count', {\n  get: function get() {\n    if (this.root) {\n      return this.root.count;\n    }\n\n    return 0;\n  }\n});\nObject.defineProperty(tproto, 'intervals', {\n  get: function get() {\n    if (this.root) {\n      return this.root.intervals([]);\n    }\n\n    return [];\n  }\n});\nexport default function createWrapper(intervals) {\n  if (!intervals || intervals.length === 0) {\n    return new IntervalTree(null);\n  }\n\n  return new IntervalTree(createIntervalTree(intervals));\n}","import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport createIntervalTree from '../vendor/intervalTree';\n\n// Position cache requirements:\n//   O(log(n)) lookup of cells to render for a given viewport size\n//   O(1) lookup of shortest measured column (so we know when to enter phase 1)\nvar PositionCache =\n/*#__PURE__*/\nfunction () {\n  function PositionCache() {\n    _classCallCheck(this, PositionCache);\n\n    _defineProperty(this, \"_columnSizeMap\", {});\n\n    _defineProperty(this, \"_intervalTree\", createIntervalTree());\n\n    _defineProperty(this, \"_leftMap\", {});\n  }\n\n  _createClass(PositionCache, [{\n    key: \"estimateTotalHeight\",\n    value: function estimateTotalHeight(cellCount, columnCount, defaultCellHeight) {\n      var unmeasuredCellCount = cellCount - this.count;\n      return this.tallestColumnSize + Math.ceil(unmeasuredCellCount / columnCount) * defaultCellHeight;\n    } // Render all cells visible within the viewport range defined.\n\n  }, {\n    key: \"range\",\n    value: function range(scrollTop, clientHeight, renderCallback) {\n      var _this = this;\n\n      this._intervalTree.queryInterval(scrollTop, scrollTop + clientHeight, function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 3),\n            top = _ref2[0],\n            _ = _ref2[1],\n            index = _ref2[2];\n\n        return renderCallback(index, _this._leftMap[index], top);\n      });\n    }\n  }, {\n    key: \"setPosition\",\n    value: function setPosition(index, left, top, height) {\n      this._intervalTree.insert([top, top + height, index]);\n\n      this._leftMap[index] = left;\n      var columnSizeMap = this._columnSizeMap;\n      var columnHeight = columnSizeMap[left];\n\n      if (columnHeight === undefined) {\n        columnSizeMap[left] = top + height;\n      } else {\n        columnSizeMap[left] = Math.max(columnHeight, top + height);\n      }\n    }\n  }, {\n    key: \"count\",\n    get: function get() {\n      return this._intervalTree.count;\n    }\n  }, {\n    key: \"shortestColumnSize\",\n    get: function get() {\n      var columnSizeMap = this._columnSizeMap;\n      var size = 0;\n\n      for (var i in columnSizeMap) {\n        var height = columnSizeMap[i];\n        size = size === 0 ? height : Math.min(size, height);\n      }\n\n      return size;\n    }\n  }, {\n    key: \"tallestColumnSize\",\n    get: function get() {\n      var columnSizeMap = this._columnSizeMap;\n      var size = 0;\n\n      for (var i in columnSizeMap) {\n        var height = columnSizeMap[i];\n        size = Math.max(size, height);\n      }\n\n      return size;\n    }\n  }]);\n\n  return PositionCache;\n}();\n\nexport { PositionCache as default };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport clsx from 'clsx';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport PositionCache from './PositionCache';\nimport { requestAnimationTimeout, cancelAnimationTimeout } from '../utils/requestAnimationTimeout';\nvar emptyObject = {};\n/**\n * Specifies the number of miliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nexport var DEFAULT_SCROLLING_RESET_TIME_INTERVAL = 150;\n/**\n * This component efficiently displays arbitrarily positioned cells using windowing techniques.\n * Cell position is determined by an injected `cellPositioner` property.\n * Windowing is vertical; this component does not support horizontal scrolling.\n *\n * Rendering occurs in two phases:\n * 1) First pass uses estimated cell sizes (provided by the cache) to determine how many cells to measure in a batch.\n *    Batch size is chosen using a fast, naive layout algorithm that stacks images in order until the viewport has been filled.\n *    After measurement is complete (componentDidMount or componentDidUpdate) this component evaluates positioned cells\n *    in order to determine if another measurement pass is required (eg if actual cell sizes were less than estimated sizes).\n *    All measurements are permanently cached (keyed by `keyMapper`) for performance purposes.\n * 2) Second pass uses the external `cellPositioner` to layout cells.\n *    At this time the positioner has access to cached size measurements for all cells.\n *    The positions it returns are cached by Masonry for fast access later.\n *    Phase one is repeated if the user scrolls beyond the current layout's bounds.\n *    If the layout is invalidated due to eg a resize, cached positions can be cleared using `recomputeCellPositions()`.\n *\n * Animation constraints:\n *   Simple animations are supported (eg translate/slide into place on initial reveal).\n *   More complex animations are not (eg flying from one position to another on resize).\n *\n * Layout constraints:\n *   This component supports multi-column layout.\n *   The height of each item may vary.\n *   The width of each item must not exceed the width of the column it is \"in\".\n *   The left position of all items within a column must align.\n *   (Items may not span multiple columns.)\n */\n\nvar Masonry = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Masonry, _React$PureComponent);\n\n  function Masonry() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Masonry);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Masonry)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isScrolling: false,\n      scrollTop: 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_debounceResetIsScrollingId\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_invalidateOnUpdateStartIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_invalidateOnUpdateStopIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_positionCache\", new PositionCache());\n\n    _defineProperty(_assertThisInitialized(_this), \"_startIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_startIndexMemoized\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_stopIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_stopIndexMemoized\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_debounceResetIsScrollingCallback\", function () {\n      _this.setState({\n        isScrolling: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (event) {\n      var height = _this.props.height;\n      var eventScrollTop = event.currentTarget.scrollTop; // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scroll offsets never exceed their bounds.\n\n      var scrollTop = Math.min(Math.max(0, _this._getEstimatedTotalHeight() - height), eventScrollTop); // On iOS, we can arrive at negative offsets by swiping past the start or end.\n      // Avoid re-rendering in this case as it can cause problems; see #532 for more.\n\n      if (eventScrollTop !== scrollTop) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      _this._debounceResetIsScrolling(); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n\n      if (_this.state.scrollTop !== scrollTop) {\n        _this.setState({\n          isScrolling: true,\n          scrollTop: scrollTop\n        });\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(Masonry, [{\n    key: \"clearCellPositions\",\n    value: function clearCellPositions() {\n      this._positionCache = new PositionCache();\n      this.forceUpdate();\n    } // HACK This method signature was intended for Grid\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref) {\n      var index = _ref.rowIndex;\n\n      if (this._invalidateOnUpdateStartIndex === null) {\n        this._invalidateOnUpdateStartIndex = index;\n        this._invalidateOnUpdateStopIndex = index;\n      } else {\n        this._invalidateOnUpdateStartIndex = Math.min(this._invalidateOnUpdateStartIndex, index);\n        this._invalidateOnUpdateStopIndex = Math.max(this._invalidateOnUpdateStopIndex, index);\n      }\n    }\n  }, {\n    key: \"recomputeCellPositions\",\n    value: function recomputeCellPositions() {\n      var stopIndex = this._positionCache.count - 1;\n      this._positionCache = new PositionCache();\n\n      this._populatePositionCache(0, stopIndex);\n\n      this.forceUpdate();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._checkInvalidateOnUpdate();\n\n      this._invokeOnScrollCallback();\n\n      this._invokeOnCellsRenderedCallback();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      this._checkInvalidateOnUpdate();\n\n      this._invokeOnScrollCallback();\n\n      this._invokeOnCellsRenderedCallback();\n\n      if (this.props.scrollTop !== prevProps.scrollTop) {\n        this._debounceResetIsScrolling();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._debounceResetIsScrollingId) {\n        cancelAnimationTimeout(this._debounceResetIsScrollingId);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          autoHeight = _this$props.autoHeight,\n          cellCount = _this$props.cellCount,\n          cellMeasurerCache = _this$props.cellMeasurerCache,\n          cellRenderer = _this$props.cellRenderer,\n          className = _this$props.className,\n          height = _this$props.height,\n          id = _this$props.id,\n          keyMapper = _this$props.keyMapper,\n          overscanByPixels = _this$props.overscanByPixels,\n          role = _this$props.role,\n          style = _this$props.style,\n          tabIndex = _this$props.tabIndex,\n          width = _this$props.width,\n          rowDirection = _this$props.rowDirection;\n      var _this$state = this.state,\n          isScrolling = _this$state.isScrolling,\n          scrollTop = _this$state.scrollTop;\n      var children = [];\n\n      var estimateTotalHeight = this._getEstimatedTotalHeight();\n\n      var shortestColumnSize = this._positionCache.shortestColumnSize;\n      var measuredCellCount = this._positionCache.count;\n      var startIndex = 0;\n      var stopIndex;\n\n      this._positionCache.range(Math.max(0, scrollTop - overscanByPixels), height + overscanByPixels * 2, function (index, left, top) {\n        var _style;\n\n        if (typeof stopIndex === 'undefined') {\n          startIndex = index;\n          stopIndex = index;\n        } else {\n          startIndex = Math.min(startIndex, index);\n          stopIndex = Math.max(stopIndex, index);\n        }\n\n        children.push(cellRenderer({\n          index: index,\n          isScrolling: isScrolling,\n          key: keyMapper(index),\n          parent: _this2,\n          style: (_style = {\n            height: cellMeasurerCache.getHeight(index)\n          }, _defineProperty(_style, rowDirection === 'ltr' ? 'left' : 'right', left), _defineProperty(_style, \"position\", 'absolute'), _defineProperty(_style, \"top\", top), _defineProperty(_style, \"width\", cellMeasurerCache.getWidth(index)), _style)\n        }));\n      }); // We need to measure additional cells for this layout\n\n\n      if (shortestColumnSize < scrollTop + height + overscanByPixels && measuredCellCount < cellCount) {\n        var batchSize = Math.min(cellCount - measuredCellCount, Math.ceil((scrollTop + height + overscanByPixels - shortestColumnSize) / cellMeasurerCache.defaultHeight * width / cellMeasurerCache.defaultWidth));\n\n        for (var _index = measuredCellCount; _index < measuredCellCount + batchSize; _index++) {\n          stopIndex = _index;\n          children.push(cellRenderer({\n            index: _index,\n            isScrolling: isScrolling,\n            key: keyMapper(_index),\n            parent: this,\n            style: {\n              width: cellMeasurerCache.getWidth(_index)\n            }\n          }));\n        }\n      }\n\n      this._startIndex = startIndex;\n      this._stopIndex = stopIndex;\n      return React.createElement(\"div\", {\n        ref: this._setScrollingContainerRef,\n        \"aria-label\": this.props['aria-label'],\n        className: clsx('ReactVirtualized__Masonry', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: role,\n        style: _objectSpread({\n          boxSizing: 'border-box',\n          direction: 'ltr',\n          height: autoHeight ? 'auto' : height,\n          overflowX: 'hidden',\n          overflowY: estimateTotalHeight < height ? 'hidden' : 'auto',\n          position: 'relative',\n          width: width,\n          WebkitOverflowScrolling: 'touch',\n          willChange: 'transform'\n        }, style),\n        tabIndex: tabIndex\n      }, React.createElement(\"div\", {\n        className: \"ReactVirtualized__Masonry__innerScrollContainer\",\n        style: {\n          width: '100%',\n          height: estimateTotalHeight,\n          maxWidth: '100%',\n          maxHeight: estimateTotalHeight,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          position: 'relative'\n        }\n      }, children));\n    }\n  }, {\n    key: \"_checkInvalidateOnUpdate\",\n    value: function _checkInvalidateOnUpdate() {\n      if (typeof this._invalidateOnUpdateStartIndex === 'number') {\n        var startIndex = this._invalidateOnUpdateStartIndex;\n        var stopIndex = this._invalidateOnUpdateStopIndex;\n        this._invalidateOnUpdateStartIndex = null;\n        this._invalidateOnUpdateStopIndex = null; // Query external layout logic for position of newly-measured cells\n\n        this._populatePositionCache(startIndex, stopIndex);\n\n        this.forceUpdate();\n      }\n    }\n  }, {\n    key: \"_debounceResetIsScrolling\",\n    value: function _debounceResetIsScrolling() {\n      var scrollingResetTimeInterval = this.props.scrollingResetTimeInterval;\n\n      if (this._debounceResetIsScrollingId) {\n        cancelAnimationTimeout(this._debounceResetIsScrollingId);\n      }\n\n      this._debounceResetIsScrollingId = requestAnimationTimeout(this._debounceResetIsScrollingCallback, scrollingResetTimeInterval);\n    }\n  }, {\n    key: \"_getEstimatedTotalHeight\",\n    value: function _getEstimatedTotalHeight() {\n      var _this$props2 = this.props,\n          cellCount = _this$props2.cellCount,\n          cellMeasurerCache = _this$props2.cellMeasurerCache,\n          width = _this$props2.width;\n      var estimatedColumnCount = Math.max(1, Math.floor(width / cellMeasurerCache.defaultWidth));\n      return this._positionCache.estimateTotalHeight(cellCount, estimatedColumnCount, cellMeasurerCache.defaultHeight);\n    }\n  }, {\n    key: \"_invokeOnScrollCallback\",\n    value: function _invokeOnScrollCallback() {\n      var _this$props3 = this.props,\n          height = _this$props3.height,\n          onScroll = _this$props3.onScroll;\n      var scrollTop = this.state.scrollTop;\n\n      if (this._onScrollMemoized !== scrollTop) {\n        onScroll({\n          clientHeight: height,\n          scrollHeight: this._getEstimatedTotalHeight(),\n          scrollTop: scrollTop\n        });\n        this._onScrollMemoized = scrollTop;\n      }\n    }\n  }, {\n    key: \"_invokeOnCellsRenderedCallback\",\n    value: function _invokeOnCellsRenderedCallback() {\n      if (this._startIndexMemoized !== this._startIndex || this._stopIndexMemoized !== this._stopIndex) {\n        var onCellsRendered = this.props.onCellsRendered;\n        onCellsRendered({\n          startIndex: this._startIndex,\n          stopIndex: this._stopIndex\n        });\n        this._startIndexMemoized = this._startIndex;\n        this._stopIndexMemoized = this._stopIndex;\n      }\n    }\n  }, {\n    key: \"_populatePositionCache\",\n    value: function _populatePositionCache(startIndex, stopIndex) {\n      var _this$props4 = this.props,\n          cellMeasurerCache = _this$props4.cellMeasurerCache,\n          cellPositioner = _this$props4.cellPositioner;\n\n      for (var _index2 = startIndex; _index2 <= stopIndex; _index2++) {\n        var _cellPositioner = cellPositioner(_index2),\n            left = _cellPositioner.left,\n            top = _cellPositioner.top;\n\n        this._positionCache.setPosition(_index2, left, top, cellMeasurerCache.getHeight(_index2));\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.scrollTop !== undefined && prevState.scrollTop !== nextProps.scrollTop) {\n        return {\n          isScrolling: true,\n          scrollTop: nextProps.scrollTop\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return Masonry;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"autoHeight\": PropTypes.bool.isRequired,\n  \"cellCount\": PropTypes.number.isRequired,\n  \"cellMeasurerCache\": function cellMeasurerCache() {\n    return (typeof CellMeasurerCache === \"function\" ? PropTypes.instanceOf(CellMeasurerCache).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"cellPositioner\": function cellPositioner() {\n    return (typeof Positioner === \"function\" ? PropTypes.instanceOf(Positioner).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"cellRenderer\": function cellRenderer() {\n    return (typeof CellRenderer === \"function\" ? PropTypes.instanceOf(CellRenderer).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"className\": PropTypes.string,\n  \"height\": PropTypes.number.isRequired,\n  \"id\": PropTypes.string,\n  \"keyMapper\": function keyMapper() {\n    return (typeof KeyMapper === \"function\" ? PropTypes.instanceOf(KeyMapper).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"onCellsRendered\": function onCellsRendered() {\n    return (typeof OnCellsRenderedCallback === \"function\" ? PropTypes.instanceOf(OnCellsRenderedCallback) : PropTypes.any).apply(this, arguments);\n  },\n  \"onScroll\": function onScroll() {\n    return (typeof OnScrollCallback === \"function\" ? PropTypes.instanceOf(OnScrollCallback) : PropTypes.any).apply(this, arguments);\n  },\n  \"overscanByPixels\": PropTypes.number.isRequired,\n  \"role\": PropTypes.string.isRequired,\n  \"scrollingResetTimeInterval\": PropTypes.number.isRequired,\n  \"style\": function style(props, propName, componentName) {\n    if (!Object.prototype.hasOwnProperty.call(props, propName)) {\n      throw new Error(\"Prop `\".concat(propName, \"` has type 'any' or 'mixed', but was not provided to `\").concat(componentName, \"`. Pass undefined or any other value.\"));\n    }\n  },\n  \"tabIndex\": PropTypes.number.isRequired,\n  \"width\": PropTypes.number.isRequired,\n  \"rowDirection\": PropTypes.string.isRequired,\n  \"scrollTop\": PropTypes.number\n}), _temp);\n\n_defineProperty(Masonry, \"defaultProps\", {\n  autoHeight: false,\n  keyMapper: identity,\n  onCellsRendered: noop,\n  onScroll: noop,\n  overscanByPixels: 20,\n  role: 'grid',\n  scrollingResetTimeInterval: DEFAULT_SCROLLING_RESET_TIME_INTERVAL,\n  style: emptyObject,\n  tabIndex: 0,\n  rowDirection: 'ltr'\n});\n\nfunction identity(value) {\n  return value;\n}\n\nfunction noop() {}\n\nvar bpfrpt_proptype_CellMeasurerCache = process.env.NODE_ENV === 'production' ? null : {\n  \"defaultHeight\": PropTypes.number.isRequired,\n  \"defaultWidth\": PropTypes.number.isRequired,\n  \"getHeight\": PropTypes.func.isRequired,\n  \"getWidth\": PropTypes.func.isRequired\n};\npolyfill(Masonry);\nexport default Masonry;\nvar bpfrpt_proptype_Positioner = process.env.NODE_ENV === 'production' ? null : PropTypes.func;\nimport { bpfrpt_proptype_AnimationTimeoutId } from \"../utils/requestAnimationTimeout\";\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_CellMeasurerCache };\nexport { bpfrpt_proptype_Positioner };","export default function createCellPositioner(_ref) {\n  var cellMeasurerCache = _ref.cellMeasurerCache,\n      columnCount = _ref.columnCount,\n      columnWidth = _ref.columnWidth,\n      _ref$spacer = _ref.spacer,\n      spacer = _ref$spacer === void 0 ? 0 : _ref$spacer;\n  var columnHeights;\n  initOrResetDerivedValues();\n\n  function cellPositioner(index) {\n    // Find the shortest column and use it.\n    var columnIndex = 0;\n\n    for (var i = 1; i < columnHeights.length; i++) {\n      if (columnHeights[i] < columnHeights[columnIndex]) {\n        columnIndex = i;\n      }\n    }\n\n    var left = columnIndex * (columnWidth + spacer);\n    var top = columnHeights[columnIndex] || 0;\n    columnHeights[columnIndex] = top + cellMeasurerCache.getHeight(index) + spacer;\n    return {\n      left: left,\n      top: top\n    };\n  }\n\n  function initOrResetDerivedValues() {\n    // Track the height of each column.\n    // Layout algorithm below always inserts into the shortest column.\n    columnHeights = [];\n\n    for (var i = 0; i < columnCount; i++) {\n      columnHeights[i] = 0;\n    }\n  }\n\n  function reset(params) {\n    columnCount = params.columnCount;\n    columnWidth = params.columnWidth;\n    spacer = params.spacer;\n    initOrResetDerivedValues();\n  }\n\n  cellPositioner.reset = reset;\n  return cellPositioner;\n}\nimport { bpfrpt_proptype_CellMeasurerCache } from \"./Masonry\";\nimport { bpfrpt_proptype_Positioner } from \"./Masonry\";","import createCellPositioner from './createCellPositioner';\nimport Masonry from './Masonry';\nexport default Masonry;\nexport { createCellPositioner, Masonry };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport { CellMeasurerCache } from '../CellMeasurer';\n\n/**\n * Caches measurements for a given cell.\n */\nvar CellMeasurerCacheDecorator =\n/*#__PURE__*/\nfunction () {\n  function CellMeasurerCacheDecorator() {\n    var _this = this;\n\n    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, CellMeasurerCacheDecorator);\n\n    _defineProperty(this, \"_cellMeasurerCache\", void 0);\n\n    _defineProperty(this, \"_columnIndexOffset\", void 0);\n\n    _defineProperty(this, \"_rowIndexOffset\", void 0);\n\n    _defineProperty(this, \"columnWidth\", function (_ref) {\n      var index = _ref.index;\n\n      _this._cellMeasurerCache.columnWidth({\n        index: index + _this._columnIndexOffset\n      });\n    });\n\n    _defineProperty(this, \"rowHeight\", function (_ref2) {\n      var index = _ref2.index;\n\n      _this._cellMeasurerCache.rowHeight({\n        index: index + _this._rowIndexOffset\n      });\n    });\n\n    var cellMeasurerCache = params.cellMeasurerCache,\n        _params$columnIndexOf = params.columnIndexOffset,\n        columnIndexOffset = _params$columnIndexOf === void 0 ? 0 : _params$columnIndexOf,\n        _params$rowIndexOffse = params.rowIndexOffset,\n        rowIndexOffset = _params$rowIndexOffse === void 0 ? 0 : _params$rowIndexOffse;\n    this._cellMeasurerCache = cellMeasurerCache;\n    this._columnIndexOffset = columnIndexOffset;\n    this._rowIndexOffset = rowIndexOffset;\n  }\n\n  _createClass(CellMeasurerCacheDecorator, [{\n    key: \"clear\",\n    value: function clear(rowIndex, columnIndex) {\n      this._cellMeasurerCache.clear(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"clearAll\",\n    value: function clearAll() {\n      this._cellMeasurerCache.clearAll();\n    }\n  }, {\n    key: \"hasFixedHeight\",\n    value: function hasFixedHeight() {\n      return this._cellMeasurerCache.hasFixedHeight();\n    }\n  }, {\n    key: \"hasFixedWidth\",\n    value: function hasFixedWidth() {\n      return this._cellMeasurerCache.hasFixedWidth();\n    }\n  }, {\n    key: \"getHeight\",\n    value: function getHeight(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.getHeight(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"getWidth\",\n    value: function getWidth(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.getWidth(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"has\",\n    value: function has(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.has(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"set\",\n    value: function set(rowIndex, columnIndex, width, height) {\n      this._cellMeasurerCache.set(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset, width, height);\n    }\n  }, {\n    key: \"defaultHeight\",\n    get: function get() {\n      return this._cellMeasurerCache.defaultHeight;\n    }\n  }, {\n    key: \"defaultWidth\",\n    get: function get() {\n      return this._cellMeasurerCache.defaultWidth;\n    }\n  }]);\n\n  return CellMeasurerCacheDecorator;\n}();\n\nexport { CellMeasurerCacheDecorator as default };","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport CellMeasurerCacheDecorator from './CellMeasurerCacheDecorator';\nimport Grid from '../Grid';\nvar SCROLLBAR_SIZE_BUFFER = 20;\n/**\n * Renders 1, 2, or 4 Grids depending on configuration.\n * A main (body) Grid will always be rendered.\n * Optionally, 1-2 Grids for sticky header rows will also be rendered.\n * If no sticky columns, only 1 sticky header Grid will be rendered.\n * If sticky columns, 2 sticky header Grids will be rendered.\n */\n\nvar MultiGrid =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(MultiGrid, _React$PureComponent);\n\n  function MultiGrid(props, context) {\n    var _this;\n\n    _classCallCheck(this, MultiGrid);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MultiGrid).call(this, props, context));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollbarSize: 0,\n      showHorizontalScrollbar: false,\n      showVerticalScrollbar: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateColumnIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateRowIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_bottomLeftGridRef\", function (ref) {\n      _this._bottomLeftGrid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_bottomRightGridRef\", function (ref) {\n      _this._bottomRightGrid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRendererBottomLeftGrid\", function (_ref) {\n      var rowIndex = _ref.rowIndex,\n          rest = _objectWithoutProperties(_ref, [\"rowIndex\"]);\n\n      var _this$props = _this.props,\n          cellRenderer = _this$props.cellRenderer,\n          fixedRowCount = _this$props.fixedRowCount,\n          rowCount = _this$props.rowCount;\n\n      if (rowIndex === rowCount - fixedRowCount) {\n        return React.createElement(\"div\", {\n          key: rest.key,\n          style: _objectSpread({}, rest.style, {\n            height: SCROLLBAR_SIZE_BUFFER\n          })\n        });\n      } else {\n        return cellRenderer(_objectSpread({}, rest, {\n          parent: _assertThisInitialized(_this),\n          rowIndex: rowIndex + fixedRowCount\n        }));\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRendererBottomRightGrid\", function (_ref2) {\n      var columnIndex = _ref2.columnIndex,\n          rowIndex = _ref2.rowIndex,\n          rest = _objectWithoutProperties(_ref2, [\"columnIndex\", \"rowIndex\"]);\n\n      var _this$props2 = _this.props,\n          cellRenderer = _this$props2.cellRenderer,\n          fixedColumnCount = _this$props2.fixedColumnCount,\n          fixedRowCount = _this$props2.fixedRowCount;\n      return cellRenderer(_objectSpread({}, rest, {\n        columnIndex: columnIndex + fixedColumnCount,\n        parent: _assertThisInitialized(_this),\n        rowIndex: rowIndex + fixedRowCount\n      }));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRendererTopRightGrid\", function (_ref3) {\n      var columnIndex = _ref3.columnIndex,\n          rest = _objectWithoutProperties(_ref3, [\"columnIndex\"]);\n\n      var _this$props3 = _this.props,\n          cellRenderer = _this$props3.cellRenderer,\n          columnCount = _this$props3.columnCount,\n          fixedColumnCount = _this$props3.fixedColumnCount;\n\n      if (columnIndex === columnCount - fixedColumnCount) {\n        return React.createElement(\"div\", {\n          key: rest.key,\n          style: _objectSpread({}, rest.style, {\n            width: SCROLLBAR_SIZE_BUFFER\n          })\n        });\n      } else {\n        return cellRenderer(_objectSpread({}, rest, {\n          columnIndex: columnIndex + fixedColumnCount,\n          parent: _assertThisInitialized(_this)\n        }));\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnWidthRightGrid\", function (_ref4) {\n      var index = _ref4.index;\n      var _this$props4 = _this.props,\n          columnCount = _this$props4.columnCount,\n          fixedColumnCount = _this$props4.fixedColumnCount,\n          columnWidth = _this$props4.columnWidth;\n      var _this$state = _this.state,\n          scrollbarSize = _this$state.scrollbarSize,\n          showHorizontalScrollbar = _this$state.showHorizontalScrollbar; // An extra cell is added to the count\n      // This gives the smaller Grid extra room for offset,\n      // In case the main (bottom right) Grid has a scrollbar\n      // If no scrollbar, the extra space is overflow:hidden anyway\n\n      if (showHorizontalScrollbar && index === columnCount - fixedColumnCount) {\n        return scrollbarSize;\n      }\n\n      return typeof columnWidth === 'function' ? columnWidth({\n        index: index + fixedColumnCount\n      }) : columnWidth;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (scrollInfo) {\n      var scrollLeft = scrollInfo.scrollLeft,\n          scrollTop = scrollInfo.scrollTop;\n\n      _this.setState({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      });\n\n      var onScroll = _this.props.onScroll;\n\n      if (onScroll) {\n        onScroll(scrollInfo);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollbarPresenceChange\", function (_ref5) {\n      var horizontal = _ref5.horizontal,\n          size = _ref5.size,\n          vertical = _ref5.vertical;\n      var _this$state2 = _this.state,\n          showHorizontalScrollbar = _this$state2.showHorizontalScrollbar,\n          showVerticalScrollbar = _this$state2.showVerticalScrollbar;\n\n      if (horizontal !== showHorizontalScrollbar || vertical !== showVerticalScrollbar) {\n        _this.setState({\n          scrollbarSize: size,\n          showHorizontalScrollbar: horizontal,\n          showVerticalScrollbar: vertical\n        });\n\n        var onScrollbarPresenceChange = _this.props.onScrollbarPresenceChange;\n\n        if (typeof onScrollbarPresenceChange === 'function') {\n          onScrollbarPresenceChange({\n            horizontal: horizontal,\n            size: size,\n            vertical: vertical\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollLeft\", function (scrollInfo) {\n      var scrollLeft = scrollInfo.scrollLeft;\n\n      _this._onScroll({\n        scrollLeft: scrollLeft,\n        scrollTop: _this.state.scrollTop\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollTop\", function (scrollInfo) {\n      var scrollTop = scrollInfo.scrollTop;\n\n      _this._onScroll({\n        scrollTop: scrollTop,\n        scrollLeft: _this.state.scrollLeft\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowHeightBottomGrid\", function (_ref6) {\n      var index = _ref6.index;\n      var _this$props5 = _this.props,\n          fixedRowCount = _this$props5.fixedRowCount,\n          rowCount = _this$props5.rowCount,\n          rowHeight = _this$props5.rowHeight;\n      var _this$state3 = _this.state,\n          scrollbarSize = _this$state3.scrollbarSize,\n          showVerticalScrollbar = _this$state3.showVerticalScrollbar; // An extra cell is added to the count\n      // This gives the smaller Grid extra room for offset,\n      // In case the main (bottom right) Grid has a scrollbar\n      // If no scrollbar, the extra space is overflow:hidden anyway\n\n      if (showVerticalScrollbar && index === rowCount - fixedRowCount) {\n        return scrollbarSize;\n      }\n\n      return typeof rowHeight === 'function' ? rowHeight({\n        index: index + fixedRowCount\n      }) : rowHeight;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_topLeftGridRef\", function (ref) {\n      _this._topLeftGrid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_topRightGridRef\", function (ref) {\n      _this._topRightGrid = ref;\n    });\n\n    var deferredMeasurementCache = props.deferredMeasurementCache,\n        _fixedColumnCount = props.fixedColumnCount,\n        _fixedRowCount = props.fixedRowCount;\n\n    _this._maybeCalculateCachedStyles(true);\n\n    if (deferredMeasurementCache) {\n      _this._deferredMeasurementCacheBottomLeftGrid = _fixedRowCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: 0,\n        rowIndexOffset: _fixedRowCount\n      }) : deferredMeasurementCache;\n      _this._deferredMeasurementCacheBottomRightGrid = _fixedColumnCount > 0 || _fixedRowCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: _fixedColumnCount,\n        rowIndexOffset: _fixedRowCount\n      }) : deferredMeasurementCache;\n      _this._deferredMeasurementCacheTopRightGrid = _fixedColumnCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: _fixedColumnCount,\n        rowIndexOffset: 0\n      }) : deferredMeasurementCache;\n    }\n\n    return _this;\n  }\n\n  _createClass(MultiGrid, [{\n    key: \"forceUpdateGrids\",\n    value: function forceUpdateGrids() {\n      this._bottomLeftGrid && this._bottomLeftGrid.forceUpdate();\n      this._bottomRightGrid && this._bottomRightGrid.forceUpdate();\n      this._topLeftGrid && this._topLeftGrid.forceUpdate();\n      this._topRightGrid && this._topRightGrid.forceUpdate();\n    }\n    /** See Grid#invalidateCellSizeAfterRender */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender() {\n      var _ref7 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref7$columnIndex = _ref7.columnIndex,\n          columnIndex = _ref7$columnIndex === void 0 ? 0 : _ref7$columnIndex,\n          _ref7$rowIndex = _ref7.rowIndex,\n          rowIndex = _ref7$rowIndex === void 0 ? 0 : _ref7$rowIndex;\n\n      this._deferredInvalidateColumnIndex = typeof this._deferredInvalidateColumnIndex === 'number' ? Math.min(this._deferredInvalidateColumnIndex, columnIndex) : columnIndex;\n      this._deferredInvalidateRowIndex = typeof this._deferredInvalidateRowIndex === 'number' ? Math.min(this._deferredInvalidateRowIndex, rowIndex) : rowIndex;\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllCells\",\n    value: function measureAllCells() {\n      this._bottomLeftGrid && this._bottomLeftGrid.measureAllCells();\n      this._bottomRightGrid && this._bottomRightGrid.measureAllCells();\n      this._topLeftGrid && this._topLeftGrid.measureAllCells();\n      this._topRightGrid && this._topRightGrid.measureAllCells();\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref8 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref8$columnIndex = _ref8.columnIndex,\n          columnIndex = _ref8$columnIndex === void 0 ? 0 : _ref8$columnIndex,\n          _ref8$rowIndex = _ref8.rowIndex,\n          rowIndex = _ref8$rowIndex === void 0 ? 0 : _ref8$rowIndex;\n\n      var _this$props6 = this.props,\n          fixedColumnCount = _this$props6.fixedColumnCount,\n          fixedRowCount = _this$props6.fixedRowCount;\n      var adjustedColumnIndex = Math.max(0, columnIndex - fixedColumnCount);\n      var adjustedRowIndex = Math.max(0, rowIndex - fixedRowCount);\n      this._bottomLeftGrid && this._bottomLeftGrid.recomputeGridSize({\n        columnIndex: columnIndex,\n        rowIndex: adjustedRowIndex\n      });\n      this._bottomRightGrid && this._bottomRightGrid.recomputeGridSize({\n        columnIndex: adjustedColumnIndex,\n        rowIndex: adjustedRowIndex\n      });\n      this._topLeftGrid && this._topLeftGrid.recomputeGridSize({\n        columnIndex: columnIndex,\n        rowIndex: rowIndex\n      });\n      this._topRightGrid && this._topRightGrid.recomputeGridSize({\n        columnIndex: adjustedColumnIndex,\n        rowIndex: rowIndex\n      });\n      this._leftGridWidth = null;\n      this._topGridHeight = null;\n\n      this._maybeCalculateCachedStyles(true);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props7 = this.props,\n          scrollLeft = _this$props7.scrollLeft,\n          scrollTop = _this$props7.scrollTop;\n\n      if (scrollLeft > 0 || scrollTop > 0) {\n        var newState = {};\n\n        if (scrollLeft > 0) {\n          newState.scrollLeft = scrollLeft;\n        }\n\n        if (scrollTop > 0) {\n          newState.scrollTop = scrollTop;\n        }\n\n        this.setState(newState);\n      }\n\n      this._handleInvalidatedGridSize();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._handleInvalidatedGridSize();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props8 = this.props,\n          onScroll = _this$props8.onScroll,\n          onSectionRendered = _this$props8.onSectionRendered,\n          onScrollbarPresenceChange = _this$props8.onScrollbarPresenceChange,\n          scrollLeftProp = _this$props8.scrollLeft,\n          scrollToColumn = _this$props8.scrollToColumn,\n          scrollTopProp = _this$props8.scrollTop,\n          scrollToRow = _this$props8.scrollToRow,\n          rest = _objectWithoutProperties(_this$props8, [\"onScroll\", \"onSectionRendered\", \"onScrollbarPresenceChange\", \"scrollLeft\", \"scrollToColumn\", \"scrollTop\", \"scrollToRow\"]);\n\n      this._prepareForRender(); // Don't render any of our Grids if there are no cells.\n      // This mirrors what Grid does,\n      // And prevents us from recording inaccurage measurements when used with CellMeasurer.\n\n\n      if (this.props.width === 0 || this.props.height === 0) {\n        return null;\n      } // scrollTop and scrollLeft props are explicitly filtered out and ignored\n\n\n      var _this$state4 = this.state,\n          scrollLeft = _this$state4.scrollLeft,\n          scrollTop = _this$state4.scrollTop;\n      return React.createElement(\"div\", {\n        style: this._containerOuterStyle\n      }, React.createElement(\"div\", {\n        style: this._containerTopStyle\n      }, this._renderTopLeftGrid(rest), this._renderTopRightGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        scrollLeft: scrollLeft\n      }))), React.createElement(\"div\", {\n        style: this._containerBottomStyle\n      }, this._renderBottomLeftGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        scrollTop: scrollTop\n      })), this._renderBottomRightGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        onSectionRendered: onSectionRendered,\n        scrollLeft: scrollLeft,\n        scrollToColumn: scrollToColumn,\n        scrollToRow: scrollToRow,\n        scrollTop: scrollTop\n      }))));\n    }\n  }, {\n    key: \"_getBottomGridHeight\",\n    value: function _getBottomGridHeight(props) {\n      var height = props.height;\n\n      var topGridHeight = this._getTopGridHeight(props);\n\n      return height - topGridHeight;\n    }\n  }, {\n    key: \"_getLeftGridWidth\",\n    value: function _getLeftGridWidth(props) {\n      var fixedColumnCount = props.fixedColumnCount,\n          columnWidth = props.columnWidth;\n\n      if (this._leftGridWidth == null) {\n        if (typeof columnWidth === 'function') {\n          var leftGridWidth = 0;\n\n          for (var index = 0; index < fixedColumnCount; index++) {\n            leftGridWidth += columnWidth({\n              index: index\n            });\n          }\n\n          this._leftGridWidth = leftGridWidth;\n        } else {\n          this._leftGridWidth = columnWidth * fixedColumnCount;\n        }\n      }\n\n      return this._leftGridWidth;\n    }\n  }, {\n    key: \"_getRightGridWidth\",\n    value: function _getRightGridWidth(props) {\n      var width = props.width;\n\n      var leftGridWidth = this._getLeftGridWidth(props);\n\n      return width - leftGridWidth;\n    }\n  }, {\n    key: \"_getTopGridHeight\",\n    value: function _getTopGridHeight(props) {\n      var fixedRowCount = props.fixedRowCount,\n          rowHeight = props.rowHeight;\n\n      if (this._topGridHeight == null) {\n        if (typeof rowHeight === 'function') {\n          var topGridHeight = 0;\n\n          for (var index = 0; index < fixedRowCount; index++) {\n            topGridHeight += rowHeight({\n              index: index\n            });\n          }\n\n          this._topGridHeight = topGridHeight;\n        } else {\n          this._topGridHeight = rowHeight * fixedRowCount;\n        }\n      }\n\n      return this._topGridHeight;\n    }\n  }, {\n    key: \"_handleInvalidatedGridSize\",\n    value: function _handleInvalidatedGridSize() {\n      if (typeof this._deferredInvalidateColumnIndex === 'number') {\n        var columnIndex = this._deferredInvalidateColumnIndex;\n        var rowIndex = this._deferredInvalidateRowIndex;\n        this._deferredInvalidateColumnIndex = null;\n        this._deferredInvalidateRowIndex = null;\n        this.recomputeGridSize({\n          columnIndex: columnIndex,\n          rowIndex: rowIndex\n        });\n        this.forceUpdate();\n      }\n    }\n    /**\n     * Avoid recreating inline styles each render; this bypasses Grid's shallowCompare.\n     * This method recalculates styles only when specific props change.\n     */\n\n  }, {\n    key: \"_maybeCalculateCachedStyles\",\n    value: function _maybeCalculateCachedStyles(resetAll) {\n      var _this$props9 = this.props,\n          columnWidth = _this$props9.columnWidth,\n          enableFixedColumnScroll = _this$props9.enableFixedColumnScroll,\n          enableFixedRowScroll = _this$props9.enableFixedRowScroll,\n          height = _this$props9.height,\n          fixedColumnCount = _this$props9.fixedColumnCount,\n          fixedRowCount = _this$props9.fixedRowCount,\n          rowHeight = _this$props9.rowHeight,\n          style = _this$props9.style,\n          styleBottomLeftGrid = _this$props9.styleBottomLeftGrid,\n          styleBottomRightGrid = _this$props9.styleBottomRightGrid,\n          styleTopLeftGrid = _this$props9.styleTopLeftGrid,\n          styleTopRightGrid = _this$props9.styleTopRightGrid,\n          width = _this$props9.width;\n      var sizeChange = resetAll || height !== this._lastRenderedHeight || width !== this._lastRenderedWidth;\n      var leftSizeChange = resetAll || columnWidth !== this._lastRenderedColumnWidth || fixedColumnCount !== this._lastRenderedFixedColumnCount;\n      var topSizeChange = resetAll || fixedRowCount !== this._lastRenderedFixedRowCount || rowHeight !== this._lastRenderedRowHeight;\n\n      if (resetAll || sizeChange || style !== this._lastRenderedStyle) {\n        this._containerOuterStyle = _objectSpread({\n          height: height,\n          overflow: 'visible',\n          // Let :focus outline show through\n          width: width\n        }, style);\n      }\n\n      if (resetAll || sizeChange || topSizeChange) {\n        this._containerTopStyle = {\n          height: this._getTopGridHeight(this.props),\n          position: 'relative',\n          width: width\n        };\n        this._containerBottomStyle = {\n          height: height - this._getTopGridHeight(this.props),\n          overflow: 'visible',\n          // Let :focus outline show through\n          position: 'relative',\n          width: width\n        };\n      }\n\n      if (resetAll || styleBottomLeftGrid !== this._lastRenderedStyleBottomLeftGrid) {\n        this._bottomLeftGridStyle = _objectSpread({\n          left: 0,\n          overflowX: 'hidden',\n          overflowY: enableFixedColumnScroll ? 'auto' : 'hidden',\n          position: 'absolute'\n        }, styleBottomLeftGrid);\n      }\n\n      if (resetAll || leftSizeChange || styleBottomRightGrid !== this._lastRenderedStyleBottomRightGrid) {\n        this._bottomRightGridStyle = _objectSpread({\n          left: this._getLeftGridWidth(this.props),\n          position: 'absolute'\n        }, styleBottomRightGrid);\n      }\n\n      if (resetAll || styleTopLeftGrid !== this._lastRenderedStyleTopLeftGrid) {\n        this._topLeftGridStyle = _objectSpread({\n          left: 0,\n          overflowX: 'hidden',\n          overflowY: 'hidden',\n          position: 'absolute',\n          top: 0\n        }, styleTopLeftGrid);\n      }\n\n      if (resetAll || leftSizeChange || styleTopRightGrid !== this._lastRenderedStyleTopRightGrid) {\n        this._topRightGridStyle = _objectSpread({\n          left: this._getLeftGridWidth(this.props),\n          overflowX: enableFixedRowScroll ? 'auto' : 'hidden',\n          overflowY: 'hidden',\n          position: 'absolute',\n          top: 0\n        }, styleTopRightGrid);\n      }\n\n      this._lastRenderedColumnWidth = columnWidth;\n      this._lastRenderedFixedColumnCount = fixedColumnCount;\n      this._lastRenderedFixedRowCount = fixedRowCount;\n      this._lastRenderedHeight = height;\n      this._lastRenderedRowHeight = rowHeight;\n      this._lastRenderedStyle = style;\n      this._lastRenderedStyleBottomLeftGrid = styleBottomLeftGrid;\n      this._lastRenderedStyleBottomRightGrid = styleBottomRightGrid;\n      this._lastRenderedStyleTopLeftGrid = styleTopLeftGrid;\n      this._lastRenderedStyleTopRightGrid = styleTopRightGrid;\n      this._lastRenderedWidth = width;\n    }\n  }, {\n    key: \"_prepareForRender\",\n    value: function _prepareForRender() {\n      if (this._lastRenderedColumnWidth !== this.props.columnWidth || this._lastRenderedFixedColumnCount !== this.props.fixedColumnCount) {\n        this._leftGridWidth = null;\n      }\n\n      if (this._lastRenderedFixedRowCount !== this.props.fixedRowCount || this._lastRenderedRowHeight !== this.props.rowHeight) {\n        this._topGridHeight = null;\n      }\n\n      this._maybeCalculateCachedStyles();\n\n      this._lastRenderedColumnWidth = this.props.columnWidth;\n      this._lastRenderedFixedColumnCount = this.props.fixedColumnCount;\n      this._lastRenderedFixedRowCount = this.props.fixedRowCount;\n      this._lastRenderedRowHeight = this.props.rowHeight;\n    }\n  }, {\n    key: \"_renderBottomLeftGrid\",\n    value: function _renderBottomLeftGrid(props) {\n      var enableFixedColumnScroll = props.enableFixedColumnScroll,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          rowCount = props.rowCount,\n          hideBottomLeftGridScrollbar = props.hideBottomLeftGridScrollbar;\n      var showVerticalScrollbar = this.state.showVerticalScrollbar;\n\n      if (!fixedColumnCount) {\n        return null;\n      }\n\n      var additionalRowCount = showVerticalScrollbar ? 1 : 0,\n          height = this._getBottomGridHeight(props),\n          width = this._getLeftGridWidth(props),\n          scrollbarSize = this.state.showVerticalScrollbar ? this.state.scrollbarSize : 0,\n          gridWidth = hideBottomLeftGridScrollbar ? width + scrollbarSize : width;\n\n      var bottomLeftGrid = React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererBottomLeftGrid,\n        className: this.props.classNameBottomLeftGrid,\n        columnCount: fixedColumnCount,\n        deferredMeasurementCache: this._deferredMeasurementCacheBottomLeftGrid,\n        height: height,\n        onScroll: enableFixedColumnScroll ? this._onScrollTop : undefined,\n        ref: this._bottomLeftGridRef,\n        rowCount: Math.max(0, rowCount - fixedRowCount) + additionalRowCount,\n        rowHeight: this._rowHeightBottomGrid,\n        style: this._bottomLeftGridStyle,\n        tabIndex: null,\n        width: gridWidth\n      }));\n\n      if (hideBottomLeftGridScrollbar) {\n        return React.createElement(\"div\", {\n          className: \"BottomLeftGrid_ScrollWrapper\",\n          style: _objectSpread({}, this._bottomLeftGridStyle, {\n            height: height,\n            width: width,\n            overflowY: 'hidden'\n          })\n        }, bottomLeftGrid);\n      }\n\n      return bottomLeftGrid;\n    }\n  }, {\n    key: \"_renderBottomRightGrid\",\n    value: function _renderBottomRightGrid(props) {\n      var columnCount = props.columnCount,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          rowCount = props.rowCount,\n          scrollToColumn = props.scrollToColumn,\n          scrollToRow = props.scrollToRow;\n      return React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererBottomRightGrid,\n        className: this.props.classNameBottomRightGrid,\n        columnCount: Math.max(0, columnCount - fixedColumnCount),\n        columnWidth: this._columnWidthRightGrid,\n        deferredMeasurementCache: this._deferredMeasurementCacheBottomRightGrid,\n        height: this._getBottomGridHeight(props),\n        onScroll: this._onScroll,\n        onScrollbarPresenceChange: this._onScrollbarPresenceChange,\n        ref: this._bottomRightGridRef,\n        rowCount: Math.max(0, rowCount - fixedRowCount),\n        rowHeight: this._rowHeightBottomGrid,\n        scrollToColumn: scrollToColumn - fixedColumnCount,\n        scrollToRow: scrollToRow - fixedRowCount,\n        style: this._bottomRightGridStyle,\n        width: this._getRightGridWidth(props)\n      }));\n    }\n  }, {\n    key: \"_renderTopLeftGrid\",\n    value: function _renderTopLeftGrid(props) {\n      var fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount;\n\n      if (!fixedColumnCount || !fixedRowCount) {\n        return null;\n      }\n\n      return React.createElement(Grid, _extends({}, props, {\n        className: this.props.classNameTopLeftGrid,\n        columnCount: fixedColumnCount,\n        height: this._getTopGridHeight(props),\n        ref: this._topLeftGridRef,\n        rowCount: fixedRowCount,\n        style: this._topLeftGridStyle,\n        tabIndex: null,\n        width: this._getLeftGridWidth(props)\n      }));\n    }\n  }, {\n    key: \"_renderTopRightGrid\",\n    value: function _renderTopRightGrid(props) {\n      var columnCount = props.columnCount,\n          enableFixedRowScroll = props.enableFixedRowScroll,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          scrollLeft = props.scrollLeft,\n          hideTopRightGridScrollbar = props.hideTopRightGridScrollbar;\n      var _this$state5 = this.state,\n          showHorizontalScrollbar = _this$state5.showHorizontalScrollbar,\n          scrollbarSize = _this$state5.scrollbarSize;\n\n      if (!fixedRowCount) {\n        return null;\n      }\n\n      var additionalColumnCount = showHorizontalScrollbar ? 1 : 0,\n          height = this._getTopGridHeight(props),\n          width = this._getRightGridWidth(props),\n          additionalHeight = showHorizontalScrollbar ? scrollbarSize : 0;\n\n      var gridHeight = height,\n          style = this._topRightGridStyle;\n\n      if (hideTopRightGridScrollbar) {\n        gridHeight = height + additionalHeight;\n        style = _objectSpread({}, this._topRightGridStyle, {\n          left: 0\n        });\n      }\n\n      var topRightGrid = React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererTopRightGrid,\n        className: this.props.classNameTopRightGrid,\n        columnCount: Math.max(0, columnCount - fixedColumnCount) + additionalColumnCount,\n        columnWidth: this._columnWidthRightGrid,\n        deferredMeasurementCache: this._deferredMeasurementCacheTopRightGrid,\n        height: gridHeight,\n        onScroll: enableFixedRowScroll ? this._onScrollLeft : undefined,\n        ref: this._topRightGridRef,\n        rowCount: fixedRowCount,\n        scrollLeft: scrollLeft,\n        style: style,\n        tabIndex: null,\n        width: width\n      }));\n\n      if (hideTopRightGridScrollbar) {\n        return React.createElement(\"div\", {\n          className: \"TopRightGrid_ScrollWrapper\",\n          style: _objectSpread({}, this._topRightGridStyle, {\n            height: height,\n            width: width,\n            overflowX: 'hidden'\n          })\n        }, topRightGrid);\n      }\n\n      return topRightGrid;\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.scrollLeft !== prevState.scrollLeft || nextProps.scrollTop !== prevState.scrollTop) {\n        return {\n          scrollLeft: nextProps.scrollLeft != null && nextProps.scrollLeft >= 0 ? nextProps.scrollLeft : prevState.scrollLeft,\n          scrollTop: nextProps.scrollTop != null && nextProps.scrollTop >= 0 ? nextProps.scrollTop : prevState.scrollTop\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return MultiGrid;\n}(React.PureComponent);\n\n_defineProperty(MultiGrid, \"defaultProps\", {\n  classNameBottomLeftGrid: '',\n  classNameBottomRightGrid: '',\n  classNameTopLeftGrid: '',\n  classNameTopRightGrid: '',\n  enableFixedColumnScroll: false,\n  enableFixedRowScroll: false,\n  fixedColumnCount: 0,\n  fixedRowCount: 0,\n  scrollToColumn: -1,\n  scrollToRow: -1,\n  style: {},\n  styleBottomLeftGrid: {},\n  styleBottomRightGrid: {},\n  styleTopLeftGrid: {},\n  styleTopRightGrid: {},\n  hideTopRightGridScrollbar: false,\n  hideBottomLeftGridScrollbar: false\n});\n\nMultiGrid.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  classNameBottomLeftGrid: PropTypes.string.isRequired,\n  classNameBottomRightGrid: PropTypes.string.isRequired,\n  classNameTopLeftGrid: PropTypes.string.isRequired,\n  classNameTopRightGrid: PropTypes.string.isRequired,\n  enableFixedColumnScroll: PropTypes.bool.isRequired,\n  enableFixedRowScroll: PropTypes.bool.isRequired,\n  fixedColumnCount: PropTypes.number.isRequired,\n  fixedRowCount: PropTypes.number.isRequired,\n  onScrollbarPresenceChange: PropTypes.func,\n  style: PropTypes.object.isRequired,\n  styleBottomLeftGrid: PropTypes.object.isRequired,\n  styleBottomRightGrid: PropTypes.object.isRequired,\n  styleTopLeftGrid: PropTypes.object.isRequired,\n  styleTopRightGrid: PropTypes.object.isRequired,\n  hideTopRightGridScrollbar: PropTypes.bool,\n  hideBottomLeftGridScrollbar: PropTypes.bool\n} : {};\npolyfill(MultiGrid);\nexport default MultiGrid;","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\n/**\n * HOC that simplifies the process of synchronizing scrolling between two or more virtualized components.\n */\n\nvar ScrollSync =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(ScrollSync, _React$PureComponent);\n\n  function ScrollSync(props, context) {\n    var _this;\n\n    _classCallCheck(this, ScrollSync);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ScrollSync).call(this, props, context));\n    _this.state = {\n      clientHeight: 0,\n      clientWidth: 0,\n      scrollHeight: 0,\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollWidth: 0\n    };\n    _this._onScroll = _this._onScroll.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ScrollSync, [{\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      var _this$state = this.state,\n          clientHeight = _this$state.clientHeight,\n          clientWidth = _this$state.clientWidth,\n          scrollHeight = _this$state.scrollHeight,\n          scrollLeft = _this$state.scrollLeft,\n          scrollTop = _this$state.scrollTop,\n          scrollWidth = _this$state.scrollWidth;\n      return children({\n        clientHeight: clientHeight,\n        clientWidth: clientWidth,\n        onScroll: this._onScroll,\n        scrollHeight: scrollHeight,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        scrollWidth: scrollWidth\n      });\n    }\n  }, {\n    key: \"_onScroll\",\n    value: function _onScroll(_ref) {\n      var clientHeight = _ref.clientHeight,\n          clientWidth = _ref.clientWidth,\n          scrollHeight = _ref.scrollHeight,\n          scrollLeft = _ref.scrollLeft,\n          scrollTop = _ref.scrollTop,\n          scrollWidth = _ref.scrollWidth;\n      this.setState({\n        clientHeight: clientHeight,\n        clientWidth: clientWidth,\n        scrollHeight: scrollHeight,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        scrollWidth: scrollWidth\n      });\n    }\n  }]);\n\n  return ScrollSync;\n}(React.PureComponent);\n\nexport { ScrollSync as default };\nScrollSync.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering 2 or more virtualized components.\n   * This function should implement the following signature:\n   * ({ onScroll, scrollLeft, scrollTop }) => PropTypes.element\n   */\n  children: PropTypes.func.isRequired\n} : {};","export default function createMultiSort(sortCallback) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      defaultSortBy = _ref.defaultSortBy,\n      _ref$defaultSortDirec = _ref.defaultSortDirection,\n      defaultSortDirection = _ref$defaultSortDirec === void 0 ? {} : _ref$defaultSortDirec;\n\n  if (!sortCallback) {\n    throw Error(\"Required parameter \\\"sortCallback\\\" not specified\");\n  }\n\n  var sortBy = defaultSortBy || [];\n  var sortDirection = {};\n  sortBy.forEach(function (dataKey) {\n    sortDirection[dataKey] = defaultSortDirection[dataKey] !== undefined ? defaultSortDirection[dataKey] : 'ASC';\n  });\n\n  function sort(_ref2) {\n    var defaultSortDirection = _ref2.defaultSortDirection,\n        event = _ref2.event,\n        dataKey = _ref2.sortBy;\n\n    if (event.shiftKey) {\n      // Shift + click appends a column to existing criteria\n      if (sortDirection[dataKey] !== undefined) {\n        sortDirection[dataKey] = sortDirection[dataKey] === 'ASC' ? 'DESC' : 'ASC';\n      } else {\n        sortDirection[dataKey] = defaultSortDirection;\n        sortBy.push(dataKey);\n      }\n    } else if (event.ctrlKey || event.metaKey) {\n      // Control + click removes column from sort (if pressent)\n      var index = sortBy.indexOf(dataKey);\n\n      if (index >= 0) {\n        sortBy.splice(index, 1);\n        delete sortDirection[dataKey];\n      }\n    } else {\n      // Clear sortBy array of all non-selected keys\n      sortBy.length = 0;\n      sortBy.push(dataKey); // Clear sortDirection object of all non-selected keys\n\n      var sortDirectionKeys = Object.keys(sortDirection);\n      sortDirectionKeys.forEach(function (key) {\n        if (key !== dataKey) delete sortDirection[key];\n      }); // If key is already selected, reverse sort direction.\n      // Else, set sort direction to default direction.\n\n      if (sortDirection[dataKey] !== undefined) {\n        sortDirection[dataKey] = sortDirection[dataKey] === 'ASC' ? 'DESC' : 'ASC';\n      } else {\n        sortDirection[dataKey] = defaultSortDirection;\n      }\n    } // Notify application code\n\n\n    sortCallback({\n      sortBy: sortBy,\n      sortDirection: sortDirection\n    });\n  }\n\n  return {\n    sort: sort,\n    sortBy: sortBy,\n    sortDirection: sortDirection\n  };\n}","/**\n * Default accessor for returning a cell value for a given attribute.\n * This function expects to operate on either a vanilla Object or an Immutable Map.\n * You should override the column's cellDataGetter if your data is some other type of object.\n */\nexport default function defaultCellDataGetter(_ref) {\n  var dataKey = _ref.dataKey,\n      rowData = _ref.rowData;\n\n  if (typeof rowData.get === 'function') {\n    return rowData.get(dataKey);\n  } else {\n    return rowData[dataKey];\n  }\n}\nimport { bpfrpt_proptype_CellDataGetterParams } from \"./types\";","/**\n * Default cell renderer that displays an attribute as a simple string\n * You should override the column's cellRenderer if your data is some other type of object.\n */\nexport default function defaultCellRenderer(_ref) {\n  var cellData = _ref.cellData;\n\n  if (cellData == null) {\n    return '';\n  } else {\n    return String(cellData);\n  }\n}\nimport { bpfrpt_proptype_CellRendererParams } from \"./types\";","import * as React from 'react';\nexport default function defaultHeaderRowRenderer(_ref) {\n  var className = _ref.className,\n      columns = _ref.columns,\n      style = _ref.style;\n  return React.createElement(\"div\", {\n    className: className,\n    role: \"row\",\n    style: style\n  }, columns);\n}\ndefaultHeaderRowRenderer.propTypes = process.env.NODE_ENV === 'production' ? null : bpfrpt_proptype_HeaderRowRendererParams === PropTypes.any ? {} : bpfrpt_proptype_HeaderRowRendererParams;\nimport { bpfrpt_proptype_HeaderRowRendererParams } from \"./types\";\nimport PropTypes from \"prop-types\";","var SortDirection = {\n  /**\n   * Sort items in ascending order.\n   * This means arranging from the lowest value to the highest (e.g. a-z, 0-9).\n   */\n  ASC: 'ASC',\n\n  /**\n   * Sort items in descending order.\n   * This means arranging from the highest value to the lowest (e.g. z-a, 9-0).\n   */\n  DESC: 'DESC'\n};\nexport default SortDirection;","import clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport SortDirection from './SortDirection';\n/**\n * Displayed beside a header to indicate that a Table is currently sorted by this column.\n */\n\nexport default function SortIndicator(_ref) {\n  var sortDirection = _ref.sortDirection;\n  var classNames = clsx('ReactVirtualized__Table__sortableHeaderIcon', {\n    'ReactVirtualized__Table__sortableHeaderIcon--ASC': sortDirection === SortDirection.ASC,\n    'ReactVirtualized__Table__sortableHeaderIcon--DESC': sortDirection === SortDirection.DESC\n  });\n  return React.createElement(\"svg\", {\n    className: classNames,\n    width: 18,\n    height: 18,\n    viewBox: \"0 0 24 24\"\n  }, sortDirection === SortDirection.ASC ? React.createElement(\"path\", {\n    d: \"M7 14l5-5 5 5z\"\n  }) : React.createElement(\"path\", {\n    d: \"M7 10l5 5 5-5z\"\n  }), React.createElement(\"path\", {\n    d: \"M0 0h24v24H0z\",\n    fill: \"none\"\n  }));\n}\nSortIndicator.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  sortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC])\n} : {};","import * as React from 'react';\nimport SortIndicator from './SortIndicator';\n\n/**\n * Default table header renderer.\n */\nexport default function defaultHeaderRenderer(_ref) {\n  var dataKey = _ref.dataKey,\n      label = _ref.label,\n      sortBy = _ref.sortBy,\n      sortDirection = _ref.sortDirection;\n  var showSortIndicator = sortBy === dataKey;\n  var children = [React.createElement(\"span\", {\n    className: \"ReactVirtualized__Table__headerTruncatedText\",\n    key: \"label\",\n    title: typeof label === 'string' ? label : null\n  }, label)];\n\n  if (showSortIndicator) {\n    children.push(React.createElement(SortIndicator, {\n      key: \"SortIndicator\",\n      sortDirection: sortDirection\n    }));\n  }\n\n  return children;\n}\ndefaultHeaderRenderer.propTypes = process.env.NODE_ENV === 'production' ? null : bpfrpt_proptype_HeaderRendererParams === PropTypes.any ? {} : bpfrpt_proptype_HeaderRendererParams;\nimport { bpfrpt_proptype_HeaderRendererParams } from \"./types\";\nimport PropTypes from \"prop-types\";","import _extends from \"@babel/runtime/helpers/extends\";\nimport * as React from 'react';\n\n/**\n * Default row renderer for Table.\n */\nexport default function defaultRowRenderer(_ref) {\n  var className = _ref.className,\n      columns = _ref.columns,\n      index = _ref.index,\n      key = _ref.key,\n      onRowClick = _ref.onRowClick,\n      onRowDoubleClick = _ref.onRowDoubleClick,\n      onRowMouseOut = _ref.onRowMouseOut,\n      onRowMouseOver = _ref.onRowMouseOver,\n      onRowRightClick = _ref.onRowRightClick,\n      rowData = _ref.rowData,\n      style = _ref.style;\n  var a11yProps = {\n    'aria-rowindex': index + 1\n  };\n\n  if (onRowClick || onRowDoubleClick || onRowMouseOut || onRowMouseOver || onRowRightClick) {\n    a11yProps['aria-label'] = 'row';\n    a11yProps.tabIndex = 0;\n\n    if (onRowClick) {\n      a11yProps.onClick = function (event) {\n        return onRowClick({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowDoubleClick) {\n      a11yProps.onDoubleClick = function (event) {\n        return onRowDoubleClick({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowMouseOut) {\n      a11yProps.onMouseOut = function (event) {\n        return onRowMouseOut({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowMouseOver) {\n      a11yProps.onMouseOver = function (event) {\n        return onRowMouseOver({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowRightClick) {\n      a11yProps.onContextMenu = function (event) {\n        return onRowRightClick({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n  }\n\n  return React.createElement(\"div\", _extends({}, a11yProps, {\n    className: className,\n    key: key,\n    role: \"row\",\n    style: style\n  }), columns);\n}\ndefaultRowRenderer.propTypes = process.env.NODE_ENV === 'production' ? null : bpfrpt_proptype_RowRendererParams === PropTypes.any ? {} : bpfrpt_proptype_RowRendererParams;\nimport { bpfrpt_proptype_RowRendererParams } from \"./types\";\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport defaultHeaderRenderer from './defaultHeaderRenderer';\nimport defaultCellRenderer from './defaultCellRenderer';\nimport defaultCellDataGetter from './defaultCellDataGetter';\nimport SortDirection from './SortDirection';\n/**\n * Describes the header and cell contents of a table column.\n */\n\nvar Column =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Column, _React$Component);\n\n  function Column() {\n    _classCallCheck(this, Column);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Column).apply(this, arguments));\n  }\n\n  return Column;\n}(React.Component);\n\n_defineProperty(Column, \"defaultProps\", {\n  cellDataGetter: defaultCellDataGetter,\n  cellRenderer: defaultCellRenderer,\n  defaultSortDirection: SortDirection.ASC,\n  flexGrow: 0,\n  flexShrink: 1,\n  headerRenderer: defaultHeaderRenderer,\n  style: {}\n});\n\nexport { Column as default };\nColumn.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** Optional aria-label value to set on the column header */\n  'aria-label': PropTypes.string,\n\n  /**\n   * Callback responsible for returning a cell's data, given its :dataKey\n   * ({ columnData: any, dataKey: string, rowData: any }): any\n   */\n  cellDataGetter: PropTypes.func,\n\n  /**\n   * Callback responsible for rendering a cell's contents.\n   * ({ cellData: any, columnData: any, dataKey: string, rowData: any, rowIndex: number }): node\n   */\n  cellRenderer: PropTypes.func,\n\n  /** Optional CSS class to apply to cell */\n  className: PropTypes.string,\n\n  /** Optional additional data passed to this column's :cellDataGetter */\n  columnData: PropTypes.object,\n\n  /** Uniquely identifies the row-data attribute corresponding to this cell */\n  dataKey: PropTypes.any.isRequired,\n\n  /** Optional direction to be used when clicked the first time */\n  defaultSortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC]),\n\n  /** If sort is enabled for the table at large, disable it for this column */\n  disableSort: PropTypes.bool,\n\n  /** Flex grow style; defaults to 0 */\n  flexGrow: PropTypes.number,\n\n  /** Flex shrink style; defaults to 1 */\n  flexShrink: PropTypes.number,\n\n  /** Optional CSS class to apply to this column's header */\n  headerClassName: PropTypes.string,\n\n  /**\n   * Optional callback responsible for rendering a column header contents.\n   * ({ columnData: object, dataKey: string, disableSort: boolean, label: node, sortBy: string, sortDirection: string }): PropTypes.node\n   */\n  headerRenderer: PropTypes.func.isRequired,\n\n  /** Optional inline style to apply to this column's header */\n  headerStyle: PropTypes.object,\n\n  /** Optional id to set on the column header */\n  id: PropTypes.string,\n\n  /** Header label for this column */\n  label: PropTypes.node,\n\n  /** Maximum width of column; this property will only be used if :flexGrow is > 0. */\n  maxWidth: PropTypes.number,\n\n  /** Minimum width of column. */\n  minWidth: PropTypes.number,\n\n  /** Optional inline style to apply to cell */\n  style: PropTypes.object,\n\n  /** Flex basis (width) for this column; This value can grow or shrink based on :flexGrow and :flexShrink properties. */\n  width: PropTypes.number.isRequired\n} : {};","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport clsx from 'clsx';\nimport Column from './Column';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { findDOMNode } from 'react-dom';\nimport Grid, { accessibilityOverscanIndicesGetter } from '../Grid';\nimport defaultRowRenderer from './defaultRowRenderer';\nimport defaultHeaderRowRenderer from './defaultHeaderRowRenderer';\nimport SortDirection from './SortDirection';\n/**\n * Table component with fixed headers and virtualized rows for improved performance with large data sets.\n * This component expects explicit width, height, and padding parameters.\n */\n\nvar Table =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Table, _React$PureComponent);\n\n  function Table(props) {\n    var _this;\n\n    _classCallCheck(this, Table);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Table).call(this, props));\n    _this.state = {\n      scrollbarWidth: 0\n    };\n    _this._createColumn = _this._createColumn.bind(_assertThisInitialized(_this));\n    _this._createRow = _this._createRow.bind(_assertThisInitialized(_this));\n    _this._onScroll = _this._onScroll.bind(_assertThisInitialized(_this));\n    _this._onSectionRendered = _this._onSectionRendered.bind(_assertThisInitialized(_this));\n    _this._setRef = _this._setRef.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Table, [{\n    key: \"forceUpdateGrid\",\n    value: function forceUpdateGrid() {\n      if (this.Grid) {\n        this.Grid.forceUpdate();\n      }\n    }\n    /** See Grid#getOffsetForCell */\n\n  }, {\n    key: \"getOffsetForRow\",\n    value: function getOffsetForRow(_ref) {\n      var alignment = _ref.alignment,\n          index = _ref.index;\n\n      if (this.Grid) {\n        var _this$Grid$getOffsetF = this.Grid.getOffsetForCell({\n          alignment: alignment,\n          rowIndex: index\n        }),\n            scrollTop = _this$Grid$getOffsetF.scrollTop;\n\n        return scrollTop;\n      }\n\n      return 0;\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref2) {\n      var columnIndex = _ref2.columnIndex,\n          rowIndex = _ref2.rowIndex;\n\n      if (this.Grid) {\n        this.Grid.invalidateCellSizeAfterRender({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllRows\",\n    value: function measureAllRows() {\n      if (this.Grid) {\n        this.Grid.measureAllCells();\n      }\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref3$columnIndex = _ref3.columnIndex,\n          columnIndex = _ref3$columnIndex === void 0 ? 0 : _ref3$columnIndex,\n          _ref3$rowIndex = _ref3.rowIndex,\n          rowIndex = _ref3$rowIndex === void 0 ? 0 : _ref3$rowIndex;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeRowHeights\",\n    value: function recomputeRowHeights() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: index\n        });\n      }\n    }\n    /** See Grid#scrollToPosition */\n\n  }, {\n    key: \"scrollToPosition\",\n    value: function scrollToPosition() {\n      var scrollTop = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToPosition({\n          scrollTop: scrollTop\n        });\n      }\n    }\n    /** See Grid#scrollToCell */\n\n  }, {\n    key: \"scrollToRow\",\n    value: function scrollToRow() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToCell({\n          columnIndex: 0,\n          rowIndex: index\n        });\n      }\n    }\n  }, {\n    key: \"getScrollbarWidth\",\n    value: function getScrollbarWidth() {\n      if (this.Grid) {\n        var _Grid = findDOMNode(this.Grid);\n\n        var clientWidth = _Grid.clientWidth || 0;\n        var offsetWidth = _Grid.offsetWidth || 0;\n        return offsetWidth - clientWidth;\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._setScrollbarWidth();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._setScrollbarWidth();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          children = _this$props.children,\n          className = _this$props.className,\n          disableHeader = _this$props.disableHeader,\n          gridClassName = _this$props.gridClassName,\n          gridStyle = _this$props.gridStyle,\n          headerHeight = _this$props.headerHeight,\n          headerRowRenderer = _this$props.headerRowRenderer,\n          height = _this$props.height,\n          id = _this$props.id,\n          noRowsRenderer = _this$props.noRowsRenderer,\n          rowClassName = _this$props.rowClassName,\n          rowStyle = _this$props.rowStyle,\n          scrollToIndex = _this$props.scrollToIndex,\n          style = _this$props.style,\n          width = _this$props.width;\n      var scrollbarWidth = this.state.scrollbarWidth;\n      var availableRowsHeight = disableHeader ? height : height - headerHeight;\n      var rowClass = typeof rowClassName === 'function' ? rowClassName({\n        index: -1\n      }) : rowClassName;\n      var rowStyleObject = typeof rowStyle === 'function' ? rowStyle({\n        index: -1\n      }) : rowStyle; // Precompute and cache column styles before rendering rows and columns to speed things up\n\n      this._cachedColumnStyles = [];\n      React.Children.toArray(children).forEach(function (column, index) {\n        var flexStyles = _this2._getFlexStyleForColumn(column, column.props.style);\n\n        _this2._cachedColumnStyles[index] = _objectSpread({\n          overflow: 'hidden'\n        }, flexStyles);\n      }); // Note that we specify :rowCount, :scrollbarWidth, :sortBy, and :sortDirection as properties on Grid even though these have nothing to do with Grid.\n      // This is done because Grid is a pure component and won't update unless its properties or state has changed.\n      // Any property that should trigger a re-render of Grid then is specified here to avoid a stale display.\n\n      return React.createElement(\"div\", {\n        \"aria-label\": this.props['aria-label'],\n        \"aria-labelledby\": this.props['aria-labelledby'],\n        \"aria-colcount\": React.Children.toArray(children).length,\n        \"aria-rowcount\": this.props.rowCount,\n        className: clsx('ReactVirtualized__Table', className),\n        id: id,\n        role: \"grid\",\n        style: style\n      }, !disableHeader && headerRowRenderer({\n        className: clsx('ReactVirtualized__Table__headerRow', rowClass),\n        columns: this._getHeaderColumns(),\n        style: _objectSpread({\n          height: headerHeight,\n          overflow: 'hidden',\n          paddingRight: scrollbarWidth,\n          width: width\n        }, rowStyleObject)\n      }), React.createElement(Grid, _extends({}, this.props, {\n        \"aria-readonly\": null,\n        autoContainerWidth: true,\n        className: clsx('ReactVirtualized__Table__Grid', gridClassName),\n        cellRenderer: this._createRow,\n        columnWidth: width,\n        columnCount: 1,\n        height: availableRowsHeight,\n        id: undefined,\n        noContentRenderer: noRowsRenderer,\n        onScroll: this._onScroll,\n        onSectionRendered: this._onSectionRendered,\n        ref: this._setRef,\n        role: \"rowgroup\",\n        scrollbarWidth: scrollbarWidth,\n        scrollToRow: scrollToIndex,\n        style: _objectSpread({}, gridStyle, {\n          overflowX: 'hidden'\n        })\n      })));\n    }\n  }, {\n    key: \"_createColumn\",\n    value: function _createColumn(_ref4) {\n      var column = _ref4.column,\n          columnIndex = _ref4.columnIndex,\n          isScrolling = _ref4.isScrolling,\n          parent = _ref4.parent,\n          rowData = _ref4.rowData,\n          rowIndex = _ref4.rowIndex;\n      var onColumnClick = this.props.onColumnClick;\n      var _column$props = column.props,\n          cellDataGetter = _column$props.cellDataGetter,\n          cellRenderer = _column$props.cellRenderer,\n          className = _column$props.className,\n          columnData = _column$props.columnData,\n          dataKey = _column$props.dataKey,\n          id = _column$props.id;\n      var cellData = cellDataGetter({\n        columnData: columnData,\n        dataKey: dataKey,\n        rowData: rowData\n      });\n      var renderedCell = cellRenderer({\n        cellData: cellData,\n        columnData: columnData,\n        columnIndex: columnIndex,\n        dataKey: dataKey,\n        isScrolling: isScrolling,\n        parent: parent,\n        rowData: rowData,\n        rowIndex: rowIndex\n      });\n\n      var onClick = function onClick(event) {\n        onColumnClick && onColumnClick({\n          columnData: columnData,\n          dataKey: dataKey,\n          event: event\n        });\n      };\n\n      var style = this._cachedColumnStyles[columnIndex];\n      var title = typeof renderedCell === 'string' ? renderedCell : null; // Avoid using object-spread syntax with multiple objects here,\n      // Since it results in an extra method call to 'babel-runtime/helpers/extends'\n      // See PR https://github.com/bvaughn/react-virtualized/pull/942\n\n      return React.createElement(\"div\", {\n        \"aria-colindex\": columnIndex + 1,\n        \"aria-describedby\": id,\n        className: clsx('ReactVirtualized__Table__rowColumn', className),\n        key: 'Row' + rowIndex + '-' + 'Col' + columnIndex,\n        onClick: onClick,\n        role: \"gridcell\",\n        style: style,\n        title: title\n      }, renderedCell);\n    }\n  }, {\n    key: \"_createHeader\",\n    value: function _createHeader(_ref5) {\n      var column = _ref5.column,\n          index = _ref5.index;\n      var _this$props2 = this.props,\n          headerClassName = _this$props2.headerClassName,\n          headerStyle = _this$props2.headerStyle,\n          onHeaderClick = _this$props2.onHeaderClick,\n          sort = _this$props2.sort,\n          sortBy = _this$props2.sortBy,\n          sortDirection = _this$props2.sortDirection;\n      var _column$props2 = column.props,\n          columnData = _column$props2.columnData,\n          dataKey = _column$props2.dataKey,\n          defaultSortDirection = _column$props2.defaultSortDirection,\n          disableSort = _column$props2.disableSort,\n          headerRenderer = _column$props2.headerRenderer,\n          id = _column$props2.id,\n          label = _column$props2.label;\n      var sortEnabled = !disableSort && sort;\n      var classNames = clsx('ReactVirtualized__Table__headerColumn', headerClassName, column.props.headerClassName, {\n        ReactVirtualized__Table__sortableHeaderColumn: sortEnabled\n      });\n\n      var style = this._getFlexStyleForColumn(column, _objectSpread({}, headerStyle, {}, column.props.headerStyle));\n\n      var renderedHeader = headerRenderer({\n        columnData: columnData,\n        dataKey: dataKey,\n        disableSort: disableSort,\n        label: label,\n        sortBy: sortBy,\n        sortDirection: sortDirection\n      });\n      var headerOnClick, headerOnKeyDown, headerTabIndex, headerAriaSort, headerAriaLabel;\n\n      if (sortEnabled || onHeaderClick) {\n        // If this is a sortable header, clicking it should update the table data's sorting.\n        var isFirstTimeSort = sortBy !== dataKey; // If this is the firstTime sort of this column, use the column default sort order.\n        // Otherwise, invert the direction of the sort.\n\n        var newSortDirection = isFirstTimeSort ? defaultSortDirection : sortDirection === SortDirection.DESC ? SortDirection.ASC : SortDirection.DESC;\n\n        var onClick = function onClick(event) {\n          sortEnabled && sort({\n            defaultSortDirection: defaultSortDirection,\n            event: event,\n            sortBy: dataKey,\n            sortDirection: newSortDirection\n          });\n          onHeaderClick && onHeaderClick({\n            columnData: columnData,\n            dataKey: dataKey,\n            event: event\n          });\n        };\n\n        var onKeyDown = function onKeyDown(event) {\n          if (event.key === 'Enter' || event.key === ' ') {\n            onClick(event);\n          }\n        };\n\n        headerAriaLabel = column.props['aria-label'] || label || dataKey;\n        headerAriaSort = 'none';\n        headerTabIndex = 0;\n        headerOnClick = onClick;\n        headerOnKeyDown = onKeyDown;\n      }\n\n      if (sortBy === dataKey) {\n        headerAriaSort = sortDirection === SortDirection.ASC ? 'ascending' : 'descending';\n      } // Avoid using object-spread syntax with multiple objects here,\n      // Since it results in an extra method call to 'babel-runtime/helpers/extends'\n      // See PR https://github.com/bvaughn/react-virtualized/pull/942\n\n\n      return React.createElement(\"div\", {\n        \"aria-label\": headerAriaLabel,\n        \"aria-sort\": headerAriaSort,\n        className: classNames,\n        id: id,\n        key: 'Header-Col' + index,\n        onClick: headerOnClick,\n        onKeyDown: headerOnKeyDown,\n        role: \"columnheader\",\n        style: style,\n        tabIndex: headerTabIndex\n      }, renderedHeader);\n    }\n  }, {\n    key: \"_createRow\",\n    value: function _createRow(_ref6) {\n      var _this3 = this;\n\n      var index = _ref6.rowIndex,\n          isScrolling = _ref6.isScrolling,\n          key = _ref6.key,\n          parent = _ref6.parent,\n          style = _ref6.style;\n      var _this$props3 = this.props,\n          children = _this$props3.children,\n          onRowClick = _this$props3.onRowClick,\n          onRowDoubleClick = _this$props3.onRowDoubleClick,\n          onRowRightClick = _this$props3.onRowRightClick,\n          onRowMouseOver = _this$props3.onRowMouseOver,\n          onRowMouseOut = _this$props3.onRowMouseOut,\n          rowClassName = _this$props3.rowClassName,\n          rowGetter = _this$props3.rowGetter,\n          rowRenderer = _this$props3.rowRenderer,\n          rowStyle = _this$props3.rowStyle;\n      var scrollbarWidth = this.state.scrollbarWidth;\n      var rowClass = typeof rowClassName === 'function' ? rowClassName({\n        index: index\n      }) : rowClassName;\n      var rowStyleObject = typeof rowStyle === 'function' ? rowStyle({\n        index: index\n      }) : rowStyle;\n      var rowData = rowGetter({\n        index: index\n      });\n      var columns = React.Children.toArray(children).map(function (column, columnIndex) {\n        return _this3._createColumn({\n          column: column,\n          columnIndex: columnIndex,\n          isScrolling: isScrolling,\n          parent: parent,\n          rowData: rowData,\n          rowIndex: index,\n          scrollbarWidth: scrollbarWidth\n        });\n      });\n      var className = clsx('ReactVirtualized__Table__row', rowClass);\n\n      var flattenedStyle = _objectSpread({}, style, {\n        height: this._getRowHeight(index),\n        overflow: 'hidden',\n        paddingRight: scrollbarWidth\n      }, rowStyleObject);\n\n      return rowRenderer({\n        className: className,\n        columns: columns,\n        index: index,\n        isScrolling: isScrolling,\n        key: key,\n        onRowClick: onRowClick,\n        onRowDoubleClick: onRowDoubleClick,\n        onRowRightClick: onRowRightClick,\n        onRowMouseOver: onRowMouseOver,\n        onRowMouseOut: onRowMouseOut,\n        rowData: rowData,\n        style: flattenedStyle\n      });\n    }\n    /**\n     * Determines the flex-shrink, flex-grow, and width values for a cell (header or column).\n     */\n\n  }, {\n    key: \"_getFlexStyleForColumn\",\n    value: function _getFlexStyleForColumn(column) {\n      var customStyle = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var flexValue = \"\".concat(column.props.flexGrow, \" \").concat(column.props.flexShrink, \" \").concat(column.props.width, \"px\");\n\n      var style = _objectSpread({}, customStyle, {\n        flex: flexValue,\n        msFlex: flexValue,\n        WebkitFlex: flexValue\n      });\n\n      if (column.props.maxWidth) {\n        style.maxWidth = column.props.maxWidth;\n      }\n\n      if (column.props.minWidth) {\n        style.minWidth = column.props.minWidth;\n      }\n\n      return style;\n    }\n  }, {\n    key: \"_getHeaderColumns\",\n    value: function _getHeaderColumns() {\n      var _this4 = this;\n\n      var _this$props4 = this.props,\n          children = _this$props4.children,\n          disableHeader = _this$props4.disableHeader;\n      var items = disableHeader ? [] : React.Children.toArray(children);\n      return items.map(function (column, index) {\n        return _this4._createHeader({\n          column: column,\n          index: index\n        });\n      });\n    }\n  }, {\n    key: \"_getRowHeight\",\n    value: function _getRowHeight(rowIndex) {\n      var rowHeight = this.props.rowHeight;\n      return typeof rowHeight === 'function' ? rowHeight({\n        index: rowIndex\n      }) : rowHeight;\n    }\n  }, {\n    key: \"_onScroll\",\n    value: function _onScroll(_ref7) {\n      var clientHeight = _ref7.clientHeight,\n          scrollHeight = _ref7.scrollHeight,\n          scrollTop = _ref7.scrollTop;\n      var onScroll = this.props.onScroll;\n      onScroll({\n        clientHeight: clientHeight,\n        scrollHeight: scrollHeight,\n        scrollTop: scrollTop\n      });\n    }\n  }, {\n    key: \"_onSectionRendered\",\n    value: function _onSectionRendered(_ref8) {\n      var rowOverscanStartIndex = _ref8.rowOverscanStartIndex,\n          rowOverscanStopIndex = _ref8.rowOverscanStopIndex,\n          rowStartIndex = _ref8.rowStartIndex,\n          rowStopIndex = _ref8.rowStopIndex;\n      var onRowsRendered = this.props.onRowsRendered;\n      onRowsRendered({\n        overscanStartIndex: rowOverscanStartIndex,\n        overscanStopIndex: rowOverscanStopIndex,\n        startIndex: rowStartIndex,\n        stopIndex: rowStopIndex\n      });\n    }\n  }, {\n    key: \"_setRef\",\n    value: function _setRef(ref) {\n      this.Grid = ref;\n    }\n  }, {\n    key: \"_setScrollbarWidth\",\n    value: function _setScrollbarWidth() {\n      var scrollbarWidth = this.getScrollbarWidth();\n      this.setState({\n        scrollbarWidth: scrollbarWidth\n      });\n    }\n  }]);\n\n  return Table;\n}(React.PureComponent);\n\n_defineProperty(Table, \"defaultProps\", {\n  disableHeader: false,\n  estimatedRowSize: 30,\n  headerHeight: 0,\n  headerStyle: {},\n  noRowsRenderer: function noRowsRenderer() {\n    return null;\n  },\n  onRowsRendered: function onRowsRendered() {\n    return null;\n  },\n  onScroll: function onScroll() {\n    return null;\n  },\n  overscanIndicesGetter: accessibilityOverscanIndicesGetter,\n  overscanRowCount: 10,\n  rowRenderer: defaultRowRenderer,\n  headerRowRenderer: defaultHeaderRowRenderer,\n  rowStyle: {},\n  scrollToAlignment: 'auto',\n  scrollToIndex: -1,\n  style: {}\n});\n\nexport { Table as default };\nTable.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** This is just set on the grid top element. */\n  'aria-label': PropTypes.string,\n\n  /** This is just set on the grid top element. */\n  'aria-labelledby': PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  autoHeight: PropTypes.bool,\n\n  /** One or more Columns describing the data displayed in this row */\n  children: function children(props) {\n    var children = React.Children.toArray(props.children);\n\n    for (var i = 0; i < children.length; i++) {\n      var childType = children[i].type;\n\n      if (childType !== Column && !(childType.prototype instanceof Column)) {\n        return new Error('Table only accepts children of type Column');\n      }\n    }\n  },\n\n  /** Optional CSS class name */\n  className: PropTypes.string,\n\n  /** Disable rendering the header at all */\n  disableHeader: PropTypes.bool,\n\n  /**\n   * Used to estimate the total height of a Table before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  estimatedRowSize: PropTypes.number.isRequired,\n\n  /** Optional custom CSS class name to attach to inner Grid element. */\n  gridClassName: PropTypes.string,\n\n  /** Optional inline style to attach to inner Grid element. */\n  gridStyle: PropTypes.object,\n\n  /** Optional CSS class to apply to all column headers */\n  headerClassName: PropTypes.string,\n\n  /** Fixed height of header row */\n  headerHeight: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a table row given an array of columns:\n   * Should implement the following interface: ({\n   *   className: string,\n   *   columns: any[],\n   *   style: any\n   * }): PropTypes.node\n   */\n  headerRowRenderer: PropTypes.func,\n\n  /** Optional custom inline style to attach to table header columns. */\n  headerStyle: PropTypes.object,\n\n  /** Fixed/available height for out DOM element */\n  height: PropTypes.number.isRequired,\n\n  /** Optional id */\n  id: PropTypes.string,\n\n  /** Optional renderer to be used in place of table body rows when rowCount is 0 */\n  noRowsRenderer: PropTypes.func,\n\n  /**\n   * Optional callback when a column is clicked.\n   * ({ columnData: any, dataKey: string }): void\n   */\n  onColumnClick: PropTypes.func,\n\n  /**\n   * Optional callback when a column's header is clicked.\n   * ({ columnData: any, dataKey: string }): void\n   */\n  onHeaderClick: PropTypes.func,\n\n  /**\n   * Callback invoked when a user clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowClick: PropTypes.func,\n\n  /**\n   * Callback invoked when a user double-clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowDoubleClick: PropTypes.func,\n\n  /**\n   * Callback invoked when the mouse leaves a table row.\n   * ({ index: number }): void\n   */\n  onRowMouseOut: PropTypes.func,\n\n  /**\n   * Callback invoked when a user moves the mouse over a table row.\n   * ({ index: number }): void\n   */\n  onRowMouseOver: PropTypes.func,\n\n  /**\n   * Callback invoked when a user right-clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowRightClick: PropTypes.func,\n\n  /**\n   * Callback invoked with information about the slice of rows that were just rendered.\n   * ({ startIndex, stopIndex }): void\n   */\n  onRowsRendered: PropTypes.func,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   * ({ clientHeight, scrollHeight, scrollTop }): void\n   */\n  onScroll: PropTypes.func.isRequired,\n\n  /** See Grid#overscanIndicesGetter */\n  overscanIndicesGetter: PropTypes.func.isRequired,\n\n  /**\n   * Number of rows to render above/below the visible bounds of the list.\n   * These rows can help for smoother scrolling on touch devices.\n   */\n  overscanRowCount: PropTypes.number.isRequired,\n\n  /**\n   * Optional CSS class to apply to all table rows (including the header row).\n   * This property can be a CSS class name (string) or a function that returns a class name.\n   * If a function is provided its signature should be: ({ index: number }): string\n   */\n  rowClassName: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n\n  /**\n   * Callback responsible for returning a data row given an index.\n   * ({ index: number }): any\n   */\n  rowGetter: PropTypes.func.isRequired,\n\n  /**\n   * Either a fixed row height (number) or a function that returns the height of a row given its index.\n   * ({ index: number }): number\n   */\n  rowHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n\n  /** Number of rows in table. */\n  rowCount: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a table row given an array of columns:\n   * Should implement the following interface: ({\n   *   className: string,\n   *   columns: Array,\n   *   index: number,\n   *   isScrolling: boolean,\n   *   onRowClick: ?Function,\n   *   onRowDoubleClick: ?Function,\n   *   onRowMouseOver: ?Function,\n   *   onRowMouseOut: ?Function,\n   *   rowData: any,\n   *   style: any\n   * }): PropTypes.node\n   */\n  rowRenderer: PropTypes.func,\n\n  /** Optional custom inline style to attach to table rows. */\n  rowStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired,\n\n  /** See Grid#scrollToAlignment */\n  scrollToAlignment: PropTypes.oneOf(['auto', 'end', 'start', 'center']).isRequired,\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  scrollToIndex: PropTypes.number.isRequired,\n\n  /** Vertical offset. */\n  scrollTop: PropTypes.number,\n\n  /**\n   * Sort function to be called if a sortable header is clicked.\n   * Should implement the following interface: ({\n   *   defaultSortDirection: 'ASC' | 'DESC',\n   *   event: MouseEvent,\n   *   sortBy: string,\n   *   sortDirection: SortDirection\n   * }): void\n   */\n  sort: PropTypes.func,\n\n  /** Table data is currently sorted by this :dataKey (if it is sorted at all) */\n  sortBy: PropTypes.string,\n\n  /** Table data is currently sorted in this direction (if it is sorted at all) */\n  sortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC]),\n\n  /** Optional inline style */\n  style: PropTypes.object,\n\n  /** Tab index for focus */\n  tabIndex: PropTypes.number,\n\n  /** Width of list */\n  width: PropTypes.number.isRequired\n} : {};\nimport { bpfrpt_proptype_CellPosition } from \"../Grid\";","import createMultiSort from './createMultiSort';\nimport defaultCellDataGetter from './defaultCellDataGetter';\nimport defaultCellRenderer from './defaultCellRenderer';\nimport defaultHeaderRowRenderer from './defaultHeaderRowRenderer.js';\nimport defaultHeaderRenderer from './defaultHeaderRenderer';\nimport defaultRowRenderer from './defaultRowRenderer';\nimport Column from './Column';\nimport SortDirection from './SortDirection';\nimport SortIndicator from './SortIndicator';\nimport Table from './Table';\nexport default Table;\nexport { createMultiSort, defaultCellDataGetter, defaultCellRenderer, defaultHeaderRowRenderer, defaultHeaderRenderer, defaultRowRenderer, Column, SortDirection, SortIndicator, Table };","import { requestAnimationTimeout, cancelAnimationTimeout } from '../../utils/requestAnimationTimeout';\nvar mountedInstances = [];\nvar originalBodyPointerEvents = null;\nvar disablePointerEventsTimeoutId = null;\n\nfunction enablePointerEventsIfDisabled() {\n  if (disablePointerEventsTimeoutId) {\n    disablePointerEventsTimeoutId = null;\n\n    if (document.body && originalBodyPointerEvents != null) {\n      document.body.style.pointerEvents = originalBodyPointerEvents;\n    }\n\n    originalBodyPointerEvents = null;\n  }\n}\n\nfunction enablePointerEventsAfterDelayCallback() {\n  enablePointerEventsIfDisabled();\n  mountedInstances.forEach(function (instance) {\n    return instance.__resetIsScrolling();\n  });\n}\n\nfunction enablePointerEventsAfterDelay() {\n  if (disablePointerEventsTimeoutId) {\n    cancelAnimationTimeout(disablePointerEventsTimeoutId);\n  }\n\n  var maximumTimeout = 0;\n  mountedInstances.forEach(function (instance) {\n    maximumTimeout = Math.max(maximumTimeout, instance.props.scrollingResetTimeInterval);\n  });\n  disablePointerEventsTimeoutId = requestAnimationTimeout(enablePointerEventsAfterDelayCallback, maximumTimeout);\n}\n\nfunction onScrollWindow(event) {\n  if (event.currentTarget === window && originalBodyPointerEvents == null && document.body) {\n    originalBodyPointerEvents = document.body.style.pointerEvents;\n    document.body.style.pointerEvents = 'none';\n  }\n\n  enablePointerEventsAfterDelay();\n  mountedInstances.forEach(function (instance) {\n    if (instance.props.scrollElement === event.currentTarget) {\n      instance.__handleWindowScrollEvent();\n    }\n  });\n}\n\nexport function registerScrollListener(component, element) {\n  if (!mountedInstances.some(function (instance) {\n    return instance.props.scrollElement === element;\n  })) {\n    element.addEventListener('scroll', onScrollWindow);\n  }\n\n  mountedInstances.push(component);\n}\nexport function unregisterScrollListener(component, element) {\n  mountedInstances = mountedInstances.filter(function (instance) {\n    return instance !== component;\n  });\n\n  if (!mountedInstances.length) {\n    element.removeEventListener('scroll', onScrollWindow);\n\n    if (disablePointerEventsTimeoutId) {\n      cancelAnimationTimeout(disablePointerEventsTimeoutId);\n      enablePointerEventsIfDisabled();\n    }\n  }\n}\nimport { bpfrpt_proptype_WindowScroller } from \"../WindowScroller.js\";","/**\n * Gets the dimensions of the element, accounting for API differences between\n * `window` and other DOM elements.\n */\n// TODO Move this into WindowScroller and import from there\nvar isWindow = function isWindow(element) {\n  return element === window;\n};\n\nvar getBoundingBox = function getBoundingBox(element) {\n  return element.getBoundingClientRect();\n};\n\nexport function getDimensions(scrollElement, props) {\n  if (!scrollElement) {\n    return {\n      height: props.serverHeight,\n      width: props.serverWidth\n    };\n  } else if (isWindow(scrollElement)) {\n    var _window = window,\n        innerHeight = _window.innerHeight,\n        innerWidth = _window.innerWidth;\n    return {\n      height: typeof innerHeight === 'number' ? innerHeight : 0,\n      width: typeof innerWidth === 'number' ? innerWidth : 0\n    };\n  } else {\n    return getBoundingBox(scrollElement);\n  }\n}\n/**\n * Gets the vertical and horizontal position of an element within its scroll container.\n * Elements that have been “scrolled past” return negative values.\n * Handles edge-case where a user is navigating back (history) from an already-scrolled page.\n * In this case the body’s top or left position will be a negative number and this element’s top or left will be increased (by that amount).\n */\n\nexport function getPositionOffset(element, container) {\n  if (isWindow(container) && document.documentElement) {\n    var containerElement = document.documentElement;\n    var elementRect = getBoundingBox(element);\n    var containerRect = getBoundingBox(containerElement);\n    return {\n      top: elementRect.top - containerRect.top,\n      left: elementRect.left - containerRect.left\n    };\n  } else {\n    var scrollOffset = getScrollOffset(container);\n\n    var _elementRect = getBoundingBox(element);\n\n    var _containerRect = getBoundingBox(container);\n\n    return {\n      top: _elementRect.top + scrollOffset.top - _containerRect.top,\n      left: _elementRect.left + scrollOffset.left - _containerRect.left\n    };\n  }\n}\n/**\n * Gets the vertical and horizontal scroll amount of the element, accounting for IE compatibility\n * and API differences between `window` and other DOM elements.\n */\n\nexport function getScrollOffset(element) {\n  if (isWindow(element) && document.documentElement) {\n    return {\n      top: 'scrollY' in window ? window.scrollY : document.documentElement.scrollTop,\n      left: 'scrollX' in window ? window.scrollX : document.documentElement.scrollLeft\n    };\n  } else {\n    return {\n      top: element.scrollTop,\n      left: element.scrollLeft\n    };\n  }\n}","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { registerScrollListener, unregisterScrollListener } from './utils/onScroll';\nimport { getDimensions, getPositionOffset, getScrollOffset } from './utils/dimensions';\nimport createDetectElementResize from '../vendor/detectElementResize';\n\n/**\n * Specifies the number of miliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\nexport var IS_SCROLLING_TIMEOUT = 150;\n\nvar getWindow = function getWindow() {\n  return typeof window !== 'undefined' ? window : undefined;\n};\n\nvar WindowScroller = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(WindowScroller, _React$PureComponent);\n\n  function WindowScroller() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, WindowScroller);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(WindowScroller)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"_window\", getWindow());\n\n    _defineProperty(_assertThisInitialized(_this), \"_isMounted\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_positionFromTop\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_positionFromLeft\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_detectElementResize\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_child\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", _objectSpread({}, getDimensions(_this.props.scrollElement, _this.props), {\n      isScrolling: false,\n      scrollLeft: 0,\n      scrollTop: 0\n    }));\n\n    _defineProperty(_assertThisInitialized(_this), \"_registerChild\", function (element) {\n      if (element && !(element instanceof Element)) {\n        console.warn('WindowScroller registerChild expects to be passed Element or null');\n      }\n\n      _this._child = element;\n\n      _this.updatePosition();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onChildScroll\", function (_ref) {\n      var scrollTop = _ref.scrollTop;\n\n      if (_this.state.scrollTop === scrollTop) {\n        return;\n      }\n\n      var scrollElement = _this.props.scrollElement;\n\n      if (scrollElement) {\n        if (typeof scrollElement.scrollTo === 'function') {\n          scrollElement.scrollTo(0, scrollTop + _this._positionFromTop);\n        } else {\n          scrollElement.scrollTop = scrollTop + _this._positionFromTop;\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_registerResizeListener\", function (element) {\n      if (element === window) {\n        window.addEventListener('resize', _this._onResize, false);\n      } else {\n        _this._detectElementResize.addResizeListener(element, _this._onResize);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_unregisterResizeListener\", function (element) {\n      if (element === window) {\n        window.removeEventListener('resize', _this._onResize, false);\n      } else if (element) {\n        _this._detectElementResize.removeResizeListener(element, _this._onResize);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onResize\", function () {\n      _this.updatePosition();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"__handleWindowScrollEvent\", function () {\n      if (!_this._isMounted) {\n        return;\n      }\n\n      var onScroll = _this.props.onScroll;\n      var scrollElement = _this.props.scrollElement;\n\n      if (scrollElement) {\n        var scrollOffset = getScrollOffset(scrollElement);\n        var scrollLeft = Math.max(0, scrollOffset.left - _this._positionFromLeft);\n        var scrollTop = Math.max(0, scrollOffset.top - _this._positionFromTop);\n\n        _this.setState({\n          isScrolling: true,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n\n        onScroll({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"__resetIsScrolling\", function () {\n      _this.setState({\n        isScrolling: false\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(WindowScroller, [{\n    key: \"updatePosition\",\n    value: function updatePosition() {\n      var scrollElement = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props.scrollElement;\n      var onResize = this.props.onResize;\n      var _this$state = this.state,\n          height = _this$state.height,\n          width = _this$state.width;\n      var thisNode = this._child || ReactDOM.findDOMNode(this);\n\n      if (thisNode instanceof Element && scrollElement) {\n        var offset = getPositionOffset(thisNode, scrollElement);\n        this._positionFromTop = offset.top;\n        this._positionFromLeft = offset.left;\n      }\n\n      var dimensions = getDimensions(scrollElement, this.props);\n\n      if (height !== dimensions.height || width !== dimensions.width) {\n        this.setState({\n          height: dimensions.height,\n          width: dimensions.width\n        });\n        onResize({\n          height: dimensions.height,\n          width: dimensions.width\n        });\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var scrollElement = this.props.scrollElement;\n      this._detectElementResize = createDetectElementResize();\n      this.updatePosition(scrollElement);\n\n      if (scrollElement) {\n        registerScrollListener(this, scrollElement);\n\n        this._registerResizeListener(scrollElement);\n      }\n\n      this._isMounted = true;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var scrollElement = this.props.scrollElement;\n      var prevScrollElement = prevProps.scrollElement;\n\n      if (prevScrollElement !== scrollElement && prevScrollElement != null && scrollElement != null) {\n        this.updatePosition(scrollElement);\n        unregisterScrollListener(this, prevScrollElement);\n        registerScrollListener(this, scrollElement);\n\n        this._unregisterResizeListener(prevScrollElement);\n\n        this._registerResizeListener(scrollElement);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var scrollElement = this.props.scrollElement;\n\n      if (scrollElement) {\n        unregisterScrollListener(this, scrollElement);\n\n        this._unregisterResizeListener(scrollElement);\n      }\n\n      this._isMounted = false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      var _this$state2 = this.state,\n          isScrolling = _this$state2.isScrolling,\n          scrollTop = _this$state2.scrollTop,\n          scrollLeft = _this$state2.scrollLeft,\n          height = _this$state2.height,\n          width = _this$state2.width;\n      return children({\n        onChildScroll: this._onChildScroll,\n        registerChild: this._registerChild,\n        height: height,\n        isScrolling: isScrolling,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        width: width\n      });\n    }\n  }]);\n\n  return WindowScroller;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  /**\n   * Function responsible for rendering children.\n   * This function should implement the following signature:\n   * ({ height, isScrolling, scrollLeft, scrollTop, width }) => PropTypes.element\n   */\n  \"children\": PropTypes.func.isRequired,\n\n  /** Callback to be invoked on-resize: ({ height, width }) */\n  \"onResize\": PropTypes.func.isRequired,\n\n  /** Callback to be invoked on-scroll: ({ scrollLeft, scrollTop }) */\n  \"onScroll\": PropTypes.func.isRequired,\n\n  /** Element to attach scroll event listeners. Defaults to window. */\n  \"scrollElement\": PropTypes.oneOfType([PropTypes.any, function () {\n    return (typeof Element === \"function\" ? PropTypes.instanceOf(Element) : PropTypes.any).apply(this, arguments);\n  }]),\n\n  /**\n   * Wait this amount of time after the last scroll event before resetting child `pointer-events`.\n   */\n  \"scrollingResetTimeInterval\": PropTypes.number.isRequired,\n\n  /** Height used for server-side rendering */\n  \"serverHeight\": PropTypes.number.isRequired,\n\n  /** Width used for server-side rendering */\n  \"serverWidth\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(WindowScroller, \"defaultProps\", {\n  onResize: function onResize() {},\n  onScroll: function onScroll() {},\n  scrollingResetTimeInterval: IS_SCROLLING_TIMEOUT,\n  scrollElement: getWindow(),\n  serverHeight: 0,\n  serverWidth: 0\n});\n\nexport { WindowScroller as default };\nimport PropTypes from \"prop-types\";","var toPropertyKey = require(\"./toPropertyKey.js\");\nfunction _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nmodule.exports = _defineProperty, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nmodule.exports = _nonIterableSpread, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\nmodule.exports = _arrayWithoutHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nmodule.exports = _iterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayWithHoles = require(\"./arrayWithHoles.js\");\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit.js\");\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\nvar nonIterableRest = require(\"./nonIterableRest.js\");\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\nmodule.exports = _slicedToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nmodule.exports = _toPrimitive, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","/**\n * Detect Element Resize.\n * https://github.com/sdecima/javascript-detect-element-resize\n * Sebastian Decima\n *\n * Forked from version 0.5.3; includes the following modifications:\n * 1) Guard against unsafe 'window' and 'document' references (to support SSR).\n * 2) Defer initialization code via a top-level function wrapper (to support SSR).\n * 3) Avoid unnecessary reflows by not measuring size for scroll events bubbling from children.\n * 4) Add nonce for style element.\n * 5) Added support for injecting custom window object\n **/\nexport default function createDetectElementResize(nonce, hostWindow) {\n  // Check `document` and `window` in case of server-side rendering\n  var _window;\n\n  if (typeof hostWindow !== 'undefined') {\n    _window = hostWindow;\n  } else if (typeof window !== 'undefined') {\n    _window = window;\n  } else if (typeof self !== 'undefined') {\n    _window = self;\n  } else {\n    _window = global;\n  }\n\n  var attachEvent = typeof _window.document !== 'undefined' && _window.document.attachEvent;\n\n  if (!attachEvent) {\n    var requestFrame = function () {\n      var raf = _window.requestAnimationFrame || _window.mozRequestAnimationFrame || _window.webkitRequestAnimationFrame || function (fn) {\n        return _window.setTimeout(fn, 20);\n      };\n\n      return function (fn) {\n        return raf(fn);\n      };\n    }();\n\n    var cancelFrame = function () {\n      var cancel = _window.cancelAnimationFrame || _window.mozCancelAnimationFrame || _window.webkitCancelAnimationFrame || _window.clearTimeout;\n      return function (id) {\n        return cancel(id);\n      };\n    }();\n\n    var resetTriggers = function resetTriggers(element) {\n      var triggers = element.__resizeTriggers__,\n          expand = triggers.firstElementChild,\n          contract = triggers.lastElementChild,\n          expandChild = expand.firstElementChild;\n      contract.scrollLeft = contract.scrollWidth;\n      contract.scrollTop = contract.scrollHeight;\n      expandChild.style.width = expand.offsetWidth + 1 + 'px';\n      expandChild.style.height = expand.offsetHeight + 1 + 'px';\n      expand.scrollLeft = expand.scrollWidth;\n      expand.scrollTop = expand.scrollHeight;\n    };\n\n    var checkTriggers = function checkTriggers(element) {\n      return element.offsetWidth != element.__resizeLast__.width || element.offsetHeight != element.__resizeLast__.height;\n    };\n\n    var scrollListener = function scrollListener(e) {\n      // Don't measure (which forces) reflow for scrolls that happen inside of children!\n      if (e.target.className && typeof e.target.className.indexOf === 'function' && e.target.className.indexOf('contract-trigger') < 0 && e.target.className.indexOf('expand-trigger') < 0) {\n        return;\n      }\n\n      var element = this;\n      resetTriggers(this);\n\n      if (this.__resizeRAF__) {\n        cancelFrame(this.__resizeRAF__);\n      }\n\n      this.__resizeRAF__ = requestFrame(function () {\n        if (checkTriggers(element)) {\n          element.__resizeLast__.width = element.offsetWidth;\n          element.__resizeLast__.height = element.offsetHeight;\n\n          element.__resizeListeners__.forEach(function (fn) {\n            fn.call(element, e);\n          });\n        }\n      });\n    };\n    /* Detect CSS Animations support to detect element display/re-attach */\n\n\n    var animation = false,\n        keyframeprefix = '',\n        animationstartevent = 'animationstart',\n        domPrefixes = 'Webkit Moz O ms'.split(' '),\n        startEvents = 'webkitAnimationStart animationstart oAnimationStart MSAnimationStart'.split(' '),\n        pfx = '';\n    {\n      var elm = _window.document.createElement('fakeelement');\n\n      if (elm.style.animationName !== undefined) {\n        animation = true;\n      }\n\n      if (animation === false) {\n        for (var i = 0; i < domPrefixes.length; i++) {\n          if (elm.style[domPrefixes[i] + 'AnimationName'] !== undefined) {\n            pfx = domPrefixes[i];\n            keyframeprefix = '-' + pfx.toLowerCase() + '-';\n            animationstartevent = startEvents[i];\n            animation = true;\n            break;\n          }\n        }\n      }\n    }\n    var animationName = 'resizeanim';\n    var animationKeyframes = '@' + keyframeprefix + 'keyframes ' + animationName + ' { from { opacity: 0; } to { opacity: 0; } } ';\n    var animationStyle = keyframeprefix + 'animation: 1ms ' + animationName + '; ';\n  }\n\n  var createStyles = function createStyles(doc) {\n    if (!doc.getElementById('detectElementResize')) {\n      //opacity:0 works around a chrome bug https://code.google.com/p/chromium/issues/detail?id=286360\n      var css = (animationKeyframes ? animationKeyframes : '') + '.resize-triggers { ' + (animationStyle ? animationStyle : '') + 'visibility: hidden; opacity: 0; } ' + '.resize-triggers, .resize-triggers > div, .contract-trigger:before { content: \" \"; display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; z-index: -1; } .resize-triggers > div { background: #eee; overflow: auto; } .contract-trigger:before { width: 200%; height: 200%; }',\n          head = doc.head || doc.getElementsByTagName('head')[0],\n          style = doc.createElement('style');\n      style.id = 'detectElementResize';\n      style.type = 'text/css';\n\n      if (nonce != null) {\n        style.setAttribute('nonce', nonce);\n      }\n\n      if (style.styleSheet) {\n        style.styleSheet.cssText = css;\n      } else {\n        style.appendChild(doc.createTextNode(css));\n      }\n\n      head.appendChild(style);\n    }\n  };\n\n  var addResizeListener = function addResizeListener(element, fn) {\n    if (attachEvent) {\n      element.attachEvent('onresize', fn);\n    } else {\n      if (!element.__resizeTriggers__) {\n        var doc = element.ownerDocument;\n\n        var elementStyle = _window.getComputedStyle(element);\n\n        if (elementStyle && elementStyle.position == 'static') {\n          element.style.position = 'relative';\n        }\n\n        createStyles(doc);\n        element.__resizeLast__ = {};\n        element.__resizeListeners__ = [];\n        (element.__resizeTriggers__ = doc.createElement('div')).className = 'resize-triggers';\n        var resizeTriggersHtml = '<div class=\"expand-trigger\"><div></div></div>' + '<div class=\"contract-trigger\"></div>';\n\n        if (window.trustedTypes) {\n          var staticPolicy = trustedTypes.createPolicy('react-virtualized-auto-sizer', {\n            createHTML: function createHTML() {\n              return resizeTriggersHtml;\n            }\n          });\n          element.__resizeTriggers__.innerHTML = staticPolicy.createHTML('');\n        } else {\n          element.__resizeTriggers__.innerHTML = resizeTriggersHtml;\n        }\n\n        element.appendChild(element.__resizeTriggers__);\n        resetTriggers(element);\n        element.addEventListener('scroll', scrollListener, true);\n        /* Listen for a css animation to detect element display/re-attach */\n\n        if (animationstartevent) {\n          element.__resizeTriggers__.__animationListener__ = function animationListener(e) {\n            if (e.animationName == animationName) {\n              resetTriggers(element);\n            }\n          };\n\n          element.__resizeTriggers__.addEventListener(animationstartevent, element.__resizeTriggers__.__animationListener__);\n        }\n      }\n\n      element.__resizeListeners__.push(fn);\n    }\n  };\n\n  var removeResizeListener = function removeResizeListener(element, fn) {\n    if (attachEvent) {\n      element.detachEvent('onresize', fn);\n    } else {\n      element.__resizeListeners__.splice(element.__resizeListeners__.indexOf(fn), 1);\n\n      if (!element.__resizeListeners__.length) {\n        element.removeEventListener('scroll', scrollListener, true);\n\n        if (element.__resizeTriggers__.__animationListener__) {\n          element.__resizeTriggers__.removeEventListener(animationstartevent, element.__resizeTriggers__.__animationListener__);\n\n          element.__resizeTriggers__.__animationListener__ = null;\n        }\n\n        try {\n          element.__resizeTriggers__ = !element.removeChild(element.__resizeTriggers__);\n        } catch (e) {// Preact compat; see developit/preact-compat/issues/228\n        }\n      }\n    }\n  };\n\n  return {\n    addResizeListener: addResizeListener,\n    removeResizeListener: removeResizeListener\n  };\n}","function _iterableToArrayLimit(arr, i) {\n  var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"];\n  if (null != _i) {\n    var _s,\n      _e,\n      _x,\n      _r,\n      _arr = [],\n      _n = !0,\n      _d = !1;\n    try {\n      if (_x = (_i = _i.call(arr)).next, 0 === i) {\n        if (Object(_i) !== _i) return;\n        _n = !1;\n      } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0);\n    } catch (err) {\n      _d = !0, _e = err;\n    } finally {\n      try {\n        if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return;\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n    return _arr;\n  }\n}\nmodule.exports = _iterableToArrayLimit, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var objectWithoutPropertiesLoose = require(\"./objectWithoutPropertiesLoose.js\");\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nmodule.exports = _objectWithoutProperties, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nmodule.exports = _objectWithoutPropertiesLoose, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;"],"sourceRoot":""}